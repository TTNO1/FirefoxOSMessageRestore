const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{AppConstants}=ChromeUtils.import("resource://gre/modules/AppConstants.jsm");ChromeUtils.import("resource://gre/modules/ActivitiesService.jsm");ChromeUtils.import("resource://gre/modules/AlarmService.jsm");ChromeUtils.import("resource://gre/modules/DownloadService.jsm");const isGonk=AppConstants.platform==="gonk";function debug(aStr){}
var remoteShell={get startURL(){let url=Services.prefs.getCharPref("b2g.multiscreen.system_remote_url");if(!url){console.error(`Please set the b2g.system_startup_url preference properly`);}
return url;},_started:false,hasStarted(){return this._started;},start(){this._started=true;
 let cookies=Cc["@mozilla.org/cookieService;1"].getService();if(!cookies){debug("No cookies service!");}
let startURL=this.startURL;let systemAppFrame=document.createXULElement("browser");systemAppFrame.setAttribute("type","chrome");systemAppFrame.setAttribute("id","systemapp");systemAppFrame.setAttribute("src","blank.html");debug(`Loading blank.html`);document.body.appendChild(systemAppFrame);this.contentBrowser=systemAppFrame;window.addEventListener("MozAfterPaint",this);window.addEventListener("sizemodechange",this);window.addEventListener("unload",this);let stop_url=null; let listener={onLocationChange:(webProgress,request,location,flags)=>{},onProgressChange:()=>{},onSecurityChange:()=>{},onStateChange:(webProgress,request,stateFlags,status)=>{if(stateFlags&Ci.nsIWebProgressListener.STATE_START){if(!stop_url){stop_url=request.name;}}
if(stateFlags&Ci.nsIWebProgressListener.STATE_STOP){if(stop_url&&request.name==stop_url){this.contentBrowser.removeProgressListener(listener);this.notifyContentWindowLoaded();}}},onStatusChange:()=>{},QueryInterface:ChromeUtils.generateQI([Ci.nsIWebProgressListener2,Ci.nsIWebProgressListener,Ci.nsISupportsWeakReference,]),};this.contentBrowser.addProgressListener(listener);debug(`Setting system url to ${startURL}`);this.contentBrowser.src=startURL;},stop(){window.removeEventListener("unload",this);window.removeEventListener("sizemodechange",this);},handleEvent(event){debug(`event: ${event.type}`);switch(event.type){case"sizemodechange":

if(window.windowState==window.STATE_MINIMIZED){this.contentBrowser.setVisible(false);}else{this.contentBrowser.setVisible(true);}
break;case"MozAfterPaint":window.removeEventListener("MozAfterPaint",this);break;case"unload":this.stop();break;}},
notifyContentWindowLoaded(){debug("notifyContentWindowLoaded");},};document.addEventListener("DOMContentLoaded",()=>{if(remoteShell.hasStarted()){console.error("ShellRemote has already started but didn't initialize!!!");return;}
Services.obs.addObserver(browserWindowImpl=>{debug("New web embedder created.");window.browserDOMWindow=browserWindowImpl;
window.setTimeout(()=>{Services.obs.notifyObservers(window,"shell-ready");},0);},"web-embedder-created");remoteShell.start();},{once:true});