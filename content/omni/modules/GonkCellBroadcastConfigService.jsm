//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
"use strict";const{classes:Cc,interfaces:Ci,utils:Cu,results:Cr}=Components;const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");XPCOMUtils.defineLazyGetter(this,"RIL_DEBUG",function(){let obj=Cu.import("resource://gre/modules/ril_consts_debug.js",null);return obj;});XPCOMUtils.defineLazyGetter(this,"SMSCB",function(){let obj=Cu.import("resource://gre/modules/sms_cb_consts.js",null);return obj;});XPCOMUtils.defineLazyServiceGetter(this,"gMobileMessageDBService","@mozilla.org/mobilemessage/gonkmobilemessagedatabaseservice;1","nsIGonkMobileMessageDatabaseService");const GONK_CELLBROADCASTCONFIGSERVICE_CONTRACTID="@mozilla.org/cellbroadcast/gonkconfigservice;1";const GONK_CELLBROADCASTCONFIGSERVICE_CID=Components.ID("{50e98d38-536a-4f13-99c2-7fb2de6bf2e0}");const GONK_CELLBROADCASTCONFIGHANDLER_CID=Components.ID("{e4f7b5dc-53ba-4653-8b87-62065db2a274}");const NS_XPCOM_SHUTDOWN_OBSERVER_ID="xpcom-shutdown";const NS_PREFBRANCH_PREFCHANGE_TOPIC_ID="nsPref:changed";XPCOMUtils.defineLazyGetter(this,"gRadioInterfaceLayer",function(){let ril={numRadioInterfaces:0};try{ril=Cc["@mozilla.org/ril;1"].getService(Ci.nsIRadioInterfaceLayer);}catch(e){}
return ril;});XPCOMUtils.defineLazyServiceGetter(this,"gCellBroadcastService","@mozilla.org/cellbroadcast/cellbroadcastservice;1","nsICellBroadcastService");XPCOMUtils.defineLazyServiceGetter(this,"gIccService","@mozilla.org/icc/iccservice;1","nsIIccService");XPCOMUtils.defineLazyServiceGetter(this,"gMobileConnectionService","@mozilla.org/mobileconnection/mobileconnectionservice;1","nsIMobileConnectionService");var KOOST_ENABLED=false;XPCOMUtils.defineLazyServiceGetter(this,"gCustomizationInfo","@kaiostech.com/customizationinfo;1","nsICustomizationInfo");KOOST_ENABLED=true;var DEBUG=false;function debug(s){dump("GonkCellBroadcastConfigService: "+s);}
function GonkCellBroadcastConfigService(){let numOfRilClients=gRadioInterfaceLayer.numRadioInterfaces;for(let clientId=0;clientId<numOfRilClients;clientId++){let handler=new GonkCellBroadcastConfigHandler(clientId);this._handlers.push(handler);}
Services.obs.addObserver(this,NS_XPCOM_SHUTDOWN_OBSERVER_ID,false);this._updateDebugFlag();}
GonkCellBroadcastConfigService.prototype={classID:GONK_CELLBROADCASTCONFIGSERVICE_CID,QueryInterface:ChromeUtils.generateQI([Ci.nsIGonkCellBroadcastConfigService,Ci.nsIObserver]),_handlers:[],_updateDebugFlag:function(){try{DEBUG=DEBUG||RIL_DEBUG.DEBUG_RIL||Services.prefs.getBoolPref(RIL_DEBUG.PREF_RIL_DEBUG_ENABLED);}catch(e){}},observe:function(aSubject,aTopic,aData){switch(aTopic){case NS_XPCOM_SHUTDOWN_OBSERVER_ID:Services.obs.removeObserver(this,NS_XPCOM_SHUTDOWN_OBSERVER_ID);this._handlers.forEach((handler)=>{handler.shutdown();});break;}},getCBSearchList:function(aClientId,aGsmCount,aGsms,aCdmaCount,aCdmas){let handler=this._handlers[aCLientId];if(!handler){if(DEBUG)debug("getCBSearchList unexpected client: "+aClientId);throw Cr.NS_ERROR_NOT_AVAILABLE;}
let config=handler.getConfig();aGsmCount.value=config.gsm.length;aGsms.value=config.gsm;aCdmaCount.value=config.cdma.length;aCdmas.value=config.cdma;},getCBDisabled:function(aClientId){return false;}};function GonkCellBroadcastConfigHandler(aClientId){if(DEBUG)debug("start");this._clientId=aClientId;this._icc=gIccService.getIccByServiceId(aClientId);this._icc.registerListener(this);this._conn=gMobileConnectionService.getItemByServiceId(aClientId);this._conn.registerListener(this);this._config={cdma:[],gsm:[]};this.notifyIccInfoChanged();}
GonkCellBroadcastConfigHandler.prototype={classID:GONK_CELLBROADCASTCONFIGHANDLER_CID,QueryInterface:ChromeUtils.generateQI([Ci.nsIIccListener,Ci.nsIMobileConnectionListener]),_clientId:0,_icc:null,_mccmnc:null,_config:null,_conn:null,notifyStkCommand:function(aStkProactiveCmd){},notifyStkSessionEnd:function(){},notifyCardStateChanged:function(){},notifyIccInfoChanged:function(){if(DEBUG)debug("notifyIccInfoChanged");if(!this._icc.iccInfo||!this._icc.iccInfo.mcc||!this._icc.iccInfo.mnc){if(DEBUG)debug("iccinfo is not ready");return;}
let mccmnc=this._icc.iccInfo.mcc+this._icc.iccInfo.mnc;if(this._mccmnc==mccmnc){if(DEBUG)debug("same mcc, mnc");return;}
this._mccmnc=mccmnc;if(!this._conn||this._conn.radioState!=Ci.nsIMobileConnection.MOBILE_RADIO_STATE_ENABLED){if(DEBUG)debug("radio is not enabled");return;}
this._updateCellBroadcastConfig();},notifyIsimInfoChanged:function(){},notifyVoiceChanged:function(){},notifyDataChanged:function(){},notifyDataError:function(message){},notifyCFStateChanged:function(action,reason,number,timeSeconds,serviceClass){},notifyEmergencyCbModeChanged:function(active,timeoutMs){debug("cb notifyEmergencyCbModeChanged  active : "+active);gCellBroadcastService.UpdatedECBM(active);},notifyOtaStatusChanged:function(status){},notifyRadioStateChanged:function(){if(DEBUG)debug("current radio state: "+this._conn.radioState);if(this._conn.radioState!=Ci.nsIMobileConnection.MOBILE_RADIO_STATE_ENABLED){if(DEBUG)debug("radio is not ready");return;}
this._clearCellBroadcastMessage();if(!this._mccmnc){if(DEBUG)debug("mcc, mnc is not ready");return;}
this._updateCellBroadcastConfig();},notifyClirModeChanged:function(mode){},notifyLastKnownNetworkChanged:function(){},notifyLastKnownHomeNetworkChanged:function(){},notifyNetworkSelectionModeChanged:function(){},notifyDeviceIdentitiesChanged:function(){},notifySignalStrengthChanged:function(){},notifyModemRestart:function(reason){},shutdown:function(){if(this._icc){this._icc.unregisterListener(this);}
if(this._conn){this._conn.unregisterListener(this);}},getConfig:function(){return this._config;},_updateCellBroadcastConfig:function(){if(this._mccmnc===null){if(DEBUG)debug("no mccmnc: "+this._clientId);return;}
let radioInterface=gRadioInterfaceLayer.getRadioInterface(this._clientId);if(!radioInterface){if(DEBUG)debug("no radio interface: "+this._clientId);return;}
let config=this._getCellBroadcastConfig();if(this._isDifferentConfig(this._config,config)){gCellBroadcastService.setCBSearchList(this._clientId,config.gsm.length,config.gsm,config.cdma.length,config.cdma);this._config=config;}},_isDifferentConfig:function(aOld,aNew){if(aOld.gsm.length!=aNew.gsm.length){return true;}
if(aOld.cdma.length!=aNew.cdma.length){return true;}
if(aOld.gsm.toString()!==aNew.gsm.toString()){return true;}
if(aOld.cdma.toString()!==aNew.cdma.toString()){return true;}},_getCellBroadcastConfig:function(){let enableEmergencyAlerts=gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_EMERGENCY_ALERTS,true);let enableEtwsAlerts=enableEmergencyAlerts;let enableCmasExtremeAlerts=enableEmergencyAlerts&&gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_CMAS_EXTREME_THREAT_ALERTS,true);let enableCmasSevereAlerts=enableEmergencyAlerts&&gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_CMAS_SEVERE_THREAT_ALERTS,true);let enableCmasAmberAlerts=enableEmergencyAlerts&&gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_CMAS_AMBER_ALERTS,true);let forceDisableEtwsCmasTest=gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_CARRIER_FORCE_DISABLE_ETWS_CMAS_TEST_BOOL,false);let enableEtwsTestAlerts=!forceDisableEtwsCmasTest&&enableEmergencyAlerts&&gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_ETWS_TEST_ALERTS,false);let enableCmasTestAlerts=!forceDisableEtwsCmasTest&&enableEmergencyAlerts&&gCustomizationInfo.getCustomizedValue(this._clientId,SMSCB.KEY_ENABLE_CMAS_TEST_ALERTS,true);let config={cdma:[],gsm:[]};config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL+1);if(enableCmasExtremeAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_LIKELY+1);}
if(enableCmasSevereAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_OBSERVED);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_LIKELY+1);}
if(enableCmasAmberAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY+1);}
if(enableCmasTestAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_REQUIRED_MONTHLY_TEST);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_OPERATOR_DEFINED_USE+1);}
config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL_LANGUAGE);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_PRESIDENTIAL_LEVEL_LANGUAGE+1);if(enableCmasExtremeAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_OBSERVED_LANGUAGE);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_IMMEDIATE_LIKELY_LANGUAGE+1);}
if(enableCmasSevereAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_EXTREME_EXPECTED_OBSERVED_LANGUAGE);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_SEVERE_EXPECTED_LIKELY_LANGUAGE+1);}
if(enableCmasAmberAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY_LANGUAGE);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_CHILD_ABDUCTION_EMERGENCY_LANGUAGE+1);}
if(enableCmasTestAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_REQUIRED_MONTHLY_TEST_LANGUAGE);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_OPERATOR_DEFINED_USE_LANGUAGE+1);}
if(enableCmasTestAlerts){config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_ALERT_OPERATOR_DEFINED_USE_LANGUAGE+1);config.gsm.push(Ci.nsIGonkCellBroadcastConfigService.MESSAGE_ID_CMAS_LAST_IDENTIFIER+1);}
if(DEBUG)debug("_getCellBroadcastConfig: "+this._clientId+", "+JSON.stringify(config));return config;},_clearCellBroadcastMessage:function(){let callback=(aRv,aDomMessage)=>{debug("_clearCellBroadcastMessage aRv = "+aRv);if(DEBUG&&!Components.isSuccessCode(aRv)){debug("Failed to clear cellbroadcast message");}};gMobileMessageDBService.removeAllCellBroadcastMessage(callback);}
};var EXPORTED_SYMBOLS=["GonkCellBroadcastConfigService"];