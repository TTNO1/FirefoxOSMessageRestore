//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
"use strict";const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");XPCOMUtils.defineLazyGetter(this,"RIL",function(){let obj=ChromeUtils.import("resource://gre/modules/ril_consts.js");return obj;});var RIL_DEBUG=ChromeUtils.import("resource://gre/modules/ril_consts_debug.js");XPCOMUtils.defineLazyServiceGetter(this,"gTelephonyService","@mozilla.org/telephony/telephonyservice;1","nsIGonkTelephonyService");XPCOMUtils.defineLazyServiceGetter(this,"gImsRegService","@mozilla.org/mobileconnection/imsregservice;1","nsIImsRegService");XPCOMUtils.defineLazyServiceGetter(this,"gImsServiceManager","@mozilla.org/b2g/imsservicemanager;1","nsIImsServiceManager");XPCOMUtils.defineLazyServiceGetter(this,"gMobileConnectionService","@mozilla.org/mobileconnection/mobileconnectionservice;1","nsIGonkMobileConnectionService");const IMSPHONE_SERVICE_CID=Components.ID("{acb11ddb-151e-4881-b4ac-f52852255d9e}");const nsIImsCallProfile=Ci.nsIImsCallProfile;const nsIImsCallSession=Ci.nsIImsCallSession;const nsIImsReasonInfo=Ci.nsIImsReasonInfo;const nsIImsRegHandler=Ci.nsIImsRegHandler;const nsIImsRegistration=Ci.nsIImsRegistration;const nsIImsStreamMediaProfile=Ci.nsIImsStreamMediaProfile;const nsIMobileConnection=Ci.nsIMobileConnection;const nsITelephonyCallInfo=Ci.nsITelephonyCallInfo;const nsITelephonyService=Ci.nsITelephonyService;const CALL_INDEX_INVALID=-1;const OP_INVALID_STATE_ERROR="InvalidStateError";const EMERGENCY_CB_MODE_TIMEOUT_MS=5*60*1000;const OIR_IMS_TO_DOM_MAPPING=[];OIR_IMS_TO_DOM_MAPPING[nsIImsCallProfile.OIR_DEFAULT]=nsITelephonyService.CALL_PRESENTATION_UNKNOWN;OIR_IMS_TO_DOM_MAPPING[nsIImsCallProfile.OIR_PRESENTATION_RESTRICTED]=nsITelephonyService.CALL_PRESENTATION_RESTRICTED;OIR_IMS_TO_DOM_MAPPING[nsIImsCallProfile.OIR_PRESENTATION_NOT_RESTRICTED]=nsITelephonyService.CALL_PRESENTATION_ALLOWED;OIR_IMS_TO_DOM_MAPPING[nsIImsCallProfile.OIR_PRESENTATION_UNKNOWN]=nsITelephonyService.CALL_PRESENTATION_UNKNOWN;OIR_IMS_TO_DOM_MAPPING[nsIImsCallProfile.OIR_PRESENTATION_PAYPHONE]=nsITelephonyService.CALL_PRESENTATION_PAYPHONE;const CLIR_TO_IMS_OIR_MAPPING=[];CLIR_TO_IMS_OIR_MAPPING[nsIMobileConnection.CLIR_DEFAULT]=nsIImsCallProfile.OIR_DEFAULT;CLIR_TO_IMS_OIR_MAPPING[nsIMobileConnection.CLIR_INVOCATION]=nsIImsCallProfile.OIR_PRESENTATION_RESTRICTED;CLIR_TO_IMS_OIR_MAPPING[nsIMobileConnection.CLIR_SUPPRESSION]=nsIImsCallProfile.OIR_PRESENTATION_NOT_RESTRICTED;const VOWIFI_QUALITY_IMS_TO_DOM_MAPPING=[];VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.VOWIFI_QUALITY_NONE]=nsITelephonyCallInfo.VOWIFI_QUALITY_NONE;VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.VOWIFI_QUALITY_EXCELLENT]=nsITelephonyCallInfo.VOWIFI_QUALITY_EXCELLENT;VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.VOWIFI_QUALITY_FAIR]=nsITelephonyCallInfo.VOWIFI_QUALITY_FAIR;VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.VOWIFI_QUALITY_BAD]=nsITelephonyCallInfo.VOWIFI_QUALITY_BAD;const RTT_MODE_IMS_TO_DOM_MAPPING=[];RTT_MODE_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.RTT_MODE_DISABLED]=nsITelephonyService.RTT_MODE_OFF;RTT_MODE_IMS_TO_DOM_MAPPING[nsIImsStreamMediaProfile.RTT_MODE_FULL]=nsITelephonyService.RTT_MODE_FULL;const RTT_MODE_DOM_TO_IMS_MAPPING=[];RTT_MODE_DOM_TO_IMS_MAPPING[nsITelephonyService.RTT_MODE_OFF]=nsIImsStreamMediaProfile.RTT_MODE_DISABLED;RTT_MODE_DOM_TO_IMS_MAPPING[nsITelephonyService.RTT_MODE_FULL]=nsIImsStreamMediaProfile.RTT_MODE_FULL;const RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING=[];RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallSession.SESSION_MODIFY_REQUEST_SUCCESS]=nsITelephonyService.RTT_MODIFY_STATUS_SUCCESS;RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallSession.SESSION_MODIFY_REQUEST_FAIL]=nsITelephonyService.RTT_MODIFY_STATUS_FAIL;RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallSession.SESSION_MODIFY_REQUEST_INVALID]=nsITelephonyService.RTT_MODIFY_STATUS_INVALID;RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallSession.SESSION_MODIFY_REQUEST_TIMED_OUT]=nsITelephonyService.RTT_MODIFY_STATUS_TIMED_OUT;RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallSession.SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE]=nsITelephonyService.RTT_MODIFY_STATUS_REJECTED;const VER_STATUS_IMS_TO_DOM_MAPPING=[];VER_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallProfile.VERIFICATION_STATUS_NOT_VERIFIED]=nsITelephonyCallInfo.VER_NONE;VER_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallProfile.VERIFICATION_STATUS_PASSED]=nsITelephonyCallInfo.VER_PASS;VER_STATUS_IMS_TO_DOM_MAPPING[nsIImsCallProfile.VERIFICATION_STATUS_FAILED]=nsITelephonyCallInfo.VER_FAIL;const CAPABILITY_TO_RADIO_TECH_MAPPING=[];CAPABILITY_TO_RADIO_TECH_MAPPING[nsIImsRegHandler.IMS_CAPABILITY_UNKNOWN]=nsITelephonyCallInfo.RADIO_TECH_PS;CAPABILITY_TO_RADIO_TECH_MAPPING[nsIImsRegHandler.IMS_CAPABILITY_VOICE_OVER_CELLULAR]=nsITelephonyCallInfo.RADIO_TECH_PS;CAPABILITY_TO_RADIO_TECH_MAPPING[nsIImsRegHandler.IMS_CAPABILITY_VOICE_OVER_WIFI]=nsITelephonyCallInfo.RADIO_TECH_WIFI;CAPABILITY_TO_RADIO_TECH_MAPPING[nsIImsRegHandler.IMS_CAPABILITY_VIDEO_OVER_CELLULAR]=nsITelephonyCallInfo.RADIO_TECH_PS;CAPABILITY_TO_RADIO_TECH_MAPPING[nsIImsRegHandler.IMS_CAPABILITY_VIDEO_OVER_WIFI]=nsITelephonyCallInfo.RADIO_TECH_WIFI;var DEBUG=RIL_DEBUG.DEBUG_RIL;function updateDebugFlag(){let debugPref;try{debugPref=debugPref||Services.prefs.getBoolPref(RIL_DEBUG.PREF_RIL_DEBUG_ENABLED);}catch(e){debugPref=false;}
DEBUG=RIL_DEBUG.DEBUG_RIL||debugPref;}
updateDebugFlag();var DEBUG_CONF=true;function debug(s){dump("ImsPhoneService: "+s+"\n");}
function getImsReasonString(_aCode){return RIL.GECKO_ERROR_GENERIC_FAILURE;}
function getMMTelFeatureById(aServiceId){let imsHandler=gImsRegService.getHandlerByServiceId(aServiceId);if(imsHandler){let gonkHandler=imsHandler.QueryInterface(Ci.nsIGonkImsRegHandler);if(gonkHandler){return gonkHandler.imsMMTelFeature;}}
return null;}
function convertToDomRTTMode(aImsValue){return(RTT_MODE_IMS_TO_DOM_MAPPING[aImsValue]||nsITelephonyService.RTT_MODE_OFF);}
function convertToImsRTTMode(aDomValue){return(RTT_MODE_DOM_TO_IMS_MAPPING[aDomValue]||nsIImsStreamMediaProfile.RTT_MODE_DISABLED);}
function ImsStreamMediaProfile(){this._audioQuality=-1;this._rttMode=nsIImsStreamMediaProfile.RTT_MODE_DISABLED;this._audioDirection=nsIImsStreamMediaProfile.DIRECTION_INVALID;}
ImsStreamMediaProfile.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsStreamMediaProfile]),_audioQuality:null,_rttMode:null,_isReceivingRttAudio:null,_audioDirection:null,_vowifiQuality:null,get audioQuality(){return this._audioQuality;},setAudioQuality(aQuality){if(!this.isValidAudioQuality(aQuality)){return;}
this._audioQuality=aQuality;},get rttMode(){return this._rttMode;},setRttMode(aRttMode){if(!this.isValidRttMode(aRttMode)){return;}
this._rttMode=aRttMode;},get isReceivingRttAudio(){return this._isReceivingRttAudio;},setIsReceivingRttAudio(aIsReceivingRttAudio){this._isReceivingRttAudio=aIsReceivingRttAudio;},get audioDirection(){return this._audioDirection;},setAudioDirection(aDirection){if(!this.isValidAudioDirection(aDirection)){return;}
this._audioDirection=aDirection;},get vowifiQuality(){return this._vowifiQuality;},setVowifiQuality(aQuality){if(!this.isValidVowifiQuality(aQuality)){return;}
this._vowifiQuality=aQuality;},update(aSrcProfile){if(!aSrcProfile){return;}
this.setAudioQuality(aSrcProfile.audioQuality);this.setRttMode(aSrcProfile.rttMode);this.setIsReceivingRttAudio(aSrcProfile.isReceivingRttAudio);this.setAudioDirection(aSrcProfile.audioDirection);this.setVowifiQuality(aSrcProfile.vowifiQuality);},isValidAudioQuality(aQuality){return(aQuality>=nsIImsStreamMediaProfile.AUDIO_QUALITY_NONE&&aQuality<=nsIImsStreamMediaProfile.AUDIO_QUALITY_EVS_FB);},isValidRttMode(aRttMode){return[nsIImsStreamMediaProfile.RTT_MODE_DISABLED,nsIImsStreamMediaProfile.RTT_MODE_FULL,].includes(aRttMode);},isValidAudioDirection(aDirection){return(aDirection>=nsIImsStreamMediaProfile.DIRECTION_INACTIVE&&aDirection<=nsIImsStreamMediaProfile.DIRECTION_SEND_RECEIVE);},isValidVowifiQuality(aQuality){return(aQuality>=nsIImsStreamMediaProfile.VOWIFI_QUALITY_NONE&&aQuality<=nsIImsStreamMediaProfile.VOWIFI_QUALITY_BAD);},};function ImsCallProfile(aSrcProfile){this._serviceType=nsIImsCallProfile.SERVICE_TYPE_NORMAL;this._callType=nsIImsCallProfile.CALL_TYPE_VOICE;this._mediaProfile=new ImsStreamMediaProfile();if(aSrcProfile){this.update(aSrcProfile);}}
ImsCallProfile.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsCallProfile]),_serviceType:null,_callType:null,_mediaProfile:null,_restrictCause:null,_oir:null,_cnap:null,_originatingIdentity:null,_callingName:null,_dialString:null,get serviceType(){return this._serviceType;},setServiceType(aServiceType){if(!this.isValidServiceType(aServiceType)){return;}
this._serviceType=aServiceType;},get callType(){return this._callType;},setCallType(aCallType){if(!this.isValidCallType(aCallType)){return;}
this._callType=aCallType;},get mediaProfile(){return this._mediaProfile;},setMediaProfile(aMediaProfile){if(aMediaProfile){this._mediaProfile=aMediaProfile;}},get originatingIdentity(){return this._originatingIdentity;},setOriginatingIdentity(aOriginatingIdentity){if(aOriginatingIdentity){this._originatingIdentity=aOriginatingIdentity;}},get callingName(){return this._callingName;},setCallingName(aCallingName){if(aCallingName){this._callingName=aCallingName;}},get oir(){return this._oir;},setOir(aOir){if(!this.isValidOir(aOir)){return;}
this._oir=aOir;},get cnap(){return this._cnap;},setCnap(aCnap){if(!this.isValidOir(aCnap)){return;}
this._cnap=aCnap;},get dialString(){return this._dialString;},setDialString(aDialString){this._dialString=aDialString;},get restrictCause(){return this._restrictCause;},setRestrictCause(aRestrictCause){this._restrictCause=aRestrictCause;},update(aImsCallProfileSrc){let changed=false;let keys=["serviceType","callType","originatingIdentity","oir","cnap","dialString","restrictCause",];for(let key of keys){let memberKey="_"+key;if(this[memberKey]!=aImsCallProfileSrc[key]){this[memberKey]=aImsCallProfileSrc[key];changed=true;}}
this.mediaProfile.update(aImsCallProfileSrc.mediaProfile);return changed;},isValidServiceType(aServiceType){return[nsIImsCallProfile.SERVICE_TYPE_NONE,nsIImsCallProfile.SERVICE_TYPE_NORMAL,nsIImsCallProfile.SERVICE_TYPE_EMERGENCY,].includes(aServiceType);},isValidCallType(aCallType){return[nsIImsCallProfile.CALL_TYPE_VOICE_N_VIDEO,nsIImsCallProfile.CALL_TYPE_VOICE,nsIImsCallProfile.CALL_TYPE_VIDEO_N_VOICE,nsIImsCallProfile.CALL_TYPE_VT,nsIImsCallProfile.CALL_TYPE_VT_TX,nsIImsCallProfile.CALL_TYPE_VT_RX,nsIImsCallProfile.CALL_TYPE_VT_NODIR,nsIImsCallProfile.CALL_TYPE_VS,nsIImsCallProfile.CALL_TYPE_VS_RX,].includes(aCallType);},isValidOir(aOir){return[nsIImsCallProfile.OIR_DEFAULT,nsIImsCallProfile.OIR_PRESENTATION_RESTRICTED,nsIImsCallProfile.OIR_PRESENTATION_NOT_RESTRICTED,nsIImsCallProfile.OIR_PRESENTATION_PAYPHONE,].includes(aOir);},isValidDialString(aDialString){return aDialString===nsIImsCallProfile.DIALSTRING_NORMAL;},};function ImsPhoneCall(aImsPhone){this.init();this._serviceId=aImsPhone._serviceId;this._imsPhone=aImsPhone;}
ImsPhoneCall.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsCallSessionListener,Ci.nsIImsDtmfCallback,]),_serviceId:null,_callSession:null,_callSessionMergeTransient:null,_imsPhone:null,_opCallback:null,state:null,callIndex:null,toa:null,isMpty:null,number:null,numberPresentation:null,name:null,namePresentation:null,rttMode:null,isVt:null,isConferenceParent:null,voiceQuality:null,isMT:null,isReceivingRttAudio:null,vowifQuality:null,capabilities:null,isMarkable:null,verStatus:null,_isLocalHangup:null,_lastDisconnectReason:null,_isPlayingRingbackTone:null,_mergeHost:null,_mergePeer:null,_participantList:null,_participantIndexer:null,onCallSessionProgressing(aMediaProfile){if(DEBUG){debug("onCallSessionProgressing: "+this._callSession.getCallId());}
let audioDirection=aMediaProfile.audioDirection;if(DEBUG){debug("onCallSessionProgressing audioDirection: "+audioDirection);}
let ringbackToneChanged=false;if(this._isPlayingRingbackTone){if(audioDirection!==nsIImsStreamMediaProfile.DIRECTION_INACTIVE){ringbackToneChanged=true;this._isPlayingRingbackTone=false;}}else if(audioDirection===nsIImsStreamMediaProfile.DIRECTION_INACTIVE){ringbackToneChanged=true;this._isPlayingRingbackTone=true;}
if(ringbackToneChanged){this._imsPhone.notifyImsRingbackTone(this._isPlayingRingbackTone);}
this.callIndex=this._computeCallIndex(this._callSession);if(this._opCallback&&this.state===RIL.CALL_STATE_DIALING){this._opCallback.notifySuccess();this._opCallback=null;}
this.state=RIL.CALL_STATE_ALERTING;if(DEBUG){debug("onCallSessionProgressing rttMode: "+aMediaProfile.rttMode);}
this.rttMode=convertToDomRTTMode(aMediaProfile.rttMode);this._imsPhone.notifyImsCallStateChanged(this);},onCallSessionStarted(aProfile){if(DEBUG){debug("onCallSessionStarted: "+this._callSession.getCallId());}
this.state=RIL.CALL_STATE_ACTIVE;this.updatePropertiesByProfile(aProfile,this._callSession.getLocalCallProfile(),this._callSession.getRemoteCallProfile());this._imsPhone.notifyImsCallConnected(this);},onCallSessionStartFailed(aReasonInfo){if(DEBUG){debug("onCallSessionStartFailed: "+this._callSession.getCallId());}
this._lastDisconnectReason=aReasonInfo.code;if(this._opCallback&&this.state===RIL.CALL_STATE_DIALING){this._opCallback.notifyError(this.convertToRilCause(aReasonInfo.code));this._opCallback=null;}},onCallSessionTerminated(aReasonInfo){if(DEBUG){debug("onCallSessionTerminated code: "+aReasonInfo.code+", extraCode: "+aReasonInfo.extraCode+", extraMessage: "+aReasonInfo.extraMessage);}
let cause=this._lastDisconnectReason||this.convertToRilCause(aReasonInfo.code);if(this._opCallback){this._opCallback.notifySuccess();this._opCallback=null;}
let localHangup=this._isLocalHangup;let state=this.state;this.reset();if(state==RIL.CALL_STATE_DIALING){this._imsPhone._lastCallDisconnectCause=cause;return;}
this._imsPhone.notifyImsCallDisconnected(this,cause,localHangup);},onSessionTerminated(aReasonInfo,aSession){if(DEBUG){debug("onCallSessionTerminated code: "+aReasonInfo.code+", extraCode: "+aReasonInfo.extraCode+", extraMessage: "+aReasonInfo.extraMessage+", sessionId: "+aSession.getCallId());}
if(aSession==this._callSessionMergeTransient){this.onCallSessionMergeFailed();return;}
this.onCallSessionTerminated(aReasonInfo);},onCallSessionHeld(_aProfile){if(DEBUG){debug("onCallSessionHeld: "+this._callSession.getCallId());}
this.state=RIL.CALL_STATE_HOLDING;this._imsPhone.notifyImsCallHeld(this);},onCallSessionHoldFailed(_aReasonInfo){if(DEBUG){debug("onCallSessionHoldFailed: "+this._callSession.getCallId());}
this._imsPhone.notifyImsCallHeld(this,RIL.GECKO_ERROR_GENERIC_FAILURE);},onCallSessionResumed(_aProfile){if(DEBUG){debug("onCallSessionResumed: "+this._callSession.getCallId());}
this.state=RIL.CALL_STATE_ACTIVE;this._imsPhone.notifyImsCallResume(this);},onCallSessionResumeFailed(_aReasonInfo){if(DEBUG){debug("onCallSessionResumeFailed: "+this._callSession.getCallId());}
this._imsPhone.notifyImsCallResume(this,RIL.GECKO_ERROR_GENERIC_FAILURE);},onCallSessionHoldReceived(_aProfile){if(DEBUG){debug("onCallSessionHoldReceived: "+this._callSession.getCallId());}
this._imsPhone.notifyCallHoldReceived(this);},onCallSessionResumeReceived(_aProfile){if(DEBUG){debug("onCallSessionResumeReceived: "+this._callSession.getCallId());}
this._imsPhone.notifyCallResumeReceived(this);},onCallSessionUpdated(aProfile){if(DEBUG){debug("onCallSessionUpdated: "+this._callSession.getCallId()+", aProfile: "+JSON.stringify(aProfile));}
let changed=this.updatePropertiesByProfile(aProfile);if(changed){this._imsPhone.notifyImsCallStateChanged(this);}},onCallSessionRttModifyRequestReceived(aProfile){if(DEBUG){debug("onCallSessionRttModifyRequestReceived: "+this._callSession.getCallId()+", aProfile: "+JSON.stringify(aProfile));}
let rttMode=aProfile.mediaProfile.rttMode;this._imsPhone.notifyImsRttModifyRequestReceived(this,rttMode);},onCallSessionRttModifyResponseReceived(aStatus){if(DEBUG){debug("onCallSessionRttModifyResponseReceived: "+this._callSession.getCallId()+", status: "+aStatus);}
this._imsPhone.notifyImsRttModifyResponseReceived(this,aStatus);},onCallSessionRttMessageReceived(aRttMessage){if(DEBUG){debug("onCallSessionRttMessageReceived: "+this._callSession.getCallId()+", message: "+aRttMessage);}
this._imsPhone.notifyImsRttMessageReceived(this,aRttMessage);},onCallSessionRttAudioIndicatorChanged(aMediaProfile){if(DEBUG){debug("onCallSessionRttAudioIndicatorChanged: "+this._callSession.getCallId()+", isReceivingRttAudio: "+aMediaProfile.isReceivingRttAudio);}
this.isReceivingRttAudio=aMediaProfile.isReceivingRttAudio;},onCallSessionSuppServiceReceived(_aSuppNotification){if(DEBUG){debug("onCallSessionSuppServiceReceived: "+this._callSession.getCallId());}},onCallSessionTtyModeReceived(_aMode){if(DEBUG){debug("onCallSessionTtyModeReceived: "+this._callSession.getCallId());}},onCallSessionMayHandover(aSrcTech,aTargetTech){if(DEBUG){debug("onCallSessionMayHandover: "+this._callSession.getCallId()+", from "+aSrcTech+" to "+aTargetTech);}},onCallSessionHandover(aSrcTech,aTargetTech){if(DEBUG){debug("onCallSessionHandover: "+this._callSession.getCallId()+", from "+aSrcTech+" to "+aTargetTech);}
this.updatePropertiesByProfile(this._callSession.getCallProfile(),this._callSession.getLocalCallProfile(),this._callSession.getRemoteCallProfile());this._imsPhone.notifyImsCallStateChanged(this);},onCallSessionHandoverFailed(aSrcTech,aTargetTech,aReasonInfo){if(DEBUG){debug("onCallSessionHandoverFailed: "+this._callSession.getCallId()+", from "+aSrcTech+" to "+aTargetTech+", reason: "+aReasonInfo.code);}
this._imsPhone.notifyImsCallSessionHandoverFailed(aSrcTech,aTargetTech);},onCallSessionConferenceStateUpdated(aParticipants){if(DEBUG){debug("onCallSessionConferenceStateUpdated: "+this._callSession.getCallId());}
let imsParticipantList=this._parseConferenceStatus(aParticipants);let removedParticipants=new Set();let allIndexes=new Set([...Object.keys(this._participantList),...Object.keys(imsParticipantList),]);let connectedSize=0;for(let index of allIndexes){let cacheParticipant=this._participantList[index];let imsParticipant=imsParticipantList[index];if(cacheParticipant&&!imsParticipant){removedParticipants.add(cacheParticipant);delete this._participantList[index];}else if(cacheParticipant&&imsParticipant){imsParticipant.callIndex=cacheParticipant.callIndex;imsParticipant.localHangup=cacheParticipant.localHangup;this._participantList[index]=imsParticipant;connectedSize++;}else if(!cacheParticipant&&imsParticipant){this._participantIndexer++;imsParticipant.callIndex=this._participantIndexer;this._participantList[index]=imsParticipant;connectedSize++;}}
if(this._callSessionMergeTransient){return;}
if(!connectedSize){if(DEBUG){debug("return due to 0 participant");}
return;}
this._handleDisconnectParticipant(removedParticipants);this._imsPhone.notifyImsCallStateChanged();},_parseConferenceStatus(aParticipants){let participantList={};for(let participant of aParticipants){if(participant.status===Ci.nsIImsConferenceParticipant.STATUS_DISCONNECTED){continue;}
let number=this._extractNumberFromUri(participant.handleUri);let parsedParticipant={callIndex:0,number,handleUri:participant.handleUri,name:participant.displayName,displayName:participant.displayName,status:participant.status,endpointUri:participant.endpointUri,};participantList[parsedParticipant.number]=parsedParticipant;}
if(DEBUG_CONF){debug("=== Print parsed participants ===");this._printParticipants(participantList);}
return participantList;},_extractNumberFromUri(aHandleUri){let parts=aHandleUri.split(/[@;:]/);if(parts.length>=1){return parts[1];}
return aHandleUri;},_printParticipants(aParticipants){Object.keys(aParticipants).forEach(index=>{let participant=aParticipants[index];if(participant){this._printParticipant(participant);}});},_printParticipant(aParticipant){debug("handleUri: "+aParticipant.handleUri+", displayName: "+aParticipant.displayName+", status: "+aParticipant.status+", endpointUri: "+aParticipant.endpointUri);},_handleDisconnectParticipant(aRemovedParticipants){if(aRemovedParticipants){aRemovedParticipants.forEach(removedCall=>{this._imsPhone.notifyImsConferenceParticipantDisconnected(removedCall,RIL.GECKO_CALL_ERROR_NORMAL_CALL_CLEARING);});}},onCallSessionRemoveParticipantsRequestDelivered(){if(DEBUG){debug("onCallSessionRemoveParticipantsRequestDelivered: "+this._callSession.getCallId());}
if(this._opCallback){this._opCallback.notifySuccess();this._opCallback=null;}},onCallSessionRemoveParticipantsRequestFailed(_aReasonInfo){if(DEBUG){debug("onCallSessionRemoveParticipantsRequestFailed: "+this._callSession.getCallId());}
if(this._opCallback){this._opCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);this._opCallback=null;}},onCallSessionTransferred(){if(DEBUG){debug("onCallSessionTransferred: "+this._callSession.getCallId());}
this._imsPhone.notifyImsCallTransferred();},onCallSessionTransferFailed(_aReasonInfo){if(DEBUG){debug("onCallSessionTransferFailed: "+this._callSession.getCallId());}
this._imsPhone.notifyImsCallTransferred(RIL.GECKO_ERROR_GENERIC_FAILURE);},onCallSessionMergeStarted(aNewSession,_aProfile){if(DEBUG){debug("ImsPhoneCall:onCallSessionMergeStarted, newSessionId: "+aNewSession.getCallId());}
let callSession=new ImsCallSession(aNewSession);this._callSessionMergeTransient=callSession;if(!this.isConferenceParent){this._callSessionMergeTransient.setListener(this);this._participantIndexer=this._computeCallIndex(aNewSession)*5;}},onCallSessionMergeComplete(aNewSession){if(DEBUG){debug("ImsPhoneCall:onCallSessionMergeComplete, callId:"+this._callSession.getCallId()+" isHost: "+!!this._mergePeer+", newSessionId: "+aNewSession.getCallId());}
if(this._mergePeer){let swapRequired=false;if(this._callSessionMergeTransient){this.resetCallSession();this._takeOver(this._callSessionMergeTransient);this._callSessionMergeTransient=null;this.callIndex=this._computeCallIndex(this._callSession);this.isMpty=true;this.isConferenceParent=true;}else if(this.state!=RIL.CALL_STATE_ACTIVE){swapRequired=true;}
this._mergePeer.onCallSessionMergeComplete(aNewSession);this.updatePropertiesByProfile(this._callSession.getCallProfile());this._imsPhone.notifyImsCallMergeComplete(this,swapRequired);}else if(this._mergeHost){this.reset();}
this._resetMergeInfo();},onCallSessionMergeFailed(){if(this.isConferenceParent){this._mergePeer.setMergeHost(null);this.setMergePeer(null);}else{this._resetConferenceInfo();}},init(){this._imsPhone=null;this.reset();},reset(){this.resetCallSession();this._isLocalHangup=false;this._lastDisconnectReason=null;this._resetConferenceInfo();if(this._opCallback){this._opCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);this._opCallback=null;}
this.state=RIL.CALL_STATE_UNKNOWN;this.callIndex=CALL_INDEX_INVALID;this.toa=RIL.TOA_UNKNOWN;this.isMpty=false;this.number=null;this.numberPresentation=nsITelephonyService.CALL_PRESENTATION_ALLOWED;this.name=null;this.namePresentation=nsITelephonyService.CALL_PRESENTATION_ALLOWED;this.rttMode=RIL.RTT_MODE_OFF;this.isVt=false;this.isConferenceParent=false;this.voiceQuality=nsITelephonyService.CALL_VOICE_QUALITY_NORMAL;this.isMT=false;this._isPlayingRingbackTone=false;this.isReceivingRttAudio=false;this.vowifiCallQuality=nsITelephonyService.VOWIFI_QUALITY_NONE;this.isMarkable=false;this.verStatus=nsITelephonyCallInfo.VER_NONE;this.capabilities=nsITelephonyCallInfo.CAPABILITY_SUPPORTS_NONE;},setCallSession(aCallSession){if(!aCallSession){return;}
this._callSession=aCallSession;this._callSession.setListener(this);},resetCallSession(){if(DEBUG){debug("resetCallSession");}
if(this._callSession){this._callSession.setListener(null);this._callSession.close();this._callSession=null;}
this.callIndex=CALL_INDEX_INVALID;},dial(aDialRequest,aCallback){if(DEBUG){debug("dial:");}
let callProfile=this._createMOImsCallProfile(aDialRequest);let callSession=this._imsPhone.getMMTel().createCallSession(callProfile);if(!callSession){aCallback.notifyError(RIL.GECKO_CALL_ERROR_UNSPECIFIED);return;}
this.state=RIL.CALL_STATE_UNKNOWN;if(DEBUG){debug("dial callsession initial state: "+callSession.getState());}
this.take(callSession,RIL.CALL_STATE_DIALING,false);this._callSession.start(aDialRequest.number,callProfile);this.number=aDialRequest.number;this.updatePropertiesByProfile(this._callSession.getCallProfile());if(DEBUG){debug("dial callsession initial state: "+callSession.getState());}
this._opCallback=aCallback;},accept(aType,aRttMode){if(DEBUG){debug("accept call with type: "+nsIImsCallProfile.CALL_TYPE_VOICE);}
let profile=new ImsCallProfile(this._callSession.getCallProfile());profile.mediaProfile.setRttMode(convertToImsRTTMode(aRttMode));this._callSession.accept(aType,profile.mediaProfile);},reject(aReason){let code=nsIImsReasonInfo.CODE_USER_DECLINE;if(aReason===nsITelephonyService.CALL_FAIL_USER_MARKED_UNWANTED&&this.isMarkable){code=nsIImsReasonInfo.CODE_SIP_USER_MARKED_UNWANTED;}
this._lastDisconnectReason=RIL.GECKO_CALL_ERROR_NORMAL_CALL_CLEARING;this._callSession.reject(code);},hangup(aCallIndex,aReason,aCallback){if(this.state===RIL.CALL_STATE_INCOMING||this.state===RIL.CALL_STATE_WAITING||this.state===RIL.CALL_STATE_UNKNOWN){if(aCallback){aCallback.notifyError(OP_INVALID_STATE_ERROR);}
return;}
this._lastDisconnectReason=RIL.GECKO_CALL_ERROR_NORMAL_CALL_CLEARING;if(this.callIndex==aCallIndex){let code=nsIImsReasonInfo.CODE_USER_TERMINATED;if(aReason===nsITelephonyService.CALL_FAIL_USER_MARKED_UNWANTED&&this.isMarkable){code=nsIImsReasonInfo.CODE_SIP_USER_MARKED_UNWANTED;}
this._callSession.terminate(code);this._isLocalHangup=true;if(aCallback){aCallback.notifySuccess();}
return;}
let participant=this.getParticipantByCallIndex(aCallIndex);if(participant){this._opCallback=aCallback;if(DEBUG_CONF){debug("To removeParticipants: "+[participant.handleUri]);}
this._callSession.removeParticipants([participant.handleUri]);return;}
if(aCallback){aCallback.notifyError(OP_INVALID_STATE_ERROR);}},hasCallIndex(aCallIndex){if(this.callIndex==aCallIndex){return true;}
if(this.getParticipantByCallIndex(aCallIndex)){return true;}
return false;},onIncomingCall(aCallSession,aIsWaitingCall=false){let state=aIsWaitingCall?RIL.CALL_STATE_WAITING:RIL.CALL_STATE_INCOMING;this.take(aCallSession,state,true);this.updatePropertiesByProfile(this._callSession.getCallProfile(),this._callSession.getLocalCallProfile(),this._callSession.getRemoteCallProfile());this._imsPhone.notifyImsIncomingCall(this);},onUnknownCall(aCallSession){this.take(aCallSession,RIL.CALL_STATE_DIALING,false);this.updatePropertiesByProfile(this._callSession.getCallProfile());this._imsPhone.notifyImsUnknownCall(this);},take(aCallSession,aCallState,aIncoming){this.setCallSession(aCallSession);this.state=aCallState;this.callIndex=this._computeCallIndex(aCallSession);this.isMT=aIncoming;},hold(){if(this.state!=RIL.CALL_STATE_ACTIVE){return false;}
this._callSession.hold();return true;},resume(){if(this.state!=RIL.CALL_STATE_HOLDING){return false;}
this._callSession.resume();return true;},sendDtmf:function startTone(aDtmfChar,aCallback){if(DEBUG){debug("sendDtmf: "+aDtmfChar);}
let callback={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsDtmfCallback]),onDtmfDone(){aCallback.notifySuccess();},};this._callSession.sendDtmf(aDtmfChar,callback);},startDtmf(aDtmfChar){if(DEBUG){debug("startDtmf: "+aDtmfChar);}
this._callSession.startDtmf(aDtmfChar);},stopDtmf(){if(DEBUG){debug("stopDtmf");}
this._callSession.stopDtmf();},consultativeTransfer(aToCall){if(DEBUG){debug("consultativeTransfer");}
this._callSession.consultativeTransfer(aToCall._callSession);},sendRttModifyRequest(aRttMode,aCallback){if(DEBUG){debug("sendRttModifyRequest, rttMode: "+aRttMode);}
if(this.rttMode===aRttMode){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
let profile=this._callSession.getCallProfile();let requestProfile=new ImsCallProfile(profile);requestProfile.mediaProfile.setRttMode(convertToImsRTTMode(aRttMode));this._callSession.sendRttModifyRequest(requestProfile);aCallback.notifySuccess();},sendRttModifyResponse(aStatus,aCallback){if(DEBUG){debug("sendRttModifyRequest, response: "+aStatus);}
this._callSession.sendRttModifyResponse(aStatus);aCallback.notifySuccess();},sendRttMessage(aMessage,aCallback){if(!this._isRttCall()){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
if(DEBUG){debug("sendRttMessage, message: "+aMessage);}
this._callSession.sendRttMessage(aMessage);aCallback.notifySuccess();},merge(aPeer){if(DEBUG){debug("merge, host id: "+this.callIndex);}
this.setMergePeer(aPeer);aPeer.setMergeHost(this);let hostSession=this.isConferenceParent?this._callSession.getSession():this._callSession;this._imsPhone.getMMTel().merge(hostSession,aPeer._callSession);},updatePropertiesByProfile(aCallProfile,aLocalCallProfile=null,aRemoteCallProfile=null){if(DEBUG){debug("updatePropertiesByProfile");}
let changed=false;if(this.isMT&&this.number!=aCallProfile.originatingIdentity){changed=true;this.number=aCallProfile.originatingIdentity;}else if(!this.number&&aCallProfile.originatingIdentity){changed=true;this.number=aCallProfile.originatingIdentity;}
if(this.numberPresentation!=OIR_IMS_TO_DOM_MAPPING[aCallProfile.oir]){changed=true;this.numberPresentation=OIR_IMS_TO_DOM_MAPPING[aCallProfile.oir];}
if(aCallProfile.callingName&&this.name!=aCallProfile.callingName){changed=true;this.name=aCallProfile.callingName;}
if(this.namePresentation!=OIR_IMS_TO_DOM_MAPPING[aCallProfile.cnap]){changed=true;this.namePresentation=OIR_IMS_TO_DOM_MAPPING[aCallProfile.cnap];}
if(this.isMarkable!=aCallProfile.canMarkUnwantedCall){changed=true;this.isMarkable=aCallProfile.canMarkUnwantedCall;}
if(this.verStatus!=VER_STATUS_IMS_TO_DOM_MAPPING[aCallProfile.callNumberVerStatus]){changed=true;this.verStatus=VER_STATUS_IMS_TO_DOM_MAPPING[aCallProfile.callNumberVerStatus];}
let mediaProfile=aCallProfile.mediaProfile;if(DEBUG){debug("mediaProfile.rttMode: "+mediaProfile.rttMode);}
let rttMode=convertToDomRTTMode(mediaProfile.rttMode);if(this.rttMode!=rttMode){changed=true;this.rttMode=rttMode;}
if(aLocalCallProfile&&aRemoteCallProfile){let voiceQuality=this._getAudioQuality(aLocalCallProfile,aRemoteCallProfile);if(this.voiceQuality!=voiceQuality){changed=true;this.voiceQuality=voiceQuality;}
let isRttCapable=this._isRTTCapable(aLocalCallProfile,aRemoteCallProfile);if(isRttCapable&&(this.capabilities&nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT)!=nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT){changed=true;this.capabilities|=nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT;}else if(!isRttCapable&&(this.capabilities&nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT)==nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT){changed=true;this.capabilities&=~nsITelephonyCallInfo.CAPABILITY_SUPPORTS_RTT;}}
if(this.vowifiCallQuality!=VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[mediaProfile.vowifiQuality]){changed=true;this.vowifiCallQuality=VOWIFI_QUALITY_IMS_TO_DOM_MAPPING[mediaProfile.vowifiQuality];}
if(this.isReceivingRttAudio!=mediaProfile.isReceivingRttAudio){changed=true;this.isReceivingRttAudio=mediaProfile.isReceivingRttAudio;}
return changed;},_createMOImsCallProfile(aDialRequest){let callProfile=new ImsCallProfile();callProfile.setDialString(nsIImsCallProfile.DIALSTRING_NORMAL);if(aDialRequest){callProfile.setOir(CLIR_TO_IMS_OIR_MAPPING[aDialRequest.clirMode]);callProfile.mediaProfile.setRttMode(aDialRequest.rttMode);if(aDialRequest.isEmergency){callProfile.setServiceType(nsIImsCallProfile.SERVICE_TYPE_EMERGENCY);}}
if(DEBUG){debug("_createMOImsCallProfile: "+JSON.stringify(callProfile));}
return callProfile;},_getAudioQuality(aLocalProfile,aRemoteProfile){let localQuality=aLocalProfile.mediaProfile.audioQuality;let isEvsCodecHighDef=localQuality==nsIImsStreamMediaProfile.AUDIO_QUALITY_EVS_WB||localQuality==nsIImsStreamMediaProfile.AUDIO_QUALITY_EVS_SWB||localQuality==nsIImsStreamMediaProfile.AUDIO_QUALITY_EVS_FB;let isHighDef=localQuality==nsIImsStreamMediaProfile.AUDIO_QUALITY_AMR_WB||localQuality==nsIImsStreamMediaProfile.AUDIO_QUALITY_EVRC_WB||(isEvsCodecHighDef&&aRemoteProfile.restrictCause==nsIImsCallProfile.CALL_RESTRICT_CAUSE_NONE);return isHighDef?nsITelephonyService.CALL_VOICE_QUALITY_HD:nsITelephonyService.CALL_VOICE_QUALITY_NORMAL;},_isRTTCapable(aLocalProfile,aRemoteProfile){return(aLocalProfile.mediaProfile.rttMode==nsIImsStreamMediaProfile.RTT_MODE_FULL&&aRemoteProfile.mediaProfile.rttMode==nsIImsStreamMediaProfile.RTT_MODE_FULL);},getState(){return this.state;},isIdle(){return this.state===RIL.CALL_STATE_UNKNOWN;},isRinging(){return(this.state===RIL.CALL_STATE_INCOMING||this.state===RIL.CALL_STATE_WAITING);},isMeragable(){return(this.state===RIL.CALL_STATE_ACTIVE||this.state===RIL.CALL_STATE_HOLDING);},setMergeHost(aHost){this._mergePeer=null;this._mergeHost=aHost;},setMergePeer(aPeer){this._mergePeer=aPeer;this._mergeHost=null;},_resetConferenceInfo(){this._resetMergeInfo();this._participantList={};this._participantIndexer=-1;},_resetMergeInfo(){this._mergePeer=null;this._mergeHost=null;if(this._callSessionMergeTransient){this._callSessionMergeTransient.reset();this._callSessionMergeTransient=null;}},getRilCalls(aCalls){if(this.isIdle()){return;}
if(this.callIndex==CALL_INDEX_INVALID){return;}
this._getRilCall(aCalls);if(this.isConferenceParent){this._getRilParticipants(aCalls);}
if(DEBUG){this._printRil();}},_getRilCall(aCalls){let call={};call.state=this.state;call.callIndex=this.callIndex;call.toa=this.toa;call.isMpty=this.isMpty;call.number=this.number;call.numberPresentation=this.numberPresentation;call.name=this.name;call.namePresentation=this.namePresentation;call.rttMode=this.rttMode;call.isVt=this.isVt;call.isConferenceParent=this.isConferenceParent;call.voiceQuality=this.voiceQuality;call.radioTech=this._imsPhone.radioTech;call.isMT=this.isMT;call.isReceivingRttAudio=this.isReceivingRttAudio;call.vowifiCallQuality=this.vowifiCallQuality;call.isMarkable=this.isMarkable;call.verStatus=this.verStatus;call.capabilities=this.capabilities;aCalls[call.callIndex]=call;},_getRilParticipants(aCalls){if(!this._participantList){return;}
Object.keys(this._participantList).forEach(index=>{let call={};call.state=this.state;call.toa=this.toa;call.isMpty=true;call.rttMode=this.rttMode;call.isVt=this.isVt;call.isConferenceParent=false;call.voiceQuality=this.voiceQuality;call.radioTech=this._imsPhone.radioTech;call.isMT=this.isMT;call.isReceivingRttAudio=this.isReceivingRttAudio;call.vowifiCallQuality=this.vowifiCallQuality;call.isMarkable=this.isMarkable;call.verStatus=this.verStatus;let participantCall=this._participantList[index];call.callIndex=participantCall.callIndex;call.number=participantCall.number;call.numberPresentation=nsITelephonyService.CALL_PRESENTATION_ALLOWED;call.name=participantCall.name;call.namePresentation=nsITelephonyService.CALL_PRESENTATION_ALLOWED;aCalls[participantCall.callIndex]=call;});},convertToRilCause(aCode){let rilCause=RIL.RIL_IMSCALL_FAILCAUSE_TO_GECKO_CALL_ERROR[aCode];if(DEBUG){debug("convertToRilCause aCode: "+aCode+" to rilCause: "+rilCause);}
return rilCause;},getParticipantByCallIndex(aCallIndex){if(DEBUG){debug("getParticipantByCallIndex this: "+this.callIndex+", target: "+aCallIndex);}
if(!this.isConferenceParent){debug("not an conference group");return null;}
let keys=Object.keys(this._participantList);for(let i=0;i<keys.length;i++){if(this._participantList[keys[i]].callIndex==aCallIndex){return this._participantList[keys[i]];}}
return null;},_isRttCall(){return this.rttMode==nsITelephonyService.RTT_MODE_FULL;},_printRil(){debug("=== IMS Call ===");this._printRilCall(this);if(this._participantList){debug("=== Conference participant ===");Object.keys(this._participantList).forEach(index=>{this._printRilParticipant(this._participantList[index]);});}},_printRilCall(aCall){debug("state: "+aCall.state+", callIndex: "+aCall.callIndex+" toa: "+aCall.toa+", isMpty: "+aCall.isMpty+" number: "+aCall.number+" numberPresentation: "+aCall.numberPresentation+" name: "+aCall.name+", namePresentation: "+aCall.namePresentation+" rttMode: "+aCall.rttMode+", voiceQuality: "+aCall.voiceQuality+" radioTech: "+aCall.radioTech+", isMT: "+aCall.isMT+", isReceivingRttAudio: "+aCall.isReceivingRttAudio+", vowifiCallQuality: "+aCall.vowifiCallQuality+", isMarkable: "+aCall.isMarkable+", verStatus: "+aCall.verStatus);},_printRilParticipant(aParticipant){debug("callIndex: "+aParticipant.callIndex+", number: "+aParticipant.number+", handleUri: "+aParticipant.handleUri+", name: "+aParticipant.name+", displayName: "+aParticipant.displayName+", status: "+aParticipant.status+", endpointUri: "+aParticipant.endpointUri);},_takeOver(aImsCallSession){if(!aImsCallSession){return;}
this._callSession=aImsCallSession;},_computeCallIndex(aCallSession){if(!aCallSession){return CALL_INDEX_INVALID;}
let callIdx=parseInt(aCallSession.getCallId(),10);return isNaN(callIdx)||callIdx<=0?CALL_INDEX_INVALID:callIdx;},};var OP_HOLD_CALL=0;var OP_RESUME_CALL=1;var OP_HOLD_FG_AND_RESUME_BG=2;var OP_RESUME_AND_SWAP=3;var OP_HOLD_FG_AND_ANSWER=4;var OP_END_FG_AND_ANSWER=5;var OP_ANSWER=6;var OP_CONSULTATIVE_TRANSFER=8;var OP_CONFERENCE=9;function PendingCb(){}
PendingCb.prototype={type:null,callback:null,callType:null,rttMode:null,notifySuccess(){if(this.callback){this.callback.notifySuccess();}},notifyError(aError){if(this.callback){this.callback.notifyError(aError);}},};function ImsPhone(aServiceId){this._serviceId=aServiceId;this._noSwapAfterResumed=false;let self=this;Services.tm.currentThread.dispatch(()=>{let imsHandler=gImsRegService.getHandlerByServiceId(aServiceId);if(imsHandler){imsHandler.registerListener(self);try{debug("ImsPhone getEcbm()");self._ecbm=gImsServiceManager.getEcbm(aServiceId);if(self._ecbm){if(DEBUG){debug("ImsEcbm setListener");}
self._ecbm.setListener(self);}}catch(e){if(DEBUG){debug("getEcbm failed");}}
self._exitEmergencyCbModeTimer=Cc["@mozilla.org/timer;1"].createInstance(Ci.nsITimer);}
gTelephonyService.registerListener(self);self._ensureMmTel();self.radioTech=nsITelephonyCallInfo.RADIO_TECH_PS;self._fgCall=new ImsPhoneCall(self);self._bgCall=new ImsPhoneCall(self);self._ringingCall=new ImsPhoneCall(self);self._lastCallDisconnectCause=null;self._opCallback=null;self._isInEmergencyCbMode=false;},Ci.nsIThread.DISPATCH_NORMAL);}
ImsPhone.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsPhone,Ci.nsIImsMMTelListener,Ci.nsIImsRegListener,Ci.nsITelephonyListener,Ci.nsIImsEcbmListener,]),_serviceId:null,_mmTelFeature:null,radioTech:null,_fgCall:null,_bgCall:null,_ringingCall:null,_ecbm:null,_lastCallDisconnectCause:null,_opCallback:null,_isInEmergencyCbMode:null,_exitEmergencyCbModeTimer:null,_noSwapAfterResumed:false,_mergeHost:null,dial(aDialRequest,aCallback){if(!this._ensureMmTel()){aCallback.notifyError(RIL.GECKO_CALL_ERROR_UNSPECIFIED);return;}
if(!this._fgCall.isIdle()&&!this._bgCall.isIdle()){debug("Error: Already has more than 2 calls on line.");aCallback.notifyError(OP_INVALID_STATE_ERROR);return;}
if(this._fgCall.isIdle()){if(this._isInEmergencyCbMode){this._ecbm.exitEmergencyCallbackMode();}
this._fgCall.dial(aDialRequest,aCallback);}else{}},answerCall(aCallIndex,aType,aRttMode,aCallback){if(DEBUG){debug("ImsPhone answerCall: "+aCallIndex+", rttMode: "+aRttMode);}
let ringingCall=this._getCallByIdex(aCallIndex);if(!ringingCall){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
ringingCall.accept(aType,aRttMode);aCallback.notifySuccess();},rejectCall(aCallIndex,aReason,aCallback){let ringingCall=this._getCallByIdex(aCallIndex);if(!ringingCall){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
ringingCall.reject(aReason);aCallback.notifySuccess();},hangupCall(aCallIndex,aReason,aCallback){if(DEBUG){debug("hangupCall on client : "+this._serviceId+", hangup index: "+aCallIndex);}
let call=this._getCallByIdex(aCallIndex);if(!call){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
call.hangup(aCallIndex,aReason,aCallback);},getFailCause(aCallback){let self=this;Services.tm.currentThread.dispatch(()=>{aCallback.notifyFailCause(self._lastCallDisconnectCause);},Ci.nsIThread.DISPATCH_NORMAL);},switchActiveCall(aType,aRttMode,aCallback){let hasRingingCall=!this._ringingCall.isIdle();let hasFgCall=!this._fgCall.isIdle();let hasBgCall=!this._bgCall.isIdle();if(DEBUG){debug("switchActiveCall, ringing: "+hasRingingCall+", fg: "+hasFgCall+", bg: "+hasBgCall);}
let success=false;let callback=new PendingCb();callback.callback=aCallback;if(hasRingingCall){if(hasFgCall&&hasBgCall){callback.type=OP_END_FG_AND_ANSWER;callback.callType=aType;callback.rttMode=aRttMode;this._fgCall.hangup(null);success=true;}else if(hasFgCall){callback.type=OP_HOLD_FG_AND_ANSWER;callback.callType=aType;callback.rttMode=aRttMode;success=this._fgCall.hold();}else if(hasBgCall){this._ringingCall.accept(aType,aRttMode);callback.notifySuccess();return;}else{}}else if(hasFgCall&&hasBgCall){if(DEBUG){debug("switch fg, bg call");}
callback.type=OP_HOLD_FG_AND_RESUME_BG;success=this._fgCall.hold();}else if(hasFgCall){callback.type=OP_HOLD_CALL;success=this._fgCall.hold();}else if(hasBgCall){callback.type=OP_RESUME_CALL;success=this._bgCall.resume();}
if(!success){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);}
this._opCallback=callback;},sendDtmf(aDtmfChar,aCallback){if(this._fgCall.isIdle()){debug("sendDtmf error, fg call is idle");aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
this._fgCall.sendDtmf(aDtmfChar,aCallback);},startDtmf(aDtmfChar){if(this._fgCall.isIdle()){debug("startDtmf error, fg call is idle");return;}
this._fgCall.startDtmf(aDtmfChar);},stopDtmf(){if(this._fgCall.isIdle()){debug("stopTone error, fg call is idle");return;}
this._fgCall.stopDtmf();},consultativeTransfer(aCallback){if(this._fgCall.isIdle()||this._bgCall.isIdle()){aCallback.notifyError(OP_INVALID_STATE_ERROR);return;}
let callback=new PendingCb();callback.callback=aCallback;callback.type=OP_CONSULTATIVE_TRANSFER;this._opCallback=callback;this._fgCall.consultativeTransfer(this._bgCall);},hangupBackground(aCallback){if(DEBUG){debug("hangupBackground");}
if(!this._ringingCall.isIdle()){this._ringingCall.reject();aCallback.notifySuccess();}else if(!this._bgCall.isIdle()){this._bgCall.hangup(aCallback);}else{aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);}},hangupForeground(aCallback){if(DEBUG){debug("hangupForeground");}
if(!this._ringingCall.isIdle()){if(!this._fgCall.isIdle()){let callback=new PendingCb();callback.callback=aCallback;callback.type=OP_END_FG_AND_ANSWER;callback.callType=nsITelephonyService.CALL_TYPE_VOICE;callback.rttMode=nsITelephonyService.RTT_MODE_OFF;this._fgCall.hangup(null);this._opCallback=callback;}else{this._ringingCall.accept(nsITelephonyService.CALL_TYPE_VOICE,nsITelephonyService.RTT_MODE_OFF);aCallback.notifySuccess();}}else if(!this._fgCall.isIdle()){this._fgCall.hangup(aCallback);}else if(!this._bgCall.isIdle()){let callback=new PendingCb();callback.callback=aCallback;callback.type=OP_RESUME_CALL;if(!this._bgCall.resume()){aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);}
this._opCallback=callback;}else{aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);}},sendRttModifyRequest(aCallIndex,aRttMode,aCallback){let rttCall=this._getCallByIdex(aCallIndex);rttCall.sendRttModifyRequest(aRttMode,aCallback);},sendRttModifyResponse(aCallIndex,aStatus,aCallback){let rttCall=this._getCallByIdex(aCallIndex);rttCall.sendRttModifyResponse(aStatus,aCallback);},sendRttMessage(aCallIndex,aMessage,aCallback){let rttCall=this._getCallByIdex(aCallIndex);rttCall.sendRttMessage(aMessage,aCallback);},conferenceCall(aCallback){if(DEBUG){debug("conferenceCall");}
if(!(this._fgCall.isMeragable()&&this._bgCall.isMeragable())){if(DEBUG){debug("not mergeable");}
aCallback.notifyError(RIL.GECKO_ERROR_GENERIC_FAILURE);return;}
let callback=new PendingCb();callback.type=OP_CONFERENCE;callback.callback=aCallback;this._opCallback=callback;let[host,peer]=this._getProperMergeHostPeer();this._mergeHost=host;host.merge(peer);},onIncomingCall(aCallSession,_isUssd,isUnknown){if(DEBUG){debug("onIncomingCall");}
if(!this._ringingCall.isIdle()){debug("already has a active ringing call");return;}
if(isUnknown){this._fgCall.onUnknownCall(aCallSession);return;}
let isWaiting=!this._fgCall.isIdle()||!this._bgCall.isIdle();this._ringingCall.onIncomingCall(aCallSession,isWaiting);gTelephonyService.notifyCallRing();},onVoiceMessageCountUpdate(_aCount){if(DEBUG){debug("onVoiceMessageCountUpdate");}},onCallSessionMergeStarted(aNewSession,aProfile){if(DEBUG){debug("onCallSessionMergeStarted: "+aNewSession.getCallId());}
this._mergeHost.onCallSessionMergeStarted(aNewSession,aProfile);},onCallSessionMergeComplete(aNewSession){if(DEBUG){debug("onCallSessionMergeComplete: "+aNewSession.getCallId());}
if(this._opCallback&&this._opCallback.type===OP_CONFERENCE){this._opCallback.notifySuccess();this._opCallback=null;}else if(DEBUG){debug("unexpected onCallSessionMergeComplete");}
if(!this._mergeHost){return;}
this._mergeHost.onCallSessionMergeComplete(aNewSession);this._mergeHost=null;},onCallSessionMergeFailed(_aSession,aReasonInfo){if(DEBUG){debug("onCallSessionMergeFailed");}
if(this._opCallback&&this._opCallback.type===OP_CONFERENCE){this._opCallback.notifyError(getImsReasonString(aReasonInfo.cod));this._opCallback=null;}else if(DEBUG){debug("unexpected onCallSessionMergeFailed");}
if(!this._mergeHost){return;}
this._mergeHost.onCallSessionMergeFailed();this._mergeHost=null;},onRejectedCall(_aProfile,_aReasonInfo){if(DEBUG){debug("onRejectedCall");}},notifyEnabledStateChanged(_aEnabled){},notifyPreferredProfileChanged(_aProfile){},notifyCapabilityChanged(aCapability,_aUnregisteredReason){this.radioTech=CAPABILITY_TO_RADIO_TECH_MAPPING[aCapability]||nsITelephonyCallInfo.RADIO_TECH_PS;},notifyRttEnabledStateChanged(_aEnabled){},enumerateCallStateComplete(){},enumerateCallState(_aInfo){},callStateChanged(_aLength,_aAllInfo){},supplementaryServiceNotification(_aClientId,_aNotification,_aCode,_aIndex,_aType,_aNumber){},notifyCdmaCallWaiting(_aClientId,_aNumber,_aNumberPresentation,_aName,_aNamePresentation){},notifyConferenceError(_aName,_aMessage){},notifyRingbackTone(_aPlayRingbackTone){},notifyTtyModeReceived(_aMode){},notifyTelephonyCoverageLosing(_aType){},notifyRttModifyRequestReceived(_aClientId,_aCallIndex,_aRttMode){},notifyRttModifyResponseReceived(_aClientId,_aCallIndex,_aStatus){},notifyRttMessageReceived(_aClientId,_aCallIndex,_aMessage){}, notifyImsSmsUtCapabilityChanged(_aIsSmsSupport,_aIsUtSupport){}, notifySrvccState(aClientId,aState){if(this._serviceId!==aClientId){return;}
if(aState===Ci.nsIRilIndicationResult.SRVCC_STATE_HANDOVER_COMPLETED){if(!this._fgCall.isIdle()){this._fgCall.reset();}
if(!this._bgCall.isIdle()){this._bgCall.reset();}
if(!this._ringingCall.isIdle()){this._ringingCall.reset();}}},exitEmergencyCbMode(){this._exitEmergencyCbModeTimer.cancel();if(this._ecbm){this._ecbm.exitEmergencyCallbackMode();}},enteredECBM(){if(DEBUG){debug("enteredECBM");}
this._exitEmergencyCbModeTimer.cancel();this._isInEmergencyCbMode=true;this._exitEmergencyCbModeTimer.initWithCallback(this.exitEmergencyCbMode.bind(this),EMERGENCY_CB_MODE_TIMEOUT_MS,Ci.nsITimer.TYPE_ONE_SHOT);gMobileConnectionService.notifyEmergencyCallbackModeChanged(this._serviceId,true,EMERGENCY_CB_MODE_TIMEOUT_MS);},exitedECBM(){if(DEBUG){debug("exitedECBM");}
this._exitEmergencyCbModeTimer.cancel();this._isInEmergencyCbMode=false;gMobileConnectionService.notifyEmergencyCallbackModeChanged(this._serviceId,false,EMERGENCY_CB_MODE_TIMEOUT_MS);},notifyImsCallStateChanged(_aCall){this._postHandleCurrentCalls();},notifyImsIncomingCall(_aImsPhoneCall){this._postHandleCurrentCalls();},notifyImsUnknownCall(_aImsPhoneCall){this._postHandleCurrentCalls();},notifyImsCallConnected(aCall){if(aCall==this._ringingCall){if(this._fgCall.isIdle()){let tmp=this._ringingCall;this._ringingCall=this._fgCall;this._fgCall=tmp;}else{let bgCall=this._bgCall;this._bgCall=this._fgCall;this._fgCall=this._ringingCall;this._ringingCall=bgCall;}}
if(this._opCallback){this._opCallback.notifySuccess();this._opCallback=null;}
this._postHandleCurrentCalls();},notifyImsCallDisconnected(aCall,aCause,aLocalHangup){if(DEBUG){debug("notifyImsCallDisconnected id: "+aCall.callIndex+" with aCause: "+aCause);}
this._lastCallDisconnectCause=aCause;if(this._opCallback&&this._opCallback.type===OP_END_FG_AND_ANSWER){this._opCallback.type=OP_ANSWER;this._ringingCall.accept(this._opCallback.callType,this._opCallback.rttMode);return;}
if(aCall===this._fgCall&&aLocalHangup){if(!this._bgCall.isIdle()&&!this._bgCall._isLocalHangup){this._bgCall.resume();return;}}
this._postHandleCurrentCalls();},notifyImsConferenceParticipantDisconnected(_aRemovedParticipant,aCause){this._lastCallDisconnectCause=aCause;this._postHandleCurrentCalls();},notifyImsCallHeld(aCall,aError){if(DEBUG){debug("notifyCallHeld id: "+aCall.callIndex+"with error: "+aError);}
if(aError){this._opCallback.notifyError(aError);}else if(this._opCallback&&this._opCallback.type===OP_HOLD_FG_AND_RESUME_BG){if(!this._bgCall.isIdle()){this._opCallback.type=OP_RESUME_AND_SWAP;this._bgCall.resume();return;}}else if(this._opCallback&&this._opCallback.type===OP_HOLD_FG_AND_ANSWER){this._opCallback.type=OP_ANSWER;this._ringingCall.accept(this._opCallback.callType,this._opCallback.rttMode);return;}else{this._swapFgBgCall();this._opCallback.notifySuccess();}
this._opCallback=null;this._postHandleCurrentCalls();},notifyImsCallResume(_aCall,aError){if(aError&&this._opCallback){this._opCallback.notifyError(aError);if(this._opCallback.type===OP_RESUME_AND_SWAP){this._noSwapAfterResumed=true;this._fgCall.resume();this._opCallback=null;return;}}else{if(!this._noSwapAfterResumed){this._swapFgBgCall();}
this._noSwapAfterResumed=false;if(this._opCallback){this._opCallback.notifySuccess();}}
this._opCallback=null;this._postHandleCurrentCalls();},notifyImsRingbackTone(aPlayRingbackTone){if(DEBUG){debug("notify notifyImsRingbackTone: "+this._serviceId+", aPlayRingbackTone: "+aPlayRingbackTone);}
let self=this;Services.tm.currentThread.dispatch(()=>{gTelephonyService.notifyRingbackTone(self._serviceId,aPlayRingbackTone);},Ci.nsIThread.DISPATCH_NORMAL);},notifyImsCallTransferred(aError){if(this._opCallback){if(aError){this._opCallback.notifyError(aError);}else{this._opCallback.notifySuccess();}}
this._opCallback=null;},notifyImsRttModifyRequestReceived(aCall,aRttMode){if(DEBUG){debug("notifyImsRttModifyRequestReceived aRttMode: "+aRttMode);}
gTelephonyService.notifyRttModifyRequestReceived(this._serviceId,aCall.callIndex,convertToDomRTTMode(aRttMode));},notifyImsRttModifyResponseReceived(aCall,aStatus){gTelephonyService.notifyRttModifyResponseReceived(this._serviceId,aCall.callIndex,RTT_MODIFY_STATUS_IMS_TO_DOM_MAPPING[aStatus]||nsITelephonyService.RTT_MODIFY_STATUS_FAIL);},notifyImsRttMessageReceived(aCall,aMessage){gTelephonyService.notifyRttMessageReceived(this._serviceId,aCall.callIndex,aMessage);},notifyImsCallSessionHandoverFailed(aSrcTech,aTargetTech){if(aSrcTech!==nsIImsRegistration.RADIO_TECH_IWLAN||aTargetTech!==nsIImsRegistration.RADIO_TECH_LTE){return;}
gTelephonyService.notifyTelephonyCoverageLosing(this._serviceId,nsITelephonyService.COVERAGE_LOST_IMS_OVER_WIFI);},notifyCallHoldReceived(aCall){gTelephonyService.notifySupplementaryService(this._serviceId,1,2,0,0,aCall.number);},notifyCallResumeReceived(aCall){gTelephonyService.notifySupplementaryService(this._serviceId,1,3,0,0,aCall.number);},notifyImsCallMergeComplete(aHostCall,aSwapRequired){if(aSwapRequired){let tmpCall=this._fgCall;this._fgCall=this._bgCall;this._bgCall=tmpCall;this._fgCall.state=RIL.CALL_STATE_ACTIVE;}
if(Object.keys(this._fgCall._participantList).length>0){this._postHandleCurrentCalls(aHostCall);}},_postHandleCurrentCalls(){if(this._opCallback){if(DEBUG){debug("postHandleCurrentCalls with pending operation, ignore.");}
return;}
let self=this;Services.tm.currentThread.dispatch(()=>{self._handleCurrentCalls();},Ci.nsIThread.DISPATCH_NORMAL);},_handleCurrentCalls(){let calls={};this._ringingCall.getRilCalls(calls);this._fgCall.getRilCalls(calls);this._bgCall.getRilCalls(calls);if(DEBUG){debug("notify current calls: "+this._serviceId);}
gTelephonyService.notifyCurrentCalls(this._serviceId,calls);},_ensureMmTel(){if(this._mmTelFeature){return true;}
this._mmTelFeature=getMMTelFeatureById(this._serviceId);if(this._mmTelFeature){this._mmTelFeature.setListener(this);}
return!!this._mmTelFeature;},getMMTel(){this._ensureMmTel();return this._mmTelFeature;},_createMTImsCallProfile(){let callProfile=new ImsCallProfile();callProfile.dialString=-1;return callProfile;},_getCallByIdex(aCallIndex){if(this._ringingCall.hasCallIndex(aCallIndex)){return this._ringingCall;}else if(this._fgCall.hasCallIndex(aCallIndex)){return this._fgCall;}else if(this._bgCall.hasCallIndex(aCallIndex)){return this._bgCall;}
debug("ImsPhone client: "+this._serviceId+" get call with invalid index: "+aCallIndex);return null;},isRinging(){return!this._ringingCall.isIdle();},_swapFgBgCall(){let tmpCall=this._fgCall;this._fgCall=this._bgCall;this._bgCall=tmpCall;},_getProperMergeHostPeer(){if(this._fgCall.isConferenceParent){return[this._fgCall,this._bgCall];}
if(this._bgCall.isConferenceParent){return[this._bgCall,this._fgCall];}
if(this._fgCall.state===RIL.CALL_STATE_ACTIVE){return[this._fgCall,this._bgCall];}
return[this._bgCall,this._fgCall];},};function ImsPhoneService(){if(DEBUG){debug("ImsPhoneService constructor");}
this._imsPhones=[];}
ImsPhoneService.prototype={classID:IMSPHONE_SERVICE_CID,QueryInterface:ChromeUtils.generateQI([Ci.nsIImsPhoneService]),getPhoneByServiceId(aServiceId){let imsPhone=this._imsPhones[aServiceId];if(!imsPhone){imsPhone=new ImsPhone(aServiceId);this._imsPhones[aServiceId]=imsPhone;}
return imsPhone;},_imsPhones:null,};var DUMMY_CALL_PROFILE=new ImsCallProfile();function ImsCallSession(aImsCallSession){this._session=aImsCallSession;this._session.setListener(this);}
ImsCallSession.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIImsCallSession,Ci.nsIImsCallSessionListener,]),_session:null,_imsPhoneCall:null,setSession(aSession){this._session=aSession;},getSession(){return this._session;},reset(){if(!this._session){return;}
this._session.setListener(null);this._session=null;this._imsPhoneCall=null;},getCallId(){return this._session?this._session.getCallId():CALL_INDEX_INVALID;},getCallProfile(){return this._session?this._session.getCallProfile():DUMMY_CALL_PROFILE;},getLocalCallProfile(){return this._session?this._session.getLocalCallProfile():DUMMY_CALL_PROFILE;},getRemoteCallProfile(){return this._session?this._session.getRemoteCallProfile():DUMMY_CALL_PROFILE;},getState(){return this._session?this._session.getState():Ci.nsIImsCallSession.STATE_INVALID;},setListener(aListener){this._session&&(this._imsPhoneCall=aListener);},start(aCallee,aProfile){this._session&&this._session.start(aCallee,aProfile);},accept(aCallType,aProfile){this._session&&this._session.accept(aCallType,aProfile);},reject(aReason){this._session&&this._session.reject(aReason);},terminate(aReason){this._session&&this._session.terminate(aReason);},hold(){this._session&&this._session.hold();},resume(){this._session&&this._session.resume();},sendDtmf(aChar,aCallback){this._session&&this._session(aChar,aCallback);},startDtmf(aChar){this._session&&this._session.startDtmf(aChar);},stopDtmf(){this._session&&this._session.stopDtmf();},close(){if(!this._session){return;}
this._session.setListener(null);this._session.close();this._session=null;this._imsPhoneCall=null;},sendRttModifyRequest(aToProfile){this._session&&this._session.sendRttModifyRequest(aToProfile);},sendRttModifyResponse(aStatus){this._session&&this._session.sendRttModifyResponse(aStatus);},sendRttMessage(aRttMessage){this._session&&this._session.sendRttMessage(aRttMessage);},isMultiparty(){return this._session?this._session.isMultiparty():false;},removeParticipants(aParticipants){this._session&&this._session.removeParticipants(aParticipants);},consultativeTransfer(aToSession){this._session&&this._session.consultativeTransfer(aToSession);},onCallSessionProgressing(aProfile){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionProgressing(aProfile);},onCallSessionStarted(_aProfile){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionStarted(_aProfile);},onCallSessionStartFailed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionStartFailed(aReasonInfo);},onCallSessionTerminated(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onSessionTerminated(aReasonInfo,this);},onCallSessionHeld(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionHeld(aReasonInfo);},onCallSessionHoldFailed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionHoldFailed(aReasonInfo);},onCallSessionResumed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionResumed(aReasonInfo);},onCallSessionResumeFailed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionResumeFailed(aReasonInfo);},onCallSessionHoldReceived(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionHoldReceived(aReasonInfo);},onCallSessionResumeReceived(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionResumeReceived(aReasonInfo);},onCallSessionUpdated(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionUpdated(aReasonInfo);},onCallSessionRttModifyRequestReceived(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRttModifyRequestReceived(aReasonInfo);},onCallSessionRttModifyResponseReceived(aStatus){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRttModifyResponseReceived(aStatus);},onCallSessionRttMessageReceived(aRttMessage){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRttMessageReceived(aRttMessage);},onCallSessionRttAudioIndicatorChanged(aProfile){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRttAudioIndicatorChanged(aProfile);},onCallSessionSuppServiceReceived(aSuppSrvNotification){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionSuppServiceReceived(aSuppSrvNotification);},onCallSessionTtyModeReceived(aMode){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionTtyModeReceived(aMode);},onCallSessionMayHandover(aSrcTech,aTargetTech){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionMayHandover(aSrcTech,aTargetTech);},onCallSessionHandover(aSrcTech,aTargetTech){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionHandover(aSrcTech,aTargetTech);},onCallSessionHandoverFailed(aSrcTech,aTargetTech,aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionHandoverFailed(aSrcTech,aTargetTech,aReasonInfo);},onCallSessionConferenceStateUpdated(aParticipants){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionConferenceStateUpdated(aParticipants);},onCallSessionRemoveParticipantsRequestDelivered(){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRemoveParticipantsRequestDelivered();},onCallSessionRemoveParticipantsRequestFailed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionRemoveParticipantsRequestFailed(aReasonInfo);},onCallSessionTransferred(){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionTransferred();},onCallSessionTransferFailed(aReasonInfo){this._imsPhoneCall&&this._imsPhoneCall.onCallSessionTransferFailed(aReasonInfo);},};var EXPORTED_SYMBOLS=["ImsPhoneService"];