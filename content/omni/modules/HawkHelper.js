const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");ChromeUtils.defineModuleGetter(this,"CommonUtils","resource://services-common/utils.js");ChromeUtils.defineModuleGetter(this,"CryptoUtils","resource://services-crypto/utils.js");const DEBUG=false;function debug(aMsg){if(DEBUG){dump("-*- HawkHelper.js: "+aMsg+"\n");}}
var HawkHelper={async computeHawkHeader(httpReqMethod,hawkKeyId,hawkMacKey,requestUri,requestBody){debug("compute Hawk header for "+requestUri);debug(" - kid: "+hawkKeyId);debug(" - mac_key: "+hawkMacKey);let hawkCredentials={id:hawkKeyId,key:CommonUtils.safeAtoB(hawkMacKey),algorithm:"sha256",};let options={credentials:hawkCredentials,};if(requestBody){options.payload=requestBody;options.contentType="application/json";}
let uri=Services.io.newURI(requestUri);let hawkHeader=await CryptoUtils.computeHAWK(uri,httpReqMethod,options);debug("hawkHeader.field: "+hawkHeader.field);return hawkHeader.field;},};var EXPORTED_SYMBOLS=["HawkHelper"];