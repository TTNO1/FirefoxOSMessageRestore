//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
"use strict";var Cc=Components.classes;var Ci=Components.interfaces;var Cu=Components.utils;Cu.importGlobalProperties(['Blob','File']);Cu.import("resource://gre/modules/Services.jsm");this.EXPORTED_SYMBOLS=["MdmUtils"];const DEBUG=true;function debug(aStr){if(DEBUG)
dump("MdmUtils.jsm: "+aStr+"\n");}
Cu.import("resource://gre/modules/Promise.jsm");Cu.import("resource://gre/modules/Preferences.jsm");const{FileUtils}=ChromeUtils.import("resource://gre/modules/FileUtils.jsm");Cu.import("resource://gre/modules/XPCOMUtils.jsm");ChromeUtils.defineModuleGetter(this,"JSONFile","resource://gre/modules/JSONFile.jsm");XPCOMUtils.defineLazyModuleGetter(this,"NetUtil","resource://gre/modules/NetUtil.jsm");XPCOMUtils.defineLazyGetter(this,"libcutils",function(){Cu.import("resource://gre/modules/systemlibs.js");return libcutils;});const FileInputStream=Components.Constructor("@mozilla.org/network/file-input-stream;1","nsIFileInputStream","init");const PERSIST_FILE="/data/.persistence.txt";this.MdmUtils=function MdmUtils(){};MdmUtils.prototype={loadJsonFile:async function _loadJsonFile(filePath){let jsonObj=null;try{let jsonFile=new JSONFile({path:filePath});await jsonFile.load();jsonObj=jsonFile.data;}catch(ex){debug("Read mdm backup file failed, ex: "+ex);jsonObj=null;}
return jsonObj;}, _writeCpFile:function(str,path,callback){debug("BENYI _writeCpFile: enter");let hasNodes=true;let obj={};let file;try{debug(" BENYI _writeCpFile: try begin");file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);debug("BENYI _writeCpFile: try file ok");file.initWithPath(path);debug("BENYI _writeCpFile: file.initWithPath(path) ok");if(!file.exists()){debug("BENYI _writeCpFile: creating CPfile ...");hasNodes=false;file.create(Ci.nsIFile.NORMAL_FILE_TYPE,420);debug("BENYI _writeCpFile: create CPfile ok");}
var foStream=Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);debug("BENYI _writeCpFile: foStream: "+JSON.stringify(foStream));foStream.init(file,0x02|0x08|0x10,"0666",0);debug("BENYI _writeCpFile: converter begin");var converter=Cc["@mozilla.org/intl/converter-output-stream;1"].createInstance(Ci.nsIConverterOutputStream);debug("BENYI _writeCpFile: converter: "+JSON.stringify(converter));converter.init(foStream,"UTF-8",0,0);debug("BENYI _writeCpFile: converter init ok");if(hasNodes){converter.writeString(';'+str);}else{converter.writeString(str);}
debug("BENYI _writeCpFile: converter write ok");converter.close();obj.data=path+': '+str;obj.result='ok';}catch(ex){debug('BENYI _writeCpFile io error! ex = '+ex);obj.data=path+': '+str;obj.result='error';}
if(callback!==null){callback(obj);}
debug("BENYI _writeCpFile: obj is: "+JSON.stringify(obj));return obj;},_readCpFile:function(file,callback){debug("BENYI _readCpFile begin");let obj={};try{let aFile=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);debug("BENYI _readCpFile aFile");aFile.initWithPath(file);debug("BENYI _readCpFile initWithPath(file)");if(!aFile.exists()||!aFile.isFile()){debug("BENYI _readCpFile return");if(callback!==null){obj.data="";obj.result='no datas'
callback(obj);}
return'';}
var fstream=Cc["@mozilla.org/network/file-input-stream;1"].createInstance(Ci.nsIFileInputStream);debug("BENYI _readCpFile aFile fstream ");var sstream=Cc["@mozilla.org/scriptableinputstream;1"].createInstance(Ci.nsIScriptableInputStream);debug("BENYI _readCpFile aFile sstream ");fstream.init(aFile,0x01,4,null);debug("BENYI _readCpFile aFile fstream.init ");sstream.init(fstream);debug("BENYI _readCpFile aFile sstream.init ");var output=sstream.read(sstream.available());debug("BENYI _readCpFile aFile output");sstream.close();fstream.close();obj.data=output;obj.result='ok';}catch(e){debug('_readCpFile io error! e = '+e);obj.data='path: '+file;obj.result='error';}
if(callback!==null){callback(obj);}
debug("BENYI file output obj: "+JSON.stringify(obj));return obj;},_writeRemoveFile:function(str,path,callback){debug("BENYI _writeRemoveFile: enter");let obj={};let file;try{debug(" BENYI _writeRemoveFile: try begin");file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);debug("BENYI _writeRemoveFile: try file ok");file.initWithPath(path);debug("BENYI _writeRemoveFile: file.initWithPath(path) ok");if(file.exists()){debug("BENYI _writeRemoveFile: have cp_restored_data.txt ok");file.remove(true);debug("BENYI _writeRemoveFile: remove cp_restored_data.txt ok");}
file.create(Ci.nsIFile.NORMAL_FILE_TYPE,420);var foStream=Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);debug("BENYI _writeRemoveFile: foStream: "+JSON.stringify(foStream));foStream.init(file,0x02|0x08|0x10,"0666",0);debug("BENYI _writeRemoveFile: converter begin");var converter=Cc["@mozilla.org/intl/converter-output-stream;1"].createInstance(Ci.nsIConverterOutputStream);debug("BENYI _writeRemoveFile: converter: "+JSON.stringify(converter));converter.init(foStream,"UTF-8",0,0);debug("BENYI _writeRemoveFile: converter init ok");converter.writeString(str);debug("BENYI _writeRemoveFile: converter write ok");converter.close();obj.data=path+': '+str;obj.result='ok';}catch(ex){debug('BENYI _writeRemoveFile io error! ex = '+ex);obj.data=path+': '+str;obj.result='error';}
if(callback!==null){callback(obj);}
debug("BENYI _writeRemoveFile: obj is: "+JSON.stringify(obj));return obj;}, _writeFile:function(str,path,par,callback){debug("_writeFile: enter");let obj={};try{let file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);file.initWithPath(path);var foStream=Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);if('a'==par){foStream.init(file,0x02|0x08|0x10,"0644",0);}else if('f'==par){debug("gaolu _writeFile: enter par = f");foStream.init(file,0x02|0x08|0x20,"0644",0);}
var converter=Cc["@mozilla.org/intl/converter-output-stream;1"].createInstance(Ci.nsIConverterOutputStream);converter.init(foStream,"UTF-8",0,0);converter.writeString(str);converter.close();obj.data=path+': '+str;obj.result='OK';}catch(ex){debug('_writeFile io error! ex = '+ex);obj.data=path+': '+str;obj.result='KO';}
if(callback!==null){callback(obj);}
return obj;},_readFile:function(filePath){debug("_readFile filePath = "+filePath);return new Promise((resolve,reject)=>{let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(filePath);NetUtil.asyncFetch(file,function(inputStream,status){if(!Components.isSuccessCode(status)){debug('_readFile:failed');reject();}else{ let data=NetUtil.readInputStreamToString(inputStream,inputStream.available());debug('_readFile:success');resolve(data);}});});},_persistFile:function(path,mode){debug("_persistFile");this._writeFile(path,PERSIST_FILE,mode,(data)=>{debug("DescMoActionHandler.jsm _persistFile done result = "+data.result);});},persistBackupFile:function(fullPath,mode){debug("persistBackupFile fullPath = "+fullPath);this._readFile(PERSIST_FILE).then((data)=>{debug("_readFile data = "+data);if('a'==mode){if(data.indexOf(fullPath)<0){this._persistFile(fullPath+"\n",'a');}}else if('d'==mode){if(data.indexOf(fullPath)>=0){this._persistFile(data.replace(fullPath+"\n",""),'f');}}}).catch(()=>{this._persistFile(fullPath+"\n",'f');});},_downloadFile:function(url,path,name){debug("_downloadFile url = "+url+" | path = "+path+"| name = "+name);let deferred=Promise.defer();let requestChannel=NetUtil.newChannel({uri:url,loadUsingSystemPrincipal:true}).QueryInterface(Ci.nsIHttpChannel);requestChannel.loadFlags|=Ci.nsIRequest.INHIBIT_CACHING;let dir=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);dir.initWithPath(path);if(!dir.exists()){ debug('_downloadFile create dir '+path);try{dir.create(Ci.nsIFile.DIRECTORY_TYPE,FileUtils.PERMS_DIRECTORY);dir=null;}
catch(e){debug('_downloadFile create dir fail: '+e);deferred.reject();return;}}
let file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);file.initWithPath(path+name);let outputStream=Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);outputStream.init(file,0x02|0x08|0x20,parseInt("0664",8),0);let bufferedOutputStream=Cc['@mozilla.org/network/buffered-output-stream;1'].createInstance(Ci.nsIBufferedOutputStream);bufferedOutputStream.init(outputStream,1024);let listener=Cc["@mozilla.org/network/simple-stream-listener;1"].createInstance(Ci.nsISimpleStreamListener);listener.init(bufferedOutputStream,{onStartRequest:function(aRequest,aContext){debug("_downloadFile onStartRequest");},onStopRequest:function(aRequest,aContext,aStatusCode){debug("_downloadFile onStopRequest");bufferedOutputStream.close();outputStream.close();if(!Components.isSuccessCode(aStatusCode)){debug("_downloadFile failed aStatusCode = "+aStatusCode);deferred.reject();if(file.exists()){file.remove(true);}
return;}

let responseStatus=requestChannel.responseStatus;if(responseStatus>=400&&responseStatus<=599){debug("_downloadFile failed responseStatus = "+responseStatus);deferred.reject();if(file.exists()){file.remove(true);}
return;}
debug("_downloadFile onStopRequest download ok");deferred.resolve(file);}});requestChannel.asyncOpen2(listener);return deferred.promise;},downloadFile:function(url,path,name,suffix){const DM_DESCMO_RESULT_FAILED=2;debug("downloadFile url = "+url+" | path = "+path+"| name = "+name);let deferred=Promise.defer();let tmpName=name+'.tmp';this._downloadFile(url,path,tmpName).then((file)=>{ debug("downloadFile ok 0");try{let cname=name;if(suffix){cname=name+suffix;}
this.renameFile(path,tmpName,cname);debug("downloadFile ok 4");}catch(ex){debug("downloadFile fail to move");debug('downloadFile faile! ex = '+ex);deferred.reject(DM_DESCMO_RESULT_FAILED);}
deferred.resolve(file);debug("downloadFile ok 5");}).catch(()=>{debug("downloadFile failed");deferred.reject(DM_DESCMO_RESULT_FAILED);});return deferred.promise;},renameFile:function(dir,name,newName){debug("renameFile "+dir+name+" to "+dir+newName);let oldFile=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);oldFile.initWithPath(dir+name);if(oldFile.exists()){let newFile=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);newFile.initWithPath(dir+newName);if(newFile.exists()){newFile.remove(true);debug("renameFile remove exists file");}
oldFile.renameTo(null,newName);oldFile=null;}},loadMdmBackupFile:function _loadMdmBackupFile(){let mdmItems=this.loadJsonFile('/data/.mdm_save.json');if(null===mdmItems){mdmItems=this.loadJsonFile('/cache/.mdm_save.json');}
return mdmItems;},saveMdmBackupFile:function(mdmItems){if(mdmItems){this._writeFile(JSON.stringify(mdmItems),'/data/.mdm_save.json','f',(data)=>{debug("saveMdmBackupFile ======= done");if('OK'!=data.result){debug("saveMdmBackupFile ======= failed");}});}},overrideSettings:function _overrideSettings(settings){if(null===settings){return;}
let mdmItems=this.loadMdmBackupFile();if(null===mdmItems){return;}
for(let itemName in mdmItems){let item=mdmItems[itemName];if(!item){continue;}
let persistence=item['persistence'];if(false==persistence){continue;}
for(let i=0;item['operates']&&i<item['operates'].length;i++){let mItem=item['operates'][i];if(!mItem){continue;}
if('setting'==mItem.type){settings[mItem.key]=mItem.val;}else if('ByteArray'==mItem.type){let blob=null;if('N/A'!=mItem.val){let array=new Uint8Array(mItem.val);blob=new Blob([array]);}
settings[mItem.key]=blob;}else if('preference'==mItem.type){Preferences.set(mItem.key,mItem.val);}else if('property'==mItem.type){libcutils.property_set(mItem.key,mItem.val);}}
}
}
};