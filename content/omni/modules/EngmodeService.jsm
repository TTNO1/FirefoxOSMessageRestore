//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
"use strict";var RIL_DEBUG=ChromeUtils.import("resource://gre/modules/ril_consts_debug.js");const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{Preferences}=ChromeUtils.import("resource://gre/modules/Preferences.jsm");const{FileUtils}=ChromeUtils.import("resource://gre/modules/FileUtils.jsm");const{NetUtil}=ChromeUtils.import("resource://gre/modules/NetUtil.jsm");const{libcutils}=ChromeUtils.import("resource://gre/modules/systemlibs.js");const TOPIC_PREF_CHANGED="nsPref:changed";XPCOMUtils.defineLazyGetter(this,"RIL",function(){return ChromeUtils.import("resource://gre/modules/ril_consts.js");});let DEBUG;var debug=function(s){dump("<KAIOS_LOG> -*- EngmodeService -*-: "+s+"\n");};var HEADSET_KEY="Insert detect insert = ";const nsIAudioManager=Ci.nsIAudioManager;XPCOMUtils.defineLazyGetter(this,"gAudioManager",function getAudioManager(){try{return Cc["@mozilla.org/telephony/audiomanager;1"].getService(nsIAudioManager);}catch(ex){return null;}});XPCOMUtils.defineLazyServiceGetter(this,"gRil","@mozilla.org/ril;1","nsIRadioInterfaceLayer");let getPref=args=>Preferences.get(args.prefName,args.defaultValue);const SYSTEM_NODE={CHARGER_LED_NODE:getPref({prefName:"eng.filenode.charger_led",defaultValue:"/sys/class/ktd20xx/ktd2026/led",}),CAMERA_LED_NODE:getPref({prefName:"eng.filenode.camera_led",defaultValue:"/sys/class/leds/flashlight/brightness",}),BACKLIGHT_LED_NODE:getPref({prefName:"eng.filenode.backlight_led",defaultValue:"/sys/class/ktd20xx/ktd2026/back_light_led",}),KEYBOARD_BACKLIGHT_NODE:getPref({prefName:"eng.filenode.keyboard_backlight",defaultValue:"/sys/class/leds/keyboard-backlight/brightness",}),BATTERY_CHARGING_NODE:getPref({prefName:"eng.filenode.battery_charging",defaultValue:"/sys/class/power_supply/battery/charging_enabled",}),DBCLICK_UNLOCK_NODE:getPref({prefName:"eng.filenode.dbclick_unlock",defaultValue:"/sys/class/TP-UNLOCK/device/dbclick",}),BATTERY_TEMP_NODE:getPref({prefName:"eng.filenode.battery_temp",defaultValue:"/sys/class/power_supply/battery/temp",}),BATTERY_ONLINE_NODE:getPref({prefName:"eng.filenode.battery_online",defaultValue:"/sys/class/power_supply/usb/online",}),USB_CONNECT_NODE:getPref({prefName:"eng.filenode.usb_connect",defaultValue:"/sys/devices/virtual/android_usb/android0/state",}),HEADPHONE_STATE_NODE:getPref({prefName:"eng.filenode.headphone_state",defaultValue:"/sys/kernel/debug/wcd9xxx_mbhc",}),RECONDITIONED_STATE_NODE:getPref({prefName:"eng.filenode.reconditioned_state",defaultValue:"/dev/block/platform/soc.0/7824900.sdhci/by-name/traceability",}),WIFI_MACADDR_NODE:getPref({prefName:"eng.filenode.wifi_macaddr",defaultValue:"/system/etc/wifi/macaddr",}),RAM_MEMORY_NODE:getPref({prefName:"eng.filenode.ram_memory",defaultValue:"/data/ram_memory",}),AUDIO_TEST_NODE:getPref({prefName:"eng.cmd.audio_test",defaultValue:"/system/bin/audio_test.sh",}),DIAG_MDLOG_NODE:getPref({prefName:"eng.cmd.diag_mdlog",defaultValue:"/system/bin/diag_mdlog_system",}),GPS_TEST_NODE:getPref({prefName:"eng.cmd.gps_test",defaultValue:"/system/bin/gps_test",}),};function DataProfile(aAttributes){for(let key in aAttributes){this[key]=aAttributes[key];}}
DataProfile.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIDataProfile]),profileId:-1,apn:null,protocol:null,authType:-1,user:null,password:null,type:-1,maxConnsTime:-1,maxConns:-1,waitTime:-1,enabled:false,supportedApnTypesBitmap:-1,roamingProtocol:null,bearerBitmap:-1,mtu:-1,mvnoType:null,mvnoMatchData:null,modemCognitive:false,};function EngmodeService(){this._updateDebugFlag();Services.prefs.addObserver(RIL_DEBUG.PREF_RIL_DEBUG_ENABLED,this);}
EngmodeService.prototype={classID:Components.ID("{8716526a-3aa4-4fd5-8cc0-689a4824928e}"),contractID:"@kaiostech.com/engmode/service;1",QueryInterface:ChromeUtils.generateQI([Ci.nsIEngmodeService,Ci.nsISupportsWeakReference,Ci.nsIObserver,]),_getfusest:null,_sysRunningSrv:{},_updateDebugFlag(){try{DEBUG=RIL_DEBUG.DEBUG_RIL||Services.prefs.getBoolPref(RIL_DEBUG.PREF_RIL_DEBUG_ENABLED);}catch(e){}},_messages:["Engmode:Common","Engmode:HookHeadsetStatusChangedEvt","Engmode:HookKeyEvt","Engmode:RunProcess","Engmode:GetFilesLastTime","Engmode:CopyFile","Engmode:CreateDirOrFile","Engmode:AudioLoop","Engmode:ForceInCall","Engmode:EngmodeTestCommand","Engmode:GpsTest","Engmode:CheckIsCommandRunnig","Engmode:SetChargingEnabled","Engmode:SetDbClickUnlock","Engmode:SetChargerLED","Engmode:SetCameraLED","Engmode:setSubLCD","Engmode:setKeypadLED","Engmode:FileRead","Engmode:FileWrite","Engmode:SetDirProp","Engmode:setDataProfileByType","Engmode:GetFusest",],init(){if(DEBUG){debug("EngmodeService Initialize ....");}
this._messages.forEach(function(msgName){Services.ppmm.addMessageListener(msgName,this);}.bind(this));this._keyEvtTarget=null;this._headsetEvtTarget=null;this._audioLoopProcess=null;this._gpsTestProcess=null;this._engmodeTestCommandProcess=null;},uninit(){this._messages.forEach(function(msgName){Services.ppmm.removeMessageListener(msgName,this);}.bind(this));},get isKeyHooked(){return this._keyEvtTarget!==null;},processKeyEvt(evt){if(this._keyEvtTarget!==null){if(DEBUG){debug("processKeyEvt: Send key event "+JSON.stringify(evt));}
this._keyEvtTarget.sendAsyncMessage("Engmode:KeyEvent:Return",{event:evt,});}else{debug("processKeyEvt: No responsibler for key evt processing");}},get isHeadsetStatusChangedHooked(){return this._headsetEvtTarget!==null;},processHeadsetStatusChangedEvt(evt){if(this._headsetEvtTarget!==null){this._headsetEvtTarget.sendAsyncMessage("Engmode:HeadsetStatusChangedEvt:Return",{event:evt,});}},_createGivenDirOrFile(path,typeStr,shouldCreate,callback){if(DEBUG){debug("_createGivenDirOrFile--path:"+path);}
let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(path);if(file.exists()){callback("EXIST");}else if(shouldCreate){let temp="CREATE_SUCCESS";try{if(typeStr==="DIRECTORY"){file.create(Ci.nsIFile.DIRECTORY_TYPE,FileUtils.PERMS_DIRECTORY);}else{file.create(Ci.nsIFile.NORMAL_FILE_TYPE,FileUtils.PERMS_FILE);}}catch(e){if(DEBUG){debug("create file fail: "+e);}
temp="CREATE_FAILED";}finally{callback(temp);}}else{callback("NO_EXIST");}},_checkIsCommandRunning(commands,callback){if(DEBUG){debug("_checkIsCommandRunning: commands -> "+commands);}
let is_running=false;if(commands in this._sysRunningSrv){is_running=true;}
callback(is_running);},_strCompare(str1,str2){let prop=/[^\*]\S+[^\*]/;let ret=prop.exec(str1);let tempStr=ret[0];let result=false;if(str1&&str2){if(str1[0]==="*"&&str1[str1.length-1]==="*"){if(str2.indexof(tempStr)!==-1){result=true;}}else if(str1[str1.length-1]==="*"){if(str2.length>=tempStr.length&&tempStr===str2.substr(0,tempStr.length)){result=true;}}else if(str1[0]==="*"){if(str2.length>=tempStr.length&&tempStr===str2.substr(str2.length-tempStr.length,tempStr.length)){result=true;}}else if(tempStr===str2){result=true;}}
return result;},_readSysFile(filePath,callback){let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(filePath);NetUtil.asyncFetch({uri:NetUtil.newURI(file),loadUsingSystemPrincipal:true,},function(inputStream,status){let temp={};if(!Components.isSuccessCode(status)){if(DEBUG){debug("_readSysFile:failed");}
temp.result="KO";temp.data=status;}else{if(DEBUG){debug("_readSysFile:success");}
let data=NetUtil.readInputStreamToString(inputStream,inputStream.available());temp.result="OK";temp.data=data;}
callback(temp);});},_sysService(command,callback){if(DEBUG){debug("sysService: "+command);}
let pattern=/(start|stop)\s+(\S+)\s+([^>]*)(?:>\s*(\S+))?/;let result;let cbData={};if((result=pattern.exec(command))){let start=result[1]==="start";let program=result[2];let argument=result[3];let output=result[4];if(start===true){if(program in this._sysRunningSrv&&program!==SYSTEM_NODE.DIAG_MDLOG_NODE){return;}
let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);let process=Cc["@mozilla.org/process/util;1"].createInstance(Ci.nsIProcess);let args=[];if(output){file.initWithPath("/system/bin/sh");args.push("-c",program+" "+argument+" >"+output);}else{file.initWithPath(program);args=argument.trim().split(/\s+/);}
try{process.init(file);let that=this;process.runAsync(args,args.length,{observe(aSubject,aTopic,aData){for(let name in that._sysRunningSrv){if(that._sysRunningSrv[name]===process){delete that._sysRunningSrv[name];break;}}
cbData.processState=aTopic;callback(cbData);},});this._sysRunningSrv[program]=process;cbData.processState="process-running";callback(cbData);}catch(e){cbData.processState="process-failed";cbData.errorType="DefaultError";callback(cbData);}}else if(program in this._sysRunningSrv){cbData.processState="process-finished";callback(cbData);this._sysRunningSrv[program].kill();}}},_copyFile(sourcePath,destPath,fileNewName,callback){let sourcefile=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);sourcefile.initWithPath(sourcePath);let destfile=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);destfile.initWithPath(destPath);let cbData={};cbData.processState="process-finished";try{sourcefile.copyTo(destfile,fileNewName);}catch(e){cbData.processState="process-failed";if(e.result==Cr.NS_ERROR_FILE_TARGET_DOES_NOT_EXIST){cbData.errorType="SourceFileNotExist";}else{cbData.errorType="DefaultError";}}finally{callback(cbData);}},_getFilesLastTime(aFilePathArray,callback){let pattern=/(\/(\S+)\/)([^\/]+)/;let i=0;let obj={};let pathObj={};for(i=0;i<aFilePathArray.length;i++){let result=pattern.exec(aFilePathArray[i]);if(result){if(!(result[1]in pathObj)){pathObj[result[1]]=[];}
pathObj[result[1]].push(result[3]);let prop=/[^\*]\S+[^\*]/;let ret=prop.exec(result[3]);obj[ret[0]]={time:0,};}}
for(let directoryPath in pathObj){let directory=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);directory.initWithPath(directoryPath);if(directory.exists()){let fileList=directory.directoryEntries;let fileNameAarry=pathObj[directoryPath];while(fileList.hasMoreElements()){let file=fileList.getNext().QueryInterface(Ci.nsIFile);for(i=0;i<fileNameAarry.length;i++){if(this._strCompare(fileNameAarry[i],file.leafName)){let prop=/[^\*]\S+[^\*]/;let ret=prop.exec(fileNameAarry[i]);if(obj[ret[0]].time<file.lastModifiedTime){obj[ret[0]].time=file.lastModifiedTime;obj[ret[0]].location=directoryPath;}}}}}}
callback(obj);},_setDataProfileByType(networkType,profileId,apn,protocol,roamingProtocol,authType,user,password,type,maxConnsTime,maxConns,waitTime,enabled,inactivityTimer,callback){let pdpType=RIL.RIL_DATACALL_PDP_TYPES.indexOf(protocol);if(pdpType==-1){pdpType=RIL.GECKO_DATACALL_PDP_TYPE_DEFAULT;}else{pdpType=RIL.RIL_DATACALL_PDP_TYPES[pdpType];}
let roamPdpType=RIL.RIL_DATACALL_PDP_TYPES.indexOf(roamingProtocol);if(roamPdpType==-1){roamPdpType=RIL.GECKO_DATACALL_PDP_TYPE_DEFAULT;}else{roamPdpType=RIL.RIL_DATACALL_PDP_TYPES[roamPdpType];}
let auth=RIL.RIL_DATACALL_AUTH_TO_GECKO.indexOf(authType);if(auth==-1){auth=RIL.RIL_DATACALL_AUTH_TO_GECKO.indexOf(RIL.GECKO_DATACALL_AUTH_DEFAULT);}
let profile={profileId,apn,protocol:pdpType,authType:auth,user,password,type,maxConnsTime,maxConns,waitTime,enabled:enabled==="true"?1:0,supportedApnTypesBitmap:-1,roamingProtocol:roamPdpType,bearerBitmap:-1,mtu:-1,mvnoType:null,mvnoMatchData:null,modemCognitive:false,};let profileList=[];profileList.push(new DataProfile(profile));if(DEBUG){debug("_setDataProfileByType profileList="+JSON.stringify(profileList));}
let obj={};let radioInterface=gRil.getRadioInterface(0);radioInterface.sendWorkerMessage("setDataProfile",{profileList,},function(aResponse){if(aResponse.errorMsg){if(DEBUG){debug("_setDataProfileByType fail: "+aResponse.errorMsg);}
obj.result="KO";obj.data=aResponse.errorMsg;}else{if(DEBUG){debug("_setDataProfileByType ok");}
obj.result="OK";}
if(callback!==null){callback(obj);}});},_setValueToFile(fileNode,content,mode,permissions){if(!mode){mode=0x02|0x08|0x20;}
permissions=permissions?permissions:"0666";try{let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(fileNode);var foStream=Cc["@mozilla.org/network/file-output-stream;1"].createInstance(Ci.nsIFileOutputStream);foStream.init(file,mode,permissions,0);var converter=Cc["@mozilla.org/intl/converter-output-stream;1"].createInstance(Ci.nsIConverterOutputStream);converter.init(foStream,"UTF-8",0,0);converter.writeString(content);converter.close();}catch(ex){if(DEBUG){debug("io error! ex = "+ex);}
throw new Error("Failed to write conetnt to file.");}},_setchargerled(config){this._setValueToFile(SYSTEM_NODE.CHARGER_LED_NODE,config);},_setcameraled(config){this._setValueToFile(SYSTEM_NODE.CAMERA_LED_NODE,config);},_setsublcd(config){this._setValueToFile(SYSTEM_NODE.BACKLIGHT_LED_NODE,config);},_setkeypadled(config){let KEYPAD_LED_NODE=libcutils.property_get("ro.kaios.keypad_backlight_node",SYSTEM_NODE.KEYBOARD_BACKLIGHT_NODE);this._setValueToFile(KEYPAD_LED_NODE,config);},_setchargingenabled(config){this._setValueToFile(SYSTEM_NODE.BATTERY_CHARGING_NODE,config);},_setdbclickunlock(config){this._setValueToFile(SYSTEM_NODE.DBCLICK_UNLOCK_NODE,config);},_fileRead(path,callback){let obj={};try{let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(path);let fstream=Cc["@mozilla.org/network/file-input-stream;1"].createInstance(Ci.nsIFileInputStream);fstream.init(file,-1,0,Ci.nsIFileInputStream.DEFER_OPEN);let cstream=Cc["@mozilla.org/intl/converter-input-stream;1"].createInstance(Ci.nsIConverterInputStream);cstream.init(fstream,"UTF-8",0,0);let string={};cstream.readString(-1,string);cstream.close();fstream.close();if(DEBUG){debug("fileReadLE success: "+string.value);}
obj.data=string.value;obj.result="OK";}catch(ex){if(DEBUG){debug("fileReadLE error: error parameter");}
obj.data="error parameter";obj.result="KO";}
if(callback!==null){callback(obj);}
return obj;},_filewrite(str,path,par,callback){if(DEBUG){debug("EngmodeService.jsm _filewrite: enter par="+par);}
let obj={};try{var mode;if("a"==par){mode=0x02|0x08|0x10;}else if("f"==par){mode=0x02|0x08|0x20;}
this._setValueToFile(path,str,mode,"0644");obj.data=path+": "+str;obj.result="OK";}catch(ex){obj.data=path+": "+str;obj.result="KO";}
if(callback!==null){callback(obj);}
return obj;},_returnGetFuse(value){this._getfusest.sendAsyncMessage("Engmode:GetFusest:Return",{result:value,});},_commonTypeHdlr(aMessage,type){switch(type){case"MAC_ADDR":this._commonMsgHdlr(aMessage,SYSTEM_NODE.WIFI_MACADDR_NODE);break;case"BATTERY_TEMP":this._commonMsgHdlr(aMessage,SYSTEM_NODE.BATTERY_TEMP_NODE);break;case"BATTERY_ONLINE":this._commonMsgHdlr(aMessage,SYSTEM_NODE.BATTERY_ONLINE_NODE);break;case"USB_CONNECT":this._usbMsgHdl(aMessage);break;case"HEADPHONE_STATE":this._headPhoneMsgHdl(aMessage);break;case"RAM":this._commonMsgHdlr(aMessage,SYSTEM_NODE.RAM_MEMORY_NODE);break;case"RECONDITIONED":this._commonMsgHdlr(aMessage,SYSTEM_NODE.RECONDITIONED_STATE_NODE);break;default:if(DEBUG){debug("can not find type "+JSON.stringify(type));}
break;}},_commonMsgHdlr(aMessage,fileNode){let mm=aMessage.target;let msg=aMessage.data;this._readSysFile(fileNode,function(data){mm.sendAsyncMessage("Engmode:Common:Return",{data,requestID:msg.requestID,});});},_runAsyncProcess(fileNode,args,asyncProcess,success,failure){let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);let process=Cc["@mozilla.org/process/util;1"].createInstance(Ci.nsIProcess);file.initWithPath(fileNode);if(!file.exists()){if(DEBUG){debug(fileNode+" file is not exist");}
return;}
try{process.init(file);process.runAsync(args,args.length,{observe(aSubject,aTopic,aData){if(success){success(aSubject,aTopic,aData);}},});asyncProcess=process;}catch(e){if(DEBUG){debug("start process error: "+e);}
if(failure){failure();}}},_audioLoopMsgHdl(aMessage){let msg=aMessage.data;if(msg.operation==="start"){let args=[];if(msg.param==="mic"){args=["mic"];}else if(msg.param==="stop-mic"){args=["stop-mic"];}else if(msg.param==="sub-mic"){args=["sub-mic"];}else if(msg.param==="stop-sub-mic"){args=["stop-sub-mic"];}else if(msg.param==="headset-left"){args=["headset-left"];}else if(msg.param==="headset-left-stop"){args=["headset-left-stop"];}else if(msg.param==="headset-right"){args=["headset-right"];}else if(msg.param==="headset-right-stop"){args=["headset-right-stop"];}else if(msg.param==="headset-mic"){args=["headset-mic"];}else if(msg.param==="stop-headset-mic"){args=["stop-headset-mic"];}else if(msg.param==="enable-headphone"){args=["enable-headphone"];}else if(msg.param==="disable-headphone"){args=["disable-headphone"];}else{return;}
this._runAsyncProcess(SYSTEM_NODE.AUDIO_TEST_NODE,args,this._audioLoopProcess,function(){if(this._audioLoopProcess&&this._audioLoopProcess.isRunning){this._audioLoopProcess.kill();this._audioLoopProcess=null;}});}else if(msg.operation==="stop"){if(DEBUG){debug("mmitest--audio loop: stop process");}
if(this._audioLoopProcess&&this._audioLoopProcess.isRunning){this._audioLoopProcess.kill();}
this._audioLoopProcess=null;}},_engmodeTestCommandMsgHdl(aMessage){let mm=aMessage.target;let msg=aMessage.data;if(msg.operation==="start"){let fileNode;let args=[];if(msg.useShell){fileNode="/system/bin/sh";args[0]="-c";args[1]=msg.param;}else{fileNode=msg.param.match(/\S+/);let cmds=msg.param.match(/\S+/g);for(var i in cmds){if(i>0){args[i-1]=cmds[i];}}}
if(DEBUG){debug("fileNode: "+fileNode+" args: "+args);}
this._runAsyncProcess(fileNode,args,this._engmodeTestCommandProcess,(aSubject,aTopic,aData)=>{if(this._engmodeTestCommandProcess&&this._engmodeTestCommandProcess.isRunning){this._engmodeTestCommandProcess.kill();}
this._engmodeTestCommandProcess=null;mm.sendAsyncMessage("Engmode:EngmodeTestCommand:Return",{data:aTopic,requestID:msg.requestID,});},()=>{mm.sendAsyncMessage("Engmode:EngmodeTestCommand:Return",{data:"process-failed",requestID:msg.requestID,});});}else if(msg.operation==="stop"){if(DEBUG){debug("engmodeTestCommand: stop process");}
if(this._engmodeTestCommandProcess&&this._engmodeTestCommandProcess.isRunning){this._engmodeTestCommandProcess.kill();}
this._engmodeTestCommandProcess=null;}},_gpsTest(aMessage){let msg=aMessage.data;if(msg.operation==="start"){let args=["0","1"];this._runAsyncProcess(SYSTEM_NODE.GPS_TEST_NODE,args,this._gpsTestProcess,()=>{if(this._gpsTestProcess&&this._gpsTestProcess.isRunning){this._gpsTestProcess.kill();this._gpsTestProcess=null;}});}else if(msg.operation==="stop"){if(DEBUG){debug("mmitest--gps test: stop process");}
if(this._gpsTestProcess&&this._gpsTestProcess.isRunning){this._gpsTestProcess.kill();}
this._gpsTestProcess=null;}},_forceInCall(aMessage){let msg=aMessage.data;if(msg.operation==="start"){if(gAudioManager){gAudioManager.phoneState=nsIAudioManager.PHONE_STATE_IN_CALL;if(DEBUG){debug("mmitest--startForceInCall: set state finished");}}}else if(msg.operation==="stop"){if(gAudioManager){gAudioManager.phoneState=nsIAudioManager.PHONE_STATE_NORMAL;if(DEBUG){debug("mmitest--stopForceInCall: reset state finished");}}}},_apnMsgHdl(aMessage){let mm=aMessage.target;let msg=aMessage.data;this._setDataProfileByType(msg.networkType,msg.profileId,msg.apn,msg.protocol,msg.roamingProtocol,msg.authtype,msg.user,msg.password,msg.type,msg.maxConnsTime,msg.maxConns,msg.waitTime,msg.enabled,msg.inactivityTimer,function(data){mm.sendAsyncMessage("Engmode:setDataProfileByType:Return",{data,requestID:msg.requestID,});});},_usbMsgHdl(aMessage){let mm=aMessage.target;let msg=aMessage.data;this._readSysFile(SYSTEM_NODE.USB_CONNECT_NODE,function(data){if(data.result==="OK"){let s=data.data.match("CONFIGURED");if(s=="CONFIGURED"){data.data=true;}else{data.data=false;}
mm.sendAsyncMessage("Engmode:Common:Return",{data,requestID:msg.requestID,});}else{mm.sendAsyncMessage("Engmode:Common:Return",{data,requestID:msg.requestID,});}});},_headPhoneMsgHdl(aMessage){let mm=aMessage.target;let msg=aMessage.data;this._readSysFile(SYSTEM_NODE.HEADPHONE_STATE_NODE,function(data){if(data.result==="OK"){var index=data.data.indexOf(HEADSET_KEY);var result=data.data.substring(index+HEADSET_KEY.length);if(result==1){data.data="on";}else{data.data="off";}
mm.sendAsyncMessage("Engmode:Common:Return",{data,requestID:msg.requestID,});}else{mm.sendAsyncMessage("Engmode:Common:Return",{data,requestID:msg.requestID,});}});},receiveMessage(aMessage){if(DEBUG){debug("receiveMessage: "+aMessage.name);}
let mm=aMessage.target;let msg=aMessage.data;switch(aMessage.name){case"Engmode:Common":this._commonTypeHdlr(aMessage,msg.type);break;case"Engmode:HookKeyEvt":if(msg.enable===true){this._keyEvtTarget=mm;}else{this._keyEvtTarget=null;}
break;case"Engmode:HookHeadsetStatusChangedEvt":if(msg.enable===true){this._headsetEvtTarget=mm;}else{this._headsetEvtTarget=null;}
break;case"Engmode:RunProcess":this._sysService(msg.command,function(processState){mm.sendAsyncMessage("Engmode:RunProcess:Return",{data:processState,requestID:msg.requestID,});});break;case"Engmode:GetFilesLastTime":this._getFilesLastTime(msg.aFilePathArray,function(data){mm.sendAsyncMessage("Engmode:GetFilesLastTime:Return",{data,requestID:msg.requestID,});});break;case"Engmode:CopyFile":this._copyFile(msg.sourcePath,msg.directoryPath,msg.fileNewName,function(data){mm.sendAsyncMessage("Engmode:CopyFile:Return",{data,requestID:msg.requestID,});});break;case"Engmode:CreateDirOrFile":this._createGivenDirOrFile(msg.path,msg.typeStr,msg.shouldCreate,function(data){mm.sendAsyncMessage("Engmode:CreateDirOrFile:Return",{data,requestID:msg.requestID,});});break;case"Engmode:CheckIsCommandRunnig":this._checkIsCommandRunning(msg.commands,function(is_running){mm.sendAsyncMessage("Engmode:CheckIsCommandRunnig:Return",{status:is_running,requestID:msg.requestID,});});break;case"Engmode:AudioLoop":this._audioLoopMsgHdl(aMessage);break;case"Engmode:ForceInCall":this._forceInCall(aMessage);break;case"Engmode:EngmodeTestCommand":this._engmodeTestCommandMsgHdl(aMessage);break;case"Engmode:GpsTest":this._gpsTest(aMessage);break;case"Engmode:GetFusest":this._getfusest=aMessage.target;this._getFusestate();break;case"Engmode:SetChargerLED":this._setchargerled(msg.config);break;case"Engmode:SetCameraLED":this._setcameraled(msg.config);break;case"Engmode:setSubLCD":this._setsublcd(msg.config);break;case"Engmode:setKeypadLED":this._setkeypadled(msg.config);break;case"Engmode:SetChargingEnabled":this._setchargingenabled(msg.config);break;case"Engmode:SetDbClickUnlock":this._setdbclickunlock(msg.config);break;case"Engmode:FileRead":this._fileRead(msg.path,function(data){mm.sendAsyncMessage("Engmode:FileRead:Return",{data,requestID:msg.requestID,});});break;case"Engmode:FileWrite":this._filewrite(msg.str,msg.path,msg.par,function(data){mm.sendAsyncMessage("Engmode:FileWrite:Return",{data,requestID:msg.requestID,});});break;case"Engmode:SetDirProp":this._setDirProp(msg.path,msg.status,function(data){mm.sendAsyncMessage("Engmode:SetDirProp:Return",{data,requestID:msg.requestID,});});break;case"Engmode:setDataProfileByType":this._apnMsgHdl(aMessage);break;default:if(DEBUG){debug("receiveMessage: Can not process the message "+aMessage.name);}
break;}},observe(aSubject,aTopic,aData){switch(aTopic){case"profile-after-change":Services.obs.addObserver(this,"xpcom-shutdown");this.init();break;case"xpcom-shutdown":Services.obs.removeObserver(this,"xpcom-shutdown");this.uninit();break;case TOPIC_PREF_CHANGED:if(aData===RIL_DEBUG.PREF_RIL_DEBUG_ENABLED){this._updateDebugFlag();}
break;}},};var EXPORTED_SYMBOLS=["EngmodeService"];