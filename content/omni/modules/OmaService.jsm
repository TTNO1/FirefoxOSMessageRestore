//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
'use strict';const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{NetUtil}=ChromeUtils.import("resource://gre/modules/NetUtil.jsm");const{FileUtils}=ChromeUtils.import("resource://gre/modules/FileUtils.jsm");
const DEBUG=true;this.EXPORTED_SYMBOLS=['OmaService'];const OMADM_PUSH_SCOPE_ACCOUNT_UPDATE="oma://kaios-device-update-omadm";function debug(aStr){if(DEBUG)
dump("OmaService.jsm: "+aStr+"\n");}
function returnMessage(aMessage,aSuccess,aData,aMsg,aExtData){let rMsg=aMessage+":Return:"+(aSuccess?"OK":"NO");if(aMsg){if(aMsg.target){if(aExtData){aMsg.target.sendAsyncMessage(rMsg,{data:aData,rid:aMsg.data.rid,ext:aExtData});}else{aMsg.target.sendAsyncMessage(rMsg,{data:aData,rid:aMsg.data.rid});}}else{debug("OmaService.jsm : aMsg.target = NULL")}}}
const{classes:Cc,interfaces:Ci,utils:Cu,results:Cr}=Components;const kNetworkConnStateChangedTopic="network-connection-state-changed";const NETWORK_TYPE_WIFI=Ci.nsINetworkInfo.NETWORK_TYPE_WIFI;const NETWORK_TYPE_MOBILE=Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE;const NETWORK_TYPE_MOBILE_FOTA=Ci.nsINetworkInfo.NETWORK_TYPE_MOBILE_FOTA;const DMACC_APPADDR_ADDR="dm.dmacc.appaddr.addr";const DMACC2_APPADDR_ADDR="dm.dmacc2.appaddr.addr";Cu.import("resource://gre/modules/DescMoActionHandler.jsm");Cu.import("resource://gre/modules/EngineEventHandler.jsm");XPCOMUtils.defineLazyGetter(this,"RIL",function(){let obj=ChromeUtils.import("resource://gre/modules/ril_consts.js",null);return obj;});ChromeUtils.defineModuleGetter(this,"libcutils","resource://gre/modules/systemlibs.js");XPCOMUtils.defineLazyServiceGetter(this,"ppmm","@mozilla.org/parentprocessmessagemanager;1","nsIMessageListenerManager");XPCOMUtils.defineLazyServiceGetter(this,"omaagent","@tcl.com/omadmAgent;1","nsIOmadmAgent");XPCOMUtils.defineLazyServiceGetter(this,"gPowerManagerService","@mozilla.org/power/powermanagerservice;1","nsIPowerManagerService");XPCOMUtils.defineLazyServiceGetter(this,"smsService","@mozilla.org/sms/smsservice;1","nsISmsService");XPCOMUtils.defineLazyServiceGetter(this,'mPushService','@mozilla.org/push/Service;1','nsIPushService');XPCOMUtils.defineLazyServiceGetter(this,"gNetworkManager","@mozilla.org/network/manager;1","nsINetworkManager");XPCOMUtils.defineLazyServiceGetter(this,"gNetworkService","@mozilla.org/network/service;1","nsINetworkService");XPCOMUtils.defineLazyServiceGetter(this,"gRadioInterfaceLayer","@mozilla.org/ril;1","nsIRadioInterfaceLayer");XPCOMUtils.defineLazyServiceGetter(this,"gMobileConnectionService","@mozilla.org/mobileconnection/mobileconnectionservice;1","nsIMobileConnectionService");XPCOMUtils.defineLazyServiceGetter(this,"gIccService","@mozilla.org/icc/iccservice;1","nsIIccService");XPCOMUtils.defineLazyServiceGetter(this,"gTelephonyService","@mozilla.org/telephony/telephonyservice;1","nsITelephonyService");Uint8Array.prototype.write=function(array,offset){this.set(array,offset);return array.length;};Uint8Array.prototype.read=function(offset,length){var arr=new Array();arr.push.apply(arr,this.subarray(offset,offset+length));return arr;};Uint8Array.prototype.writeUInt32BE=function(value,offset){var arr=this;arr[offset]=(value>>>24)&0xff;arr[offset+1]=(value>>>16)&0xff;arr[offset+2]=(value>>>8)&0xff;arr[offset+3]=value&0xff;return 4;};Uint8Array.prototype.writeInt32BE=function(value,offset){if(value<0)value=0xffffffff+value+1;return this.writeUInt32BE(value,offset,true);};Uint8Array.prototype.readUInt32BE=function(offset){var val;var arr=this;val=arr[offset+1]<<16;val|=arr[offset+2]<<8;val|=arr[offset+3];val=val+(arr[offset]<<24>>>0);return val;};Uint8Array.prototype.readInt32BE=function(offset){var val=this.readUInt32BE(offset);if(val&0x80000000)val=(0xffffffff-val+1)*-1;return val;};Uint8Array.prototype.writeString=function(str,offset){var n=str.length;var idx=offset;var arr=this;for(var i=0;i<n;++i){var c=str.charCodeAt(i);if(c<=0x7F){arr[idx++]=c;}else if(c<=0x7FF){arr[idx++]=0xC0|(c>>>6);arr[idx++]=0x80|(c&0x3F);}else if(c>=0xD800&&c<=0xDBFF){var low=str.charCodeAt(++i);c=((c-0xD800)*0x400)+(low-0xDC00)+0x10000;arr[idx++]=0xF0|(c>>>18);arr[idx++]=0x80|((c>>>12)&0x3F);arr[idx++]=0x80|((c>>>6)&0x3F);arr[idx++]=0x80|(c&0x3F);}else if(c>=0xDC00&&c<=0xDFFF){}else {arr[idx++]=0xE0|(c>>>12);arr[idx++]=0x80|((c>>>6)&0x3F);arr[idx++]=0x80|(c&0x3F);}}
return idx-offset;};Uint8Array.prototype.Utf8ArrayToStr=function(){var out,i,len,c;var char2,char3;var array=this;out="";len=array.length;i=0;while(i<len){c=array[i++];switch(c>>4)
{case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7: out+=String.fromCharCode(c);break;case 12:case 13: char2=array[i++];out+=String.fromCharCode(((c&0x1F)<<6)|(char2&0x3F));break;case 14: char2=array[i++];char3=array[i++];out+=String.fromCharCode(((c&0x0F)<<12)|((char2&0x3F)<<6)|((char3&0x3F)<<0));break;}}
return out;};Uint8Array.prototype.readString=function(offset,length){var arr=this;var chars=[];var end=offset+length;for(var idx=offset;idx<end;++idx){var byte1=arr[idx];if(byte1<=0x7F){chars.push(String.fromCharCode(byte1));}else if(byte1>=0xC0&&byte1<=0xDF){var byte2=arr[++idx];chars.push(String.fromCharCode(((byte1&0x1F)<<6)+(byte2&0x3F)));}else if(byte1>=0xE0&&byte1<=0xEF){var byte2=arr[++idx];var byte3=arr[++idx];chars.push(String.fromCharCode(((byte1&0x0F)<<12)+((byte2&0x3F)<<6)+(byte3&0x3F)));}else if(byte1>=0xF0&&byte1<=0xF7){var byte2=arr[++idx];var byte3=arr[++idx];var byte4=arr[++idx];var codepoint=((byte1&0x07)<<18)+((byte2&0x3F)<<12)+((byte3&0x3F)<<6)+(byte4&0x3F);codepoint-=0x10000;chars.push(String.fromCharCode(0xD800+(codepoint>>10),0xDC00+(codepoint&0x3FF)));}}
return chars.join("");};var VAR_TYPE_UINT=1;var VAR_TYPE_STR=2;var VAR_TYPE_BIN=3;var VAR_TYPE_INT=4;function parseVar(arr,offset,vars){var idx=offset;var varNameSize=arr.readUInt32BE(idx);idx+=4;var varName=arr.readString(idx,varNameSize);idx+=varNameSize;var varType=arr.readUInt32BE(idx);idx+=4;var data;if(varType==VAR_TYPE_UINT){data=arr.readUInt32BE(idx);idx+=4;}else if(varType==VAR_TYPE_STR){var varDataSize=arr.readUInt32BE(idx);idx+=4;data=arr.readString(idx,varDataSize);idx+=varDataSize;}else if(varType==VAR_TYPE_BIN){var varDataSize=arr.readUInt32BE(idx);idx+=4;data=arr.read(idx,varDataSize);idx+=varDataSize;}else if(varType==VAR_TYPE_INT){data=arr.readInt32BE(idx);idx+=4;}else{return idx-offset;}
vars[varName]=data;return idx-offset;}
function parseEvent(arr){var idx=0;var msgSize=arr.readUInt32BE(idx);idx+=4;var name=arr.readString(idx,msgSize);idx+=msgSize;var evt={'name':name};var varsCount=arr.readUInt32BE(idx);idx+=4;if(varsCount>0){var vars={};for(var i=0;i<varsCount;++i){idx+=parseVar(arr,idx,vars);}
evt.vars=vars;}
return evt;}
function genVar(key,value){var arr=new Uint8Array(4+key.length*4+4+4+(~~value.length)*4);var idx=0;var size=arr.writeString(key,4);arr.writeUInt32BE(size,0);idx+=4+size;if(typeof(value)=='number'){if(value>=0){arr.writeUInt32BE(VAR_TYPE_UINT,idx);idx+=4;arr.writeUInt32BE(value,idx);idx+=4;}else{arr.writeUInt32BE(VAR_TYPE_INT,idx);idx+=4;arr.writeInt32BE(value,idx);idx+=4;}}else if(typeof(value)=='string'){arr.writeUInt32BE(VAR_TYPE_STR,idx);idx+=4;size=arr.writeString(value,idx+4);arr.writeUInt32BE(size,idx);idx+=4+size;}else if(value instanceof Array||value instanceof Uint8Array){arr.writeUInt32BE(VAR_TYPE_BIN,idx);idx+=4;size=arr.write(value,idx+4)
arr.writeUInt32BE(size,idx);idx+=4+size;}else{return undefined;}
return arr.subarray(0,idx);}
function genEvent(evt){var idx,size;var arrHeader=new Uint8Array(4+4+evt.name.length*4+4);size=arrHeader.writeString(evt.name,8);var eventNameLength=size;arrHeader.writeUInt32BE(size,4);idx=4+4+size;arrHeader=arrHeader.subarray(0,idx+4);var arrs=[];if(!evt.vars){arrHeader.writeUInt32BE(0,idx);idx+=4;}else{var varKeys=Object.keys(evt.vars);arrHeader.writeUInt32BE(varKeys.length,idx);idx+=4;for(var i in varKeys){var key=varKeys[i];var value=evt.vars[key];if(value!=null){var arrVar=genVar(key,value);if(arrVar)arrs.push(arrVar);}else{debug("[wjj] !!!!ERROR!!!!! value is null for key = "+key);}}}
size=arrHeader.length;for(var i=0;i<arrs.length;++i)size+=arrs[i].length;var arr=new Uint8Array(size);arr.set(arrHeader,0);idx=arrHeader.length;for(var i=0;i<arrs.length;++i){arr.set(arrs[i],idx);idx+=arrs[i].length;}
idx=size;var securedArrLength=0;var securityDataLength=0;if(false)
{var key='258EAFA5-E914-47';securityDataLength=key.length+eventNameLength;securedArrLength=idx+4+securityDataLength;}
else
{securedArrLength=idx+4;}
var serializeArr=new Uint8Array(securedArrLength+4);serializeArr.set(arr,0);serializeArr.writeUInt32BE(securedArrLength,0);serializeArr.writeUInt32BE(securityDataLength,idx);if(false)
{idx+=4;idx+=serializeArr.writeString(key,idx);idx+=serializeArr.writeString(evt.name,idx);}
return serializeArr;}
var mEventCollector=null;var _omadmHandledWakeLock=null;var isIMEIInit;var isIMSIInit;var isCarrierInit;var isActivationModeInit;var isCellIDInit;var isIccIdInit;var _imei=null;var _iccid=null;var _swversion=null;var _treeversion=1;this.engineCallback={alarmIdTable:{},resetAlarm:function(id){this.alarmIdTable[id]=null;},setAlarm:function(id,secs){if(id<0){omaagent.alarmExpire(id);return;}
},acquireWl:function(){debug("[wjj] acquireWl called");if(null==_omadmHandledWakeLock){debug("[wjj] to call gPowerManagerService.newWakeLock");_omadmHandledWakeLock=gPowerManagerService.newWakeLock("cpu");}},releaseWl:function(){if(null!=_omadmHandledWakeLock){_omadmHandledWakeLock.unlock();_omadmHandledWakeLock=null;}},getImei:function(index){if(index==0&&_imei!=null){debug("[wjj] engineCallback() using temp imei getImei imei:"+_imei);omaagent.setValue(index,"imei",_imei);return;}
let imei=null;let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){imei=null;}else{let mobileProvider=gMobileConnectionService.getItemByServiceId(index);imei=mobileProvider&&mobileProvider.deviceIdentities?mobileProvider.deviceIdentities.imei:null;}
if(!imei){imei="null";}else{isIMEIInit=true;}
debug("[wjj]engineCallback() getImei imei:"+imei);omaagent.setValue(index,"imei",imei);},getImsi:function(index){let imsi=null;let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){imsi=null;}else{let icc=gIccService.getIccByServiceId(index);imsi=icc&&icc.imsi?icc.imsi:null;}
if(!imsi){imsi="null";}else{isIMSIInit=true;}
omaagent.setValue(index,"imsi",imsi);},getCarrier:function(index){let carrier=null;let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){carrier=null;}else{let icc=gIccService.getIccByServiceId(index);let iccInfo=icc&&icc.iccInfo;carrier=iccInfo&&iccInfo.spn?iccInfo.spn:null;}
if(!carrier){carrier="null";}else{isCarrierInit=true;}
omaagent.setValue(index,"carrier",carrier);},getActivationMode:function(index){let activationMode=null;var mobileDataIconTypes={'lte':'4g','umts':'3g','gprs':'2g'};let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){activationMode=null;}else{let connection=gMobileConnectionService.getItemByServiceId(index);if(gNetworkManager&&gNetworkManager.activeNetworkInfo&&(gNetworkManager.activeNetworkInfo.type===NETWORK_TYPE_WIFI)){activationMode='Wi-Fi';}else{let voiceInfo=connection&&connection.voice;if(voiceInfo.connected){let type=voiceInfo&&voiceInfo.type;activationMode=mobileDataIconTypes[type];}}}
if(!activationMode){activationMode="Unknown";}else{isActivationModeInit=true;}
omaagent.setValue(index,"activationMode",activationMode);},getAndroidVersion:function(){let androidVersion=libcutils.property_get('ro.product.version_tag');if(!androidVersion){androidVersion=libcutils.property_get('ro.build.version.release');if(!androidVersion){androidVersion="null";}}
omaagent.setValue(0,"androidVersion",androidVersion);},getBasebandVersion:function(){let basebandVersion=libcutils.property_get('ro.boot.hardware.revision');if(!basebandVersion){basebandVersion="null";}
omaagent.setValue(0,"basebandVersion",basebandVersion);},getBuildNumber:function(){if(_swversion!=null){debug("[wjj] engineCallback() using temp SW version getBuildNumber version:"+_swversion);omaagent.setValue(0,"buildNumber",_swversion);return;}
let buildNumber=libcutils.property_get('ro.build.version.fih');if(!buildNumber){buildNumber="null";}
debug("[wjj] engineCallback() SW version getBuildNumber:"+buildNumber);omaagent.setValue(0,"buildNumber",buildNumber);},getCellId:function(index){let cellID=null;let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){cellID=null;}else{let connection=gMobileConnectionService.getItemByServiceId(index);let voiceInfo=connection&&connection.voice;let cell=voiceInfo&&voiceInfo.cell;cellID=cell&&cell.gsmCellId?cell.gsmCellId:null;}
if(!cellID){cellID="null";}else{isCellIDInit=true;}
omaagent.setValue(index,"cellID",cellID);},getIccId:function(index){if(index==0&&_iccid!=null){debug("[wjj] engineCallback() using temp ICCID:"+_iccid);omaagent.setValue(index,"iccid",_iccid);return;}
let iccId=null;let numClients=gRadioInterfaceLayer.numRadioInterfaces;if(index>=numClients){iccId=null;}else{let icc=gIccService.getIccByServiceId(index);let iccinfo=icc&&icc.iccInfo;iccId=iccinfo&&iccinfo.iccid?iccinfo.iccid:null;}
if(!iccId){iccId="NULL";}else{isIccIdInit=true;}
debug("[wjj] engineCallback() getIccId iccid:"+iccId);omaagent.setValue(index,"iccid",iccId);},getManufacturer:function(){let manufacturer=libcutils.property_get("persist.omadm.manufacturer");if(0==manufacturer.length){manufacturer=libcutils.property_get('ro.product.manufacturer');}
if(!manufacturer){manufacturer="null";}
omaagent.setValue(0,"manufacturer",manufacturer);},getDeviceModel:function(){let deviceModel=libcutils.property_get("persist.omadm.deviceModel");if(0==deviceModel.length){deviceModel=libcutils.property_get('ro.product.model');}
if(!deviceModel){deviceModel="null";}
omaagent.setValue(0,"deviceModel",deviceModel);},registerBatterytoEngine:function(){OmaService.getBatteryLevel(function(data){if(data.data!==undefined){let level=parseInt(data.data,10);OmaService._sendComplexEventToEngine('D2B_BATTERY_LEVEL',{'DMA_VAR_BATTERY_LEVEL':level});}});},registerWebPush:function(){OmaService._webpushGetRegister();},registerSMStoEngine:function(slot,destNO,dataValue){let aRequest=new smsRequest();smsService.send(slot,destNO,dataValue,true,aRequest);},_getResultFromUIEvent:function(uiEvent){var arr_len=uiEvent.length;var content=new Uint8Array(arr_len);for(var c in uiEvent){content[c]=uiEvent[c];}
return parseEvent(content);},registeruiEvent:function(uiEvent){if(null===uiEvent){debug("[wjj] registeruiEvent uiEvent is null");return;}
let result=this._getResultFromUIEvent(uiEvent);Services.ppmm.broadcastAsyncMessage('VDM_EVENT',result);let eventHandler=EngineEventHandler[result.name];if(eventHandler){eventHandler(result);}},env_omaengine_init:function(){let index0=0;let index1=1;let buffer;let size;let imei1=this.getImei(index1);let imsi0=this.getImsi(index0);let imsi1=this.getImsi(index1);let carrier0=this.getCarrier(index0);let carrier1=this.getCarrier(index1);let activationMode=this.getActivationMode(index0);let androidVersion=this.getAndroidVersion();let basebandVersion=this.getBasebandVersion();let cellID=this.getCellId(buffer);let manufacturer=this.getManufacturer();let deviceModel=this.getDeviceModel();let iccid1=this.getIccId(index1);DescMoActionHandler.init(OmaService,Services,Services.ppmm);let imei0=this.getImei(index0);let iccid0=this.getIccId(index0);let buildNumber=this.getBuildNumber();EngineEventHandler.init(OmaService,omaagent,Services.ppmm,DescMoActionHandler);},engineRegister:function(){omaagent.setCallback(engineCallback);},};function pushSubscriptionCallback(){};pushSubscriptionCallback.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIPushSubscriptionCallback]),onPushSubscription:function(ok,subscription){if(!Components.isSuccessCode(ok)){debug("webpush getSubscription == fail");return;}
if(!subscription){debug("webpush getSubscription == null");OmaService._webpushRegister();return;}
let p256dhKey=this._getKey(subscription,"p256dh");let authSecret=this._getKey(subscription,"auth");let options={endpoint:subscription.endpoint,scope:OMADM_PUSH_SCOPE_ACCOUNT_UPDATE,p256dhKey:p256dhKey,authSecret:authSecret,};let appServerKey=this._getKey(subscription,"appServer");if(appServerKey){options.appServerKey=appServerKey;}
OmaService._sendComplexEventToEngine('D2B_NET_NOTIF_REGIST',{'DMA_VAR_NOTIF_REG_ID':options.endpoint,'DMA_VAR_KEYS_AUTH':options.authSecret,'DMA_VAR_KEYS_PUBLICKEY':options.p256dhKey});},_getKey:function(subscription,name){let outKeyLen={};let rawKey=subscription.getKey(name,outKeyLen);if(!outKeyLen.value){return null;}
let key=new ArrayBuffer(outKeyLen.value);let keyView=new Uint8Array(key);keyView.set(rawKey);let result=this.uint8ArrayToBase64Url(keyView);return result;},uint8ArrayToBase64Url:function(uint8Array){var start=start||0;var end=end||uint8Array.byteLength;const base64=btoa(String.fromCharCode.apply(null,uint8Array.subarray(start,end)));return base64;

},};function smsRequest(){};smsRequest.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIMobileMessageCallback]),notifyMessageSent:function notifyMessageSent(aMessage){OmaService._sendComplexEventToEngine('D2B_MSG_REGIST_SMS_DONE_SUCCESS','');},notifySendMessageFailed:function notifySendMessageFailed(id,aError){OmaService._sendComplexEventToEngine('D2B_MSG_REGIST_SMS_FAIL','');}};this.OmaService={_isFirstRun:true,_needReoot:false,_timer:null,_timerRepeatCnt:0,_cachedDmMsg:null,_routeAdded:false,_activateFotaApnState:0,init:function init(){debug('init for OmaService');let product=libcutils.property_get("ro.product.omadm.engine");if('no-omadm'==product){debug("init() exit: no omadm engine should run!");return;}
let engineName=omaagent.getEngineName();if('not-exist'==engineName){debug("init() exit: no omadm engine exist!");return;}
let isFst=libcutils.property_get("persist.omadm.factory_reset");if(!isFst||'yes'==isFst){libcutils.property_set("persist.omadm.factory_reset","no");}else{this._isFirstRun=false;}
let fotaName=libcutils.property_get("ro.product.fota");if(fotaName!=='redbend'){
}
this._messages=['OmaService:setOptToDM','OmaService:command','OmaService:handleCpReq',];this._messages.forEach(function addMessage(msgName){Services.ppmm.addMessageListener(msgName,this);}.bind(this));},handle:function(name,aResult){},handleError:function(errorMessage){},receiveMessage:function receiveMessage(aMessage){let json=aMessage.json;let self=this;switch(aMessage.name){case'OmaService:command':this._command(aMessage);break;case'OmaService:setOptToDM':this._setOptToDM(aMessage);break;case'OmaService:handleCpReq':this._handleCpReq(aMessage);break;default:debug("error message "+aMessage.name);break;}},setServerAddr:function(node,data){omaagent.setValue(1000,node,data);},setTreeVersion:function(treeversion){if(treeversion==null){_treeversion=1;}else{_treeversion=treeversion;}},setImei:function(imei){_imei=imei;},setIccid:function(iccid){_iccid=iccid;},setSwVersion:function(swversion){_swversion=swversion;},getPersistData:function(){let dataObj={};debug("[wjj] getPersistData called");dataObj.TREE_VERSION=_treeversion;dataObj["./DMAcc/AppAddr/Addr"]=omaagent.getValue(1000,"./DMAcc/AppAddr/Addr");dataObj["./DMAcc/AppAddr/AddrType"]=omaagent.getValue(1000,"./DMAcc/AppAddr/AddrType");dataObj["./DMAcc/AppAddr/Port"]=omaagent.getValue(1000,"./DMAcc/AppAddr/Port");dataObj["./DMAcc2/AppAddr/Addr"]=omaagent.getValue(1000,"./DMAcc2/AppAddr/Addr");dataObj["./DMAcc2/AppAddr/AddrType"]=omaagent.getValue(1000,"./DMAcc2/AppAddr/AddrType");dataObj["./DMAcc2/AppAddr/Port"]=omaagent.getValue(1000,"./DMAcc2/AppAddr/Port");if(_imei!=null){dataObj.IMEI=_imei;}
if(_iccid!=null){dataObj.ICCID=_iccid;}
if(_swversion!=null){dataObj.SWVERSION=_swversion;}
return dataObj;},_getFotaDatacallState:function(){if(this._isDataFotaConnected()&&!this._isWifiConnected()){this._activateFotaApnState++;debug('[wjj] _getFotaDatacallState _activateFotaApnState: '+this._activateFotaApnState);}
return this._isDataFotaConnected()||this._isWifiConnected();},_getCachedDmMsg:function(){return this._cachedDmMsg;},_clearCachedDmMsg:function(){this._cachedDmMsg=null;},_sendCachedDmMsg:function(){let cachedMsg=this._getCachedDmMsg();debug('[wjj] fota apn or wifi is ready, cachedMsg: '+cachedMsg);if(cachedMsg!=null){ cachedMsg=JSON.parse(cachedMsg);debug('[wjj] cachedMsg got, send to engine');this._sendComplexEventToEngine(cachedMsg.type,cachedMsg.name);this._clearCachedDmMsg();}},_isWifiConnected:function(){let connected=gNetworkManager&&gNetworkManager.activeNetworkInfo&&(gNetworkManager.activeNetworkInfo.type===NETWORK_TYPE_WIFI);debug('_isWifiConnected connected = '+connected);return!!connected;},_isDataConnected:function(type){let connected=false;try{let radioInterface=gRadioInterfaceLayer.getRadioInterface(0);let state=radioInterface.getDataCallStateByType(NETWORK_TYPE_MOBILE);debug('[wjj] internet apn state: '+state);if(state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED){connected=true;}}catch(err){debug('_isDataConnected err: '+err);}
debug('_isDataFotaConnected connected = '+connected);return!!connected;},_isDataFotaConnected:function(type){let connected=false;try{let radioInterface=gRadioInterfaceLayer.getRadioInterface(0);let state=radioInterface.getDataCallStateByType(NETWORK_TYPE_MOBILE_FOTA);debug('[wjj] FOTA apn state: '+state);if(state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED){connected=true;}}catch(err){debug('_isDataFotaConnected err: '+err);}
debug('_isDataFotaConnected connected = '+connected);return!!connected;},_isRoaming:function(){let connection=gMobileConnectionService.getItemByServiceId(0);let roaming=connection&&connection.data&&connection.data.roaming;debug('_isRoaming roaming = '+roaming);return roaming;},_activateFota:function(){try{let radioInterface=gRadioInterfaceLayer.getRadioInterface(0);let state=radioInterface.getDataCallStateByType(NETWORK_TYPE_MOBILE_FOTA);debug('[wjj]_activateFota FOTA apn state: '+state);this._activateFotaApnState++;debug('[wjj] _activateFota _activateFotaApnState: '+this._activateFotaApnState);if(state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED){debug('[wjj] FOTA apn is setup already, just need to wait notification');}else{radioInterface.setupDataCallByType(NETWORK_TYPE_MOBILE_FOTA);}}catch(e){debug('[wjj]_activateFota !!!!!!!error!!!!!! setupDataCallByType for FOTA failed error: '+e);}},_deactivateFota:function(){debug('[wjj] _deactivateFota, _activateFotaApnState: '+this._activateFotaApnState);try{let radioInterface=gRadioInterfaceLayer.getRadioInterface(0);let state=radioInterface.getDataCallStateByType(NETWORK_TYPE_MOBILE_FOTA);debug('[wjj] _deactivateFota FOTA apn state: '+state);if(state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED&&this._activateFotaApnState>0){this._activateFotaApnState--;}
debug('[wjj] _deactivateFota delayRun 10s if needed, _activateFotaApnState: '+this._activateFotaApnState);this._delayRun(true,1,10000,()=>{debug('[wjj] _deactivateFota running, _activateFotaApnState: ',this._activateFotaApnState);if(this._activateFotaApnState==0){radioInterface.deactivateDataCallByType(NETWORK_TYPE_MOBILE_FOTA);};});}catch(err){debug('_deactivateFota err: '+err);}},_readSysFile:function(filePath,callback){let file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);file.initWithPath(filePath);NetUtil.asyncFetch(file,function(inputStream,status){let temp={};if(!Components.isSuccessCode(status)){ temp.result='KO';temp.data=status;}
else{ let data=NetUtil.readInputStreamToString(inputStream,inputStream.available());temp.result='OK';temp.data=data;}
callback(temp);});},_delayRun:function(isRepeat,repeatCnt,period,callback){
if(!callback||'function'!=typeof callback||1>repeatCnt||0>=period||0<this._timerRepeatCnt){return;}
this._timerRepeatCnt=repeatCnt;this._timer=Cc["@mozilla.org/timer;1"].createInstance(Ci.nsITimer);this._timer.initWithCallback(()=>{if((--this._timerRepeatCnt)<1){callback();this._timer.cancel();return;}
if(isRepeat){if(callback()){this._timer.cancel();this._timerRepeatCnt=0;}}},period,Ci.nsITimer.TYPE_REPEATING_SLACK);},_updateDmNodes:function(){for(let i=0;i<1000;i++){let uri=libcutils.property_get("persist.omadm.node_r"+i+"_uri");let value=libcutils.property_get("persist.omadm.node_r"+i+"_value");if(uri&&value){OmaService._sendComplexEventToEngine('D2B_TREE_NODE_REPLACE',{'DMA_VAR_NODE_URI':uri,'DMA_VAR_NODE_VALUE':value,'DMA_VAR_NODE_FORMAT':"chr",'VAR_ACL_SERVER_ID':"dil"});continue;}
break;}},_needAddRoute:function(){let node="./ManagedObjects/ConnMO/LTE/APN/3/Setting/Name";let nodeValue=omaagent.getValue(1000,node);let node2="./ManagedObjects/ConnMO/LTE/APN/3/Setting/Enabled";let nodeValue2=omaagent.getValue(1002,node);if(nodeValue=="VZWINTERNET"&&nodeValue2){debug('_needAddRoute APN3 name correct and enabled');return true;}
debug('_needAddRoute APN3 is not correct');return false;},_addRoute:function(networkInfo,obj,callback){gNetworkManager.addHostRoute(networkInfo,'4g2.vzwdm.com').then(()=>{debug('addHostRoute success for 4g2.vzwdm.com');}).catch((err)=>{debug('addHostRoute failed for 4g2.vzwdm.com');}); gNetworkManager.addHostRoute(networkInfo,'ddodigicert.saas.nokia.com').then(()=>{debug('addHostRoute success for ddodigicert.saas.nokia.com');}).catch((err)=>{debug('addHostRoute failed for ddodigicert.saas.nokia.com');}); gNetworkManager.addHostRoute(networkInfo,'otadm.vzw.com').then(()=>{debug('addHostRoute success for otadm.vzw.com');}).catch((err)=>{debug('addHostRoute failed for otadm.vzw.com');}); gNetworkManager.addHostRoute(networkInfo,'otadm-iot.vzw.com').then(()=>{debug('addHostRoute success for otadm-iot.vzw.com');}).catch((err)=>{debug('addHostRoute failed for otadm-iot.vzw.com');}); gNetworkManager.addHostRoute(networkInfo,'ivzwmdmv.iot.motive.com').then(()=>{debug('addHostRoute success for ivzwmdmv.iot.motive.com');}).catch((err)=>{debug('addHostRoute failed for ivzwmdmv.iot.motive.com');}); gNetworkManager.addHostRoute(networkInfo,'iotcdn2.vzwdm.com').then(()=>{debug('addHostRoute success for iotcdn2.vzwdm.com');callback(obj);}).catch((err)=>{debug('addHostRoute failed for iotcdn2.vzwdm.com'); });},_getRouteAddState:function(){return this._routeAdded;},_setRouteAddState:function(value){this._routeAdded=value;},_servicestart:function(){debug('startOmadmAgent');if(omaagent.AgentState==0){return;}
engineCallback.env_omaengine_init();engineCallback.engineRegister();omaagent.startOmadm();OmaService._delayRun(true,1,800,()=>{ this._sendEvent("D2B_STS_POWERED","NULL",1);let numClients=gRadioInterfaceLayer.numRadioInterfaces;let netId=0;debug('[wjj] _servicestart numClients: '+numClients);let connection=gMobileConnectionService.getItemByServiceId(0);debug('[wjj] _servicestart connection: '+JSON.stringify(connection));let networkInfo;if(gNetworkManager&&gNetworkManager.activeNetworkInfo){ debug('[wjj] checking cache msg since mobile data is on');if(gNetworkManager.activeNetworkInfo.type===NETWORK_TYPE_MOBILE&&this._getCachedDmMsg()!=null){debug('[wjj] activate fota apn since mobile network caught');this._activateFota();}
networkInfo=gNetworkManager.activeNetworkInfo;debug('[wjj] _servicestart networkInfo: '+JSON.stringify(networkInfo));netId=networkInfo.netId;debug('[wjj] _servicestart networkName: '+networkInfo.name+' netId: '+netId);}
if(this._isWifiConnected()){debug('[wjj] wifi connected, send wifi ready message');this._sendEvent("D2B_STS_WIFI","DMA_VAR_STS_IS_WIFI_CONNECTED",netId);this._sendCachedDmMsg();}
if(!this._isRoaming()){debug('[wjj] roaming status, send roaming message');this._sendEvent("D2B_STS_ROAMING","DMA_VAR_STS_IS_ROAMING",false);}
if(this._isDataConnected()){debug('[wjj] internet data connected, inform UI');this._sendUIEventToApp("B2D_STS_MOBILE_DATA_INTERNET",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":netId});}
if(this._isDataFotaConnected()){debug('[wjj] data connected, send data connected message');if(this._getCachedDmMsg()!=null){if(!this._getRouteAddState()){debug('[wjj] _servicestart add route since found unsend msg and its not added before');this._addRoute(networkInfo,this,function(obj){obj._sendCachedDmMsg();obj._setRouteAddState(true);});}else{this._sendCachedDmMsg();}}
this._sendEvent("D2B_STS_MOBILE_DATA","DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED",netId);this._sendUIEventToApp("B2D_STS_MOBILE_DATA_FOTA",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":netId});}
if(null==mEventCollector){mEventCollector=new EventCollector();}
return true;});if(this._isFirstRun){DescMoActionHandler.onFirstRun();}},_serviceend:function(){if(omaagent.AgentState!=0){return;}
try{omaagent.stopOmadm();}catch(e){debug("before stopOmadm excute error: "+e);}},_sendEvent:function(eventType,valueType,value){debug("_sendEvent eventType:"+eventType+" valueType:"+valueType+" value:"+value);if(omaagent.AgentState!=0){debug("engine is not ready");return;}
omaagent.sendEvent(eventType,valueType,value);},_sendComplexEventToEngine:function(name,vars){if(omaagent.AgentState!=0){debug("engine is not ready");return;}
var result_notify={'name':name,'vars':vars};let notify_array=genEvent(result_notify);let result_notify_array=notify_array.subarray(4,notify_array.length);omaagent.new_sendEvent(result_notify_array,result_notify_array.length);},_sendUIEventToApp:function(types,details){Services.ppmm.broadcastAsyncMessage('VDM_EVENT',{type:types,detail:details});},_setValue:function(value){ debug("[wjj] _setValue enter");omaagent.setValue(value,'','');},_setOptToDM:function(aMessage){if(aMessage&&aMessage.data){ if(aMessage.data.type=='CP_UPDATE_HISTORY_DATA'&&aMessage.data.name.DMA_VAR_NODE_VALUE){debug("BENYI[CP_UPDATE_HISTORY_DATA] _setOptToDM write cp_history_data aMessage: "+JSON.stringify(aMessage));DescMoActionHandler._writeCpFiles(aMessage.data.name.DMA_VAR_NODE_VALUE);returnMessage(aMessage.name,true,"ok",aMessage);debug("BENYI[CP_UPDATE_HISTORY_DATA] _setOptToDM write cp_history_data OK");}
if(aMessage.data.type=='CP_READ_HISTORY_DATA'){debug("BENYI[CP_READ_HISTORY_DATA] _setOptToDM read cp_history_data aMessage: "+JSON.stringify(aMessage));const CP_HISTORY_DATA="/sysdata/redbend/cp_history_data.txt";DescMoActionHandler._readCpFiles(CP_HISTORY_DATA,(data)=>{debug("BENYI[CP_READ_HISTORY_DATA] _setOptToDM read cp_history_data: "+data);returnMessage(aMessage.name,true,data,aMessage);});debug("BENYI[CP_READ_HISTORY_DATA] _setOptToDM read cp_history_data OK");}
if(aMessage.data.type=='CP_WRITE_RESTORED_DATA'&&aMessage.data.name.DMA_VAR_NODE_VALUE){debug("BENYI[CP_WRITE_RESTORED_DATA] _setOptToDM REMOVE write  cp_restored_data aMessage: "+JSON.stringify(aMessage));DescMoActionHandler._writeRemoveFile(aMessage.data.name.DMA_VAR_NODE_VALUE);returnMessage(aMessage.name,true,"ok",aMessage);debug("BENYI[CP_WRITE_RESTORED_DATA] _setOptToDM REMOVE write cp_restored_data OK");}
if(aMessage.data.type=='CP_READ_RESTORED_DATA'){debug("BENYI[CP_READ_RESTORED_DATA] _setOptToDM read cp_restored_data aMessage: "+JSON.stringify(aMessage));const CP_RESTORED_DATA="/sysdata/redbend/cp_restored_data.txt";DescMoActionHandler._readCpFiles(CP_RESTORED_DATA,(data)=>{debug("BENYI[CP_READ_RESTORED_DATA] _setOptToDM read cp_restored_data: "+data);returnMessage(aMessage.name,true,data,aMessage);});debug("BENYI[CP_READ_RESTORED_DATA] _setOptToDM read cp_restored_data OK");} 
if(aMessage.data.type=='D2B_FUMO_PAUSE'){EngineEventHandler._isPausing=true;}
if(aMessage.data.type=='D2B_FUMO_DL_CONFIRM_ACTION'&&aMessage.data.name.DMA_VAR_USER_ACTION==0){EngineEventHandler._lastUIEvent=null;if(EngineEventHandler._progress){EngineEventHandler._isCanceling=true;}}
if(aMessage.data.type=='D2B_FUMO_INS_CONFIRM_ACTION'&&aMessage.data.name.DMA_VAR_USER_ACTION==0){EngineEventHandler._lastUIEvent=null;}
if(aMessage.data.type=='D2B_FUMO_RESUME'){EngineEventHandler._isResuming=true;}
if(aMessage.data.type=='D2B_FUMO_DL_CONFIRM_ACTION'&&aMessage.data.name.DMA_VAR_USER_ACTION==1){EngineEventHandler._lastUIEvent=null;}
if(aMessage.data.type=='D2B_FUMO_DL_CONFIRM_ACTION'&&aMessage.data.name.DMA_VAR_USER_ACTION==0){debug("[wjj] _setOptToDM cancel downloading session");EngineEventHandler._lastUIEvent=null;this._setValue(2001);returnMessage(aMessage.name,true,"ret",aMessage);}else if(aMessage.data.type=='D2B_FUMO_PAUSE'){debug("[wjj] _setOptToDM pause downloading session");this._setValue(2000);returnMessage(aMessage.name,true,"ret",aMessage);}else if(aMessage.data.type=='D2B_TREE_NODE_GET'){ let nodeValue=omaagent.getValue(1000,aMessage.data.name.DMA_VAR_NODE_URI)
returnMessage(aMessage.name,true,nodeValue,aMessage);}else if((aMessage.data.type=='D2B_SESS_INITIATOR_USER'||aMessage.data.type=='D2B_SESS_INITIATOR_USER_FUMO'||aMessage.data.type=='D2B_DM_SET_UPDATE_RESULT'||aMessage.data.type=='D2B_FUMO_DL_RESUME_SESSION'||aMessage.data.type=='D2B_FUMO_DL_CONFIRM_ACTION')&&!(this._getFotaDatacallState())){debug("[wjj] _setOptToDM since wifi is not on, then need to activate FOTA apn");this._activateFota();debug("[wjj] _setOptToDM "+aMessage.data.type+" no network connection, cached until network connected");this._cachedDmMsg=JSON.stringify(aMessage.data);returnMessage(aMessage.name,true,"pending since network is not connected",aMessage);}else{let node=aMessage.data.name.DMA_VAR_NODE_URI;if((aMessage.data.type=='D2B_TREE_NODE_REPLACE')&&(node=='./DMAcc/AppAddr/Addr'||node=='./DMAcc2/AppAddr/Addr'||node=='./DMAcc/AppAddr/Port'||node=='./DMAcc2/AppAddr/Port')){let addr=aMessage.data.name.DMA_VAR_NODE_VALUE;let nodeValue=omaagent.getValue(1000,node);debug("[wjj] changeserver, node :"+node+", oldvalue: "+nodeValue+" newValue:"+addr);if(nodeValue!==addr){omaagent.setValue(1000,node,addr);DescMoActionHandler.updateSmf();}}else{this._sendComplexEventToEngine(aMessage.data.type,aMessage.data.name);returnMessage(aMessage.name,true,"ret",aMessage);}}}else{debug("_setOptToDM failed");returnMessage(aMessage.name,false,"ret",aMessage);}},_command:function(aMessage){debug("_command enter "+JSON.stringify(aMessage));let ret;if(aMessage.data.type=='download'){if(aMessage.data.name=='getpkginfo'){returnMessage(aMessage.name,true,EngineEventHandler._pkgInfo,aMessage);}}else if(aMessage.data.type=='get:prop'){let prop=libcutils.property_get(aMessage.data.name);returnMessage(aMessage.name,true,prop,aMessage);}else if(aMessage.data.type=='query'){if(aMessage.data.name=='state'){if(omaagent.AgentState!=Ci.nsIOmadmAgent.AGENT_STATE_STARTED){returnMessage(aMessage.name,true,'engine-not-ready',aMessage);}else if(EngineEventHandler._isPausing){returnMessage(aMessage.name,true,'pausing',aMessage,EngineEventHandler._progress);}else if(EngineEventHandler._isCanceling){returnMessage(aMessage.name,true,'canceling',aMessage);}else if(EngineEventHandler._isResuming){returnMessage(aMessage.name,true,'resuming',aMessage,EngineEventHandler._progress);}else{let lastEvent=EngineEventHandler._lastUIEvent?EngineEventHandler._lastUIEvent.name:'normal';let tmpValue=EngineEventHandler._lastUIEvent;if(lastEvent=='normal'){tmpValue=omaagent.getValue(10,'fumoupdate'); debug("[wjj] _command tmpValue: "+tmpValue);}
returnMessage(aMessage.name,true,lastEvent,aMessage,tmpValue);}}else if(aMessage.data.name=='status'){let engine_status='idle';if(omaagent.AgentState!=Ci.nsIOmadmAgent.AGENT_STATE_STARTED){engine_status='engine-not-ready';}else if(EngineEventHandler._isPausing){engine_status='pausing';}else if(EngineEventHandler._isCanceling){engine_status='canceling';}else if(EngineEventHandler._isResuming){engine_status='resuming';}else if(EngineEventHandler._lastUIEvent){if('B2D_FUMO_DL_PROGRESS'==EngineEventHandler._lastUIEvent.name){engine_status='downloading';}
if('B2D_FUMO_DL_CONFIRM_UI'==EngineEventHandler._lastUIEvent.name){engine_status='download-confirming';}
if('B2D_FUMO_INS_CONFIRM_UI'==EngineEventHandler._lastUIEvent.name){engine_status='install-confirming';}
if('B2D_FUMO_REBOOT_CONFIRM_REQUEST'==EngineEventHandler._lastUIEvent.name){engine_status='reboot-confirming';}}
returnMessage(aMessage.name,true,engine_status,aMessage,EngineEventHandler._lastUIEvent);}else if(aMessage.data.name=='busy'){let busy=true;if(omaagent.AgentState==0){busy=omaagent.isBusy();}
returnMessage(aMessage.name,true,busy,aMessage);}else{returnMessage(aMessage.name,true,"ret",aMessage);}}else if(aMessage.data.type=='check:ui'){returnMessage(aMessage.name,true,"ret",aMessage);}else if(aMessage.data.type=='engine:start'){this._servicestart();returnMessage(aMessage.name,true,"ret",aMessage);}else if(aMessage.data.type=='engine:stop'){this._serviceend();returnMessage(aMessage.name,true,"ret",aMessage);}else if(aMessage.data.type=='mdm:aov:update-smf'){DescMoActionHandler.updateSmf();returnMessage(aMessage.name,true,"ret",aMessage);}else{returnMessage(aMessage.name,true,"ret",aMessage);}},_webpushGetRegister(){debug("_webpushGetRegister");let principal=Services.scriptSecurityManager.getSystemPrincipal();let mCallback=new pushSubscriptionCallback();mPushService.getSubscription(OMADM_PUSH_SCOPE_ACCOUNT_UPDATE,principal,mCallback);},_webpushRegister(){debug("_webpushRegister");let principal=Services.scriptSecurityManager.getSystemPrincipal();let mCallback=new pushSubscriptionCallback();mPushService.subscribe(OMADM_PUSH_SCOPE_ACCOUNT_UPDATE,principal,mCallback);},getBatteryLevel:function(cb){OmaService._readSysFile('/sys/class/power_supply/battery/capacity',cb);},handleReadCpFile:function(filePath){debug('handleReadCpFile: file path = '+filePath);let obj={ data:"",status:"FAIL"};try{let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(filePath);if(!file.exists()||!file.isFile()){debug('handleReadCpFile: Failed, file not exist');obj.data="FILE NOT EXIST"; return obj;}
 
let fstream=Cc["@mozilla.org/network/file-input-stream;1"].createInstance(Ci.nsIFileInputStream);fstream.init(file,-1,-1,null);let sstream=Cc["@mozilla.org/scriptableinputstream;1"].createInstance(Ci.nsIScriptableInputStream);sstream.init(fstream);let output=sstream.read(sstream.available());debug('handleReadCpFile: Read file success');obj.data=output; obj.status="OK";sstream.close();fstream.close();}catch(ex){debug('handleReadCpFile: Error while reading file, error = '+ex);obj.data=ex.message;}
debug("handleReadCpFile: return obj = "+JSON.stringify(obj));return obj;},handleWriteCpFile:function(filePath,strToWrite,overwrite){debug('handleWriteCpFile: file path = '+filePath);debug('handleWriteCpFile: string to write = '+strToWrite);debug('handleWriteCpFile: overrite = '+overwrite);const delimiter=';'; let obj={ data:"",status:"FAIL"};try{let finalString=strToWrite; let file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);file.initWithPath(filePath);if(!file.exists()){debug("handleWriteCpFile: file not exist, creating file first");file.create(Ci.nsIFile.NORMAL_FILE_TYPE,FileUtils.PERMS_FILE);}

 
let modeFlags=FileUtils.MODE_WRONLY|FileUtils.MODE_CREATE; if(overwrite===true){modeFlags|=FileUtils.MODE_TRUNCATE;}else{modeFlags|=FileUtils.MODE_APPEND; finalString=delimiter+strToWrite;}
debug("handleWriteCpFile: modeFlags = "+modeFlags);let foStream=FileUtils.openFileOutputStream(file,modeFlags); debug("handleWriteCpFile: converter begin");let converter=Cc["@mozilla.org/intl/converter-output-stream;1"].createInstance(Ci.nsIConverterOutputStream);converter.init(foStream,"UTF-8"); converter.writeString(finalString);debug("handleWriteCpFile: converter write ok");obj.data="WRITE SUCCESS";obj.status="OK";converter.close();FileUtils.closeSafeFileOutputStream(foStream);}catch(ex){debug('handleWriteCpFile: Error while writing file: error = '+ex);obj.data=ex.message;}
debug("handleWriteCpFile: return obj = "+JSON.stringify(obj));return obj;},handleClearCpFile:function(filePath){debug('handleClearCpFile: file path = '+filePath);let obj={ data:"",status:"FAIL"};try{let file=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);file.initWithPath(filePath);if(file.exists()){debug("handleClearCpFile: file exist, remove it");file.remove(true);obj.data="FILE REMOVED";}else{debug("handleClearCpFile: file not exist, ignore");obj.data="FILE NOT FOUND";}
obj.status="OK";}catch(ex){debug('handleClearCpFile: Failed while clear data, error = '+ex);obj.data=ex.message;}
debug("handleClearCpFile: return obj = "+JSON.stringify(obj));return obj;},doCpRequest:function(reqType,reqData){const FILE_CP_HISTROY_DATA="/sysdata/redbend/cp_history_data.txt";const FILE_CP_RESTORED_DATA="/sysdata/redbend/cp_restored_data.txt";const TYPE_CP_UPDATE_HISTORY_DATA="CP_UPDATE_HISTORY_DATA";const TYPE_CP_LOAD_HISTORY_DATA="CP_LOAD_HISTORY_DATA";const TYPE_CP_WRITE_RESTORED_DATA="CP_WRITE_RESTORED_DATA";const TYPE_CP_LOAD_RESTORED_DATA="CP_LOAD_RESTORED_DATA";const TYPE_CP_CLEAR_HISTORY_DATA="CP_CLEAR_HISTORY_DATA";const TYPE_CP_CLEAR_RESTORED_DATA="CP_CLEAR_RESTORED_DATA";let retData={};switch(reqType){case TYPE_CP_UPDATE_HISTORY_DATA:debug('_handleCpReq: Request type = TYPE_CP_UPDATE_HISTORY_DATA');if((typeof reqData)!=="string"){debug('_handleCpReq: Request history data not string, try convert it');reqData=JSON.stringify(reqData);}
retData=this.handleWriteCpFile(FILE_CP_HISTROY_DATA,reqData);break;case TYPE_CP_LOAD_HISTORY_DATA:debug('_handleCpReq: Request type = TYPE_CP_LOAD_HISTORY_DATA');retData=this.handleReadCpFile(FILE_CP_HISTROY_DATA);break;case TYPE_CP_WRITE_RESTORED_DATA:debug('_handleCpReq: Request type = TYPE_CP_WRITE_RESTORED_DATA');if((typeof reqData)!=="string"){debug('_handleCpReq: Request restored data not string, try convert it');reqData=JSON.stringify(reqData);}
retData=this.handleWriteCpFile(FILE_CP_RESTORED_DATA,reqData,true);break;case TYPE_CP_LOAD_RESTORED_DATA:debug('_handleCpReq: Request type = TYPE_CP_LOAD_RESTORED_DATA');retData=this.handleReadCpFile(FILE_CP_RESTORED_DATA);break;case TYPE_CP_CLEAR_HISTORY_DATA:debug('_handleCpReq: Request type = TYPE_CP_CLEAR_HISTORY_DATA');retData=this.handleClearCpFile(FILE_CP_HISTROY_DATA);break;case TYPE_CP_CLEAR_RESTORED_DATA:debug('_handleCpReq: Request type = TYPE_CP_CLEAR_RESTORED_DATA');retData=this.handleClearCpFile(FILE_CP_RESTORED_DATA);break;default:debug('_handleCpReq: Non handling type = '+reqType);retData=null;break;}
return retData;},_handleCpReq:function(aMessage){debug('_handleCpReq');if(!aMessage){debug('_handleCpReq: No aMessage, abort.');return;}else if(!aMessage.data){debug('_handleCpReq: No data provided, abort.');return;}else if(!aMessage.target){debug('_handleCpReq: No target to return message, abort.');return;}
debug('_handleCpReq: aMessage.data = '+JSON.stringify(aMessage.data));let resolverId=null;let retMsgName="OmaService:handleCpReq:Return:NO";let dataStr="NA";try{const reqType=aMessage.data.reqType;let reqData="";if(Object.keys(aMessage.data).includes('reqData')){reqData=aMessage.data.reqData;}
resolverId=aMessage.data.rid;let retData=this.doCpRequest(reqType,reqData);if(retData){if(retData.status==="OK"){retMsgName="OmaService:handleCpReq:Return:OK";if(retData.data){debug('_handleCpReq: Status OK and containing data');dataStr=retData.data;}else{debug('_handleCpReq: Status OK but not containing data');}}else{if(retData.data){debug('_handleCpReq: Status not OK but containing data');dataStr=retData.data;}else{debug('_handleCpReq: Status not OK and not containing data');}}
if((typeof dataStr)!=="string"){dataStr=JSON.stringify(retData.data);}}
debug('_handleCpReq: Message name to return = '+retMsgName);if(dataStr.length>987){for(let i=0;i<dataStr.length;i+=500){dump('_handleCpReq: Returned data #['+(i/500)+']-> '+dataStr.substr(i,500));}}else{debug('_handleCpReq: Returned data = '+dataStr);}}catch(e){debug('_handleCpReq: Failed while handling request, error = '+e);dataStr=e.message;}
if(resolverId){aMessage.target.sendAsyncMessage(retMsgName,{data:dataStr,rid:resolverId});}else{debug('_handleCpReq: No resolver id can used to return message');}},onDmSessionEnd:function(){debug("onDmSessionEnd");if(OmaService._needReoot){OmaService._delayRun(true,1,3000,()=>{return true;});}}};function IccEventListener(aServiceId){this._serviceId=aServiceId;this._roamingStatus=true;let connection=gMobileConnectionService.getItemByServiceId(this._serviceId);if(connection){connection.registerListener(this);}
let icc=gIccService.getIccByServiceId(this._serviceId);if(icc){icc.registerListener(this);}}
IccEventListener.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIObserver,Ci.nsIMobileConnectionListener,Ci.nsIIccListener]), notifyStkCommand:function(){if(true!=isIccIdInit){engineCallback.getIccId(this._serviceId);}},notifyStkSessionEnd:function(){},notifyIccInfoChanged:function(){if(true!=isIMSIInit){engineCallback.getImsi(this._serviceId);}
if(true!=isIccIdInit){engineCallback.getIccId(this._serviceId);}},notifyIsimInfoChanged:function(){},notifyCardStateChanged:function(){debug("notifyCardStateChanged called by zx");let whichCard=0;let icc=gIccService.getIccByServiceId(this._serviceId);let cardState=icc&&icc.cardState?icc.cardState:Ci.nsIIcc.CARD_STATE_UNKNOWN;if(cardState===Ci.nsIIcc.CARD_STATE_UNDETECTED){omaagent.setValue(this._serviceId,"imsi","nocard");}
if(cardState===Ci.nsIIcc.CARD_STATE_READY){ OmaService._sendEvent("D2B_MSG_STS_SIM_READY","DMA_VAR_SIM_SLOT",whichCard);}},notifyVoiceChanged:function(){debug("notifyVoiceChanged called by zx");let connection=gMobileConnectionService.getItemByServiceId(this._serviceId);let voiceInfo=connection&&connection.voice;let roaming=voiceInfo&&voiceInfo.roaming;if(voiceInfo.connected){if(true!=isCellIDInit){engineCallback.getCellId(this._serviceId);}
if(true!=isCarrierInit){engineCallback.getCarrier(this._serviceId);}}
if(true!=isIMEIInit){engineCallback.getImei(this._serviceId);}
},notifyDataChanged:function(){debug("notifyDataChanged called by zx");let connection=gMobileConnectionService.getItemByServiceId(this._serviceId);let dataInfo=connection&&connection.data;let roaming=dataInfo&&dataInfo.roaming;if(this._roamingStatus!=roaming){this._roamingStatus=roaming;OmaService._sendEvent("D2B_STS_ROAMING","DMA_VAR_STS_IS_ROAMING",roaming);}},notifyDataError:function(message){},notifyCFStateChanged:function(action,reason,number,timeSeconds,serviceClass){},notifyEmergencyCbModeChanged:function(active,timeoutMs){},notifyOtaStatusChanged:function(status){},notifyRadioStateChanged:function(){},notifyClirModeChanged:function(mode){},notifyLastKnownNetworkChanged:function(){},notifyLastKnownHomeNetworkChanged:function(){},notifyNetworkSelectionModeChanged:function(){},notifyDeviceIdentitiesChanged:function(){},release:function(){let connection=gMobileConnectionService.getItemByServiceId(this._serviceId);if(connection){connection.unregisterListener(this);}
let icc=gIccService.getIccByServiceId(this._serviceId);if(icc){icc.unregisterListener(this);}}};function EventCollector(){this.iccListeners=[];this.numClients=gRadioInterfaceLayer.numRadioInterfaces;for(let i=0;i<this.numClients;i++){this.iccListeners.push(new IccEventListener(i));}
Services.obs.addObserver(this,mPushService.pushTopic,false);Services.obs.addObserver(this,mPushService.subscriptionChangeTopic,false);Services.obs.addObserver(this,kNetworkConnStateChangedTopic,false);Services.obs.addObserver(this,"xpcom-shutdown",false);Services.obs.addObserver(this,"system-reboot",false);Services.obs.addObserver(this,"system-power-off",false);Services.obs.addObserver(this,"system-clock-change",false);Services.prefs.addObserver(DMACC_APPADDR_ADDR,this,false);Services.prefs.addObserver(DMACC2_APPADDR_ADDR,this,false);gTelephonyService.registerListener(this);}
EventCollector.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIObserver,Ci.nsITelephonyListener]),supplementaryServiceNotification:function(){},notifyError:function(){},notifyCdmaCallWaiting:function(){},notifyConferenceError:function(){},callStateChanged:function(alength,allInfo){debug("callStateChanged called by zx");function iscallStart(allInfo){for(let i=0;i<allInfo.length;i++){let call=allInfo[i];if(!call){debug("[wjj] callStateChanged-iscallStart no call find");continue;}
debug("[wjj] callStateChanged-iscallStart call: "+JSON.stringify(call));if(call.callState===Ci.nsITelephonyService.CALL_STATE_INCOMING||call.callState===Ci.nsITelephonyService.CALL_STATE_DIALING){return true;}}
debug("[wjj] callStateChanged-iscallStart nothing found return fasle");return false;}
function iscallEnd(allInfo){for(let i=0;i<allInfo.length;i++){let call=allInfo[i];if(!call){debug("[wjj] callStateChanged-iscallEnd no call find");continue;}
debug("[wjj] callStateChanged-iscallEnd call: "+JSON.stringify(call));if(call.callState!==Ci.nsITelephonyService.CALL_STATE_DISCONNECTED){return false;}}
debug("[wjj] callStateChanged-iscallEnd nothing found return true");return true;}
let callEnd=iscallEnd(allInfo);if(callEnd){
OmaService._sendUIEventToApp("B2D_STS_VOICE_CALL_END",{"NULL":0});}
let callStart=iscallStart(allInfo);if(callStart){
OmaService._sendUIEventToApp("B2D_STS_VOICE_CALL_START",{"NULL":0});}},observe:function(aSubject,aTopic,aData){debug('[wjj] observe aSubject: '+aSubject+' aTopic: '+aTopic);switch(aTopic){case kNetworkConnStateChangedTopic:let networkInfo=aSubject.QueryInterface(Ci.nsINetworkInfo);if(!networkInfo){return;}
debug('[wjj] observe kNetworkConnStateChangedTopic networkInfo: '+JSON.stringify(networkInfo));debug('[wjj] observe kNetworkConnStateChangedTopic networkName: '+networkInfo.name+' netId: '+networkInfo.netId);if(networkInfo.state==Ci.nsINetworkInfo.NETWORK_STATE_DISCONNECTED){if(networkInfo.type===NETWORK_TYPE_WIFI){ OmaService._sendEvent("D2B_STS_WIFI","DMA_VAR_STS_IS_WIFI_CONNECTED",0);OmaService._sendUIEventToApp("B2D_STS_WIFI",{"DMA_VAR_STS_IS_WIFI_CONNECTED":0});}else if(networkInfo.type===NETWORK_TYPE_MOBILE_FOTA){OmaService._setRouteAddState(false); OmaService._sendEvent("D2B_STS_MOBILE_DATA","DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED",0);OmaService._sendUIEventToApp("B2D_STS_MOBILE_DATA_FOTA",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":0});}else if(networkInfo.type===NETWORK_TYPE_MOBILE){OmaService._sendUIEventToApp("B2D_STS_MOBILE_DATA_INTERNET",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":0});}}
if(networkInfo.state==Ci.nsINetworkInfo.NETWORK_STATE_CONNECTED){if(true!=isActivationModeInit){engineCallback.getActivationMode(0);}
if(networkInfo.type===NETWORK_TYPE_WIFI){ OmaService._sendEvent("D2B_STS_WIFI","DMA_VAR_STS_IS_WIFI_CONNECTED",networkInfo.netId);OmaService._sendUIEventToApp("B2D_STS_WIFI",{"DMA_VAR_STS_IS_WIFI_CONNECTED":networkInfo.netId}); OmaService._sendCachedDmMsg();}else if(networkInfo.type===NETWORK_TYPE_MOBILE){debug('[wjj] OmaService._getCachedDmMsg: '+OmaService._getCachedDmMsg());if(OmaService._getCachedDmMsg()!=null ){ debug('[wjj] activate fota apn since network catch');OmaService._activateFota();}
OmaService._sendUIEventToApp("B2D_STS_MOBILE_DATA_INTERNET",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":networkInfo.netId});}else if(networkInfo.type===NETWORK_TYPE_MOBILE_FOTA){ if(OmaService._getCachedDmMsg()!=null){if(!OmaService._getRouteAddState()){debug('[wjj] observe: add route since found unsend msg and its not added before');OmaService._addRoute(networkInfo,OmaService,function(obj){obj._sendCachedDmMsg();obj._setRouteAddState(true);});}else{ OmaService._sendCachedDmMsg();}} 
OmaService._sendEvent("D2B_STS_MOBILE_DATA","DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED",networkInfo.netId);OmaService._sendUIEventToApp("B2D_STS_MOBILE_DATA_FOTA",{"DMA_VAR_STS_IS_MOBILE_DATA_CONNECTED":networkInfo.netId});}}
break;case mPushService.pushTopic:debug("[wjj] case mPushService.pushTopic aData = "+aData);if(OMADM_PUSH_SCOPE_ACCOUNT_UPDATE==aData){let message=aSubject.QueryInterface(Ci.nsIPushMessage);debug("case mPushService.pushTopic");if(message.data){let payload=message.data.text();let custom_content=eval('('+message.data.text()+')').custom_content;let dmsessionType=custom_content.type.toString().toLowerCase();let m_value=0;if("dmsession.lawmo"==dmsessionType){m_value=1;}else if("dmsession.invaliddp"==dmsessionType){m_value=2;}else{m_value=0;}
OmaService._sendComplexEventToEngine('D2B_NET_NOTIFICATION',{'DMA_VAR_CANCEL_TYPE':m_value});}else{debug("no  message");}}
break;case mPushService.subscriptionChangeTopic:debug("[wjj] case mPushService.subscriptionChangeTopic aData = "+aData);OmaService._webpushRegister();break;case"xpcom-shutdown":case"system-reboot":case"system-power-off":DescMoActionHandler.updateSmf();OmaService._sendEvent("D2B_STS_SHUTDOWN","NULL",1);break;case"system-clock-change":OmaService._sendUIEventToApp('fota_uiEvent',{info:'system-clock-change'});break;case"nsPref:changed":if(aData===DMACC_APPADDR_ADDR){ let addr=Services.prefs.getCharPref(DMACC_APPADDR_ADDR);debug('[wjj] nsPref:changed, observe dmacc addr: '+addr);let node="./DMAcc/AppAddr/Addr";let nodeValue=omaagent.getValue(1000,node);debug("[wjj] nsPref:changed, node :"+node+", value: "+nodeValue);if(nodeValue!==addr){omaagent.setValue(1000,node,addr);}}else if(aData===DMACC2_APPADDR_ADDR){let addr2=Services.prefs.getCharPref(DMACC2_APPADDR_ADDR);debug('[wjj] nsPref:changed, observe dmacc2 addr: '+addr2);let node="./DMAcc2/AppAddr/Addr";let nodeValue=omaagent.getValue(1000,node);debug("[wjj] nsPref:changed, node :"+node+", value: "+nodeValue);if(nodeValue!==addr2){omaagent.setValue(1000,node,addr2);}}
break;default:break;}},release:function(){Services.prefs.removeObserver(DMACC_APPADDR_ADDR,this);Services.prefs.removeObserver(DMACC2_APPADDR_ADDR,this);Services.obs.removeObserver(this,kNetworkConnStateChangedTopic);if(gTelephonyService){gTelephonyService.unregisterListener(this);}
for(let i=0;i<this.numClients;i++){this.iccListeners[i].release();}},};this.OmaService._engineCallback=this.engineCallback;Services.obs.addObserver(function(subject,topic,data){OmaService.init();},'system-message-listener-ready',false);