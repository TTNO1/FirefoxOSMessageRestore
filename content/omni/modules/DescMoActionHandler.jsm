//---Inject---
Components.utils.import("chrome://messagerestore/content/inject.jsm", this);
//------------
"use strict";const DEBUG=true;const DM_DESCMO_RESULT_OK=0;const DM_DESCMO_RESULT_CANCELED=1;const DM_DESCMO_RESULT_FAILED=2;const DM_DESCMO_RESULT_TIMEOUT=3;const DM_DESCMO_RESULT_PARTIAL=4;const DM_DESCMO_RESULT_INVALID=5;const DM_DESCMO_RESULT_NOT_SUPPORTED=6;const DM_DESCMO_RESULT_ECU_NOT_EXIST=7;const DM_DESCMO_RESULT_SETTINGS_EXECUTION_TIMEOUT=8;const DM_DESCMO_RESULT_ADDITIONAL_DATA_VALIDATION_FAILED=9;const DM_DESCMO_RESULT_SETTINGS_PROFILE_SIGNATURE_INVALID=10;const DM_DESCMO_RESULT_SETTINGS_SIGNATURE_INVALID=11;const DM_DESCMO_RESULT_IGNORE_RESULT=12;const DM_DESCMO_RESULT_UNDEFINED=13;const AOV_CONFIG_KEY="aov.mdm.config";const AOV_SMF_INFO_KEY="aov.mdm.smfinfo";const MDM_SAVE_FILE="/sysdata/redbend/.mdm_save.json";const RO_Config_Nodes="/system/etc/dma_config.txt";const DMAcc_Config_Nodes="/sysdata/redbend/dma_config.txt";const Tree_Nodes="/sysdata/redbend/tree.xml";const Tree_Nodes1="/sysdata/redbend/tree_new1.xml";const CP_HISTORY_DATA="/sysdata/redbend/cp_history_data.txt";const CP_RESTORED_DATA="/sysdata/redbend/cp_restored_data.txt";const{classes:Cc,interfaces:Ci,utils:Cu,results:Cr}=Components;Cu.import("resource://gre/modules/Promise.jsm");Cu.import("resource://gre/modules/MdmUtils.jsm");Cu.import("resource://gre/modules/XPCOMUtils.jsm");XPCOMUtils.defineLazyServiceGetter(this,"gSettingsService","@mozilla.org/settingsService;1","nsISettingsService");XPCOMUtils.defineLazyGetter(this,"libcutils",function(){Cu.import("resource://gre/modules/systemlibs.js");return libcutils;});this.EXPORTED_SYMBOLS=["DescMoActionHandler"];function debug(aStr){if(DEBUG)
dump("OmaService: DescMoActionHandler.jsm : "+aStr+"\n");}
this.DescMoActionHandler={OmaService:null,Services:null,wallPaperPersistence:false,wallPaperPromise:null,actionQueue:new Array(),mdmItems:{},
_rstApps:new Array(),_mdmUtils:null,_isMdmUpdated:false,_smfInf:null, _cpUtils:null,_cpReadUtils:null,_writecpUtils:null, _writeCpFiles:function(str){debug('BENYI _writeCpFiles cpDatas begin');if(!DescMoActionHandler._cpUtils){debug("BENYI DescMoActionHandler.jsm _writeCpFiles");DescMoActionHandler._cpUtils=new MdmUtils();}
DescMoActionHandler._cpUtils._writeCpFile(str,CP_HISTORY_DATA,(data)=>{debug("write cpdatas File ======= done: "+JSON.stringify(data));if('ok'!=data.result){debug("write cpdatas File ======= failed");}});debug('BENYI _writeCpFiles cpDatas write ok');}, _readCpFiles:function(pathname,cb){debug('BENYI _readCpFiles cpDatas begin');if(!DescMoActionHandler._cpReadUtils){debug("BENYI DescMoActionHandler.jsm _readCpFiles");DescMoActionHandler._cpReadUtils=new MdmUtils();debug("BENYI DescMoActionHandler.jsm new MdmUtils() ok");}
DescMoActionHandler._cpReadUtils._readCpFile(pathname,(data)=>{debug("read cpdatas File ======= done: "+JSON.stringify(data));if('ok'!=data.result){debug("read cpdatas File ======= failed");}
if(cb!==null){debug("read cpdatas File callback ======= cb");cb(data);}});debug('BENYI _readCpFiles cpDatas read OK');}, _writeRemoveFile:function(str){debug('BENYI _writeRemoveFile cpDatas begin');if(!DescMoActionHandler._writecpUtils){debug("BENYI DescMoActionHandler.jsm _writeFile");DescMoActionHandler._writecpUtils=new MdmUtils();}
DescMoActionHandler._writecpUtils._writeRemoveFile(str,CP_RESTORED_DATA,(data)=>{debug("_writeRemoveFile cpdatas File ======= done: "+JSON.stringify(data));if('ok'!=data.result){debug("_writeRemoveFile cpdatas File ======= failed");}});debug('BENYI _writeRemoveFile cpDatas write ok');},
_mdmInit:async function(){if(null==DescMoActionHandler._mdmUtils){debug("DescMoActionHandler.jsm mdm init");DescMoActionHandler._mdmUtils=new MdmUtils(); let RoNodes=await DescMoActionHandler._mdmUtils.loadJsonFile(RO_Config_Nodes);debug('_mdmInit RoNodes: '+JSON.stringify(RoNodes)); let dmaccNodes=await DescMoActionHandler._mdmUtils.loadJsonFile(DMAcc_Config_Nodes);if(RoNodes!=null&&dmaccNodes!=null&&RoNodes.TREE_VERSION!=dmaccNodes.TREE_VERSION){debug('_mdmInit dmaccNodes: '+JSON.stringify(dmaccNodes));let removeFile;try{ removeFile=Cc['@mozilla.org/file/local;1'].createInstance(Ci.nsIFile);removeFile.initWithPath(DMAcc_Config_Nodes);removeFile.remove(true);debug('_mdmInit removed dmaconfig file');}catch(e){debug('_mdmInit remove config file failed! '+e);}
try{removeFile.initWithPath(Tree_Nodes);removeFile.remove(true);debug('_mdmInit removed tree file');}catch(e){debug('_mdmInit remove xml file failed! '+e);}
try{removeFile.initWithPath(Tree_Nodes1);removeFile.remove(true);debug('_mdmInit removed tree1 file');}catch(e){debug('_mdmInit remove xml1 file failed! '+e);}
dmaccNodes=null;}
if(dmaccNodes==null){dmaccNodes=RoNodes;}
if(dmaccNodes!=null){debug('_mdmInit dmaccNodes tree version:'+dmaccNodes.TREE_VERSION);DescMoActionHandler.OmaService.setTreeVersion(dmaccNodes.TREE_VERSION);DescMoActionHandler.OmaService.setServerAddr("./DMAcc/AppAddr/Addr",dmaccNodes["./DMAcc/AppAddr/Addr"]);DescMoActionHandler.OmaService.setServerAddr("./DMAcc/AppAddr/AddrType",dmaccNodes["./DMAcc/AppAddr/AddrType"]);DescMoActionHandler.OmaService.setServerAddr("./DMAcc/AppAddr/Port",dmaccNodes["./DMAcc/AppAddr/Port"]);DescMoActionHandler.OmaService.setServerAddr("./DMAcc2/AppAddr/Addr",dmaccNodes["./DMAcc2/AppAddr/Addr"]);DescMoActionHandler.OmaService.setServerAddr("./DMAcc2/AppAddr/AddrType",dmaccNodes["./DMAcc2/AppAddr/AddrType"]);DescMoActionHandler.OmaService.setServerAddr("./DMAcc2/AppAddr/Port",dmaccNodes["./DMAcc2/AppAddr/Port"]);if(dmaccNodes.IMEI!=null){DescMoActionHandler.OmaService.setImei(dmaccNodes.IMEI);}
if(dmaccNodes.ICCID!=null){DescMoActionHandler.OmaService.setIccid(dmaccNodes.ICCID);}
if(dmaccNodes.SWVERSION!=null){DescMoActionHandler.OmaService.setSwVersion(dmaccNodes.SWVERSION);}}}},init:function(omaService,services,aPpmm){debug("DescMoActionHandler.jsm init");DescMoActionHandler.OmaService=omaService;DescMoActionHandler.Services=services;DescMoActionHandler.ppmm=aPpmm;DescMoActionHandler._mdmInit();},setPrefs:function(aKey,aValue){debug(`Set pref ${aKey} to ${aValue}`);return new Promise((resolve,reject)=>{try{switch(typeof aValue){case"string":DescMoActionHandler.Services.prefs.setCharPref(aKey,aValue);break;case"boolean":DescMoActionHandler.Services.prefs.setBoolPref(aKey,aValue);break;case"number":DescMoActionHandler.Services.prefs.setIntPref(aKey,aValue);break;default:throw new Error("Unsupported pref type: "+typeof aValue);}
DescMoActionHandler.Services.prefs.savePrefFile(null);resolve(aKey);}catch(e){reject(aKey);}});},setProperty:function(aKey,aValue){libcutils.property_set(aKey,aValue);},_runMdmItem:function(item){if(item){DescMoActionHandler._isMdmUpdated=true;let oprts=item['operates'];if(oprts){DescMoActionHandler.OmaService._needReoot=DescMoActionHandler.OmaService._needReoot||item.reboot;for(let i=0;i<oprts.length;i++){let oprt=oprts[i];if('setting'==oprt.type){gSettingsService.createLock().set(oprt.key,oprt.val,null);}
if('preference'==oprt.type){DescMoActionHandler.setPrefs(oprt.key,oprt.val);}
if('ByteArray'==oprt.type){let blob=null;if('N/A'!=oprt.val){let array=new Uint8Array(oprt.val);blob=new Blob([array]);}
gSettingsService.createLock().set(oprt.key,blob,null);}
if('property'==oprt.type){DescMoActionHandler.setProperty(oprt.key,oprt.val);}}}}},onFirstRun:function(){DescMoActionHandler._runMdmItem(DescMoActionHandler.mdmItems['setDebuggerRestriction']);DescMoActionHandler._runMdmItem(DescMoActionHandler.mdmItems['setApplicationRestriction']);},clearActionQueue:function(actionCallback){while(DescMoActionHandler.actionQueue.length>0){let item=DescMoActionHandler.actionQueue.pop();if(item&&actionCallback){actionCallback(item);}}},mergeMdmItemOperate:function(tOpt,sOpt){if(tOpt.val){let sApps=JSON.parse(sOpt.val);let tApps=JSON.parse(tOpt.val);Object.assign(tApps,sApps);tOpt.val=JSON.stringify(tApps);}else{tOpt.val=sOpt.val;}},mergeMdmItem:function(actionName,sItem){let tItem=DescMoActionHandler.mdmItems[actionName];if(actionName=='setApplicationRestriction'&&tItem){debug('mergeMdmItem tItem = '+JSON.stringify(tItem));let tRestriction=tItem.operates[0].val;let tApps=JSON.parse(tItem.operates[0].val);let sApps=JSON.parse(sItem.operates[0].val);Object.assign(tApps,sApps);tItem.operates[0].val=JSON.stringify(tApps);tItem.persistence=sItem.persistence
debug('mergeMdmItem tItem = '+JSON.stringify(tItem));}else{DescMoActionHandler.mdmItems[actionName]=sItem;}},_getActionValue:function(action,name){let val='';for(let i=0;i<action.props.length;i++){let prop=action.props[i];if(prop){if(name.toLowerCase()==prop.rb_name.toLowerCase()){val=prop.rb_value;break;}}}
if(val=='False'){val=false;}else if(val=='True'){val=true;}
return val;},_parseDescmoAction:function(result){let opxml=result.vars.VAR_DESCMO_FEATURE_PROPS;let parser=Cc["@mozilla.org/xmlextras/domparser;1"].createInstance(Components.interfaces.nsIDOMParser);let aDom=parser.parseFromString(opxml,"application/xml");let customSetting=aDom.getElementsByTagName("customSetting")[0];let propertys=customSetting.getElementsByTagName('property'); let action={};for(let i=0;i<customSetting.attributes.length;i++){let attname=customSetting.attributes[i].name;let attval=customSetting.attributes[i].value;action[attname]=attval;} 
action.props=[];for(let i=0;propertys[i];i++){let action_prop={};let prop=propertys[i];let prop_attrs=prop.attributes;if(prop_attrs){for(let j=0;j<prop_attrs.length;j++){let prop_attr=prop_attrs[j];if(prop_attr){action_prop[prop_attr.name]=prop_attr.value;}}}
action.props.push(action_prop);}
action.rawxml=result.vars.VAR_DESCMO_FEATURE_PROPS;return action;},_executeDescmoSetAction:function(result){debug("_executeDescmoSetAction");if(!result.vars){return Promise.reject(DM_DESCMO_RESULT_INVALID);}
let action=DescMoActionHandler._parseDescmoAction(result);debug("_executeDescmoSetAction action.method = "+action.method);let actionCallback=DescMoActionHandler[action.method];if(!actionCallback){debug("_executeDescmoSetAction action not found action.method = "+action.method);return Promise.reject(DM_DESCMO_RESULT_NOT_SUPPORTED);}
debug("_executeDescmoSetAction action found action.method = "+action.method);return actionCallback(action);},_sendDescmoResult:function(result){let uri='';let props='';let reg_notify=null;if("B2D_DESCMO_SET_FEATURE"==result.name){DescMoActionHandler.OmaService._sendComplexEventToEngine('D2B_DESCMO_RESULT',{'VAR_DESCMO_RESULT':result.value,'VAR_DESCMO_RETURNED_SETTINGS_URI':'','VAR_DESCMO_RETURNED_PROPS':'','VAR_DESCMO_FEATURE_CORRELATOR_ID':result.correlator_id>>>0});};if("B2D_DESCMO_GET_FEATURE"==result.name){DescMoActionHandler.OmaService._sendComplexEventToEngine('D2B_DESCMO_RESULT',{'VAR_DESCMO_RESULT':result.value,'VAR_DESCMO_RETURNED_PROPS':result.props,'VAR_DESCMO_FEATURE_CORRELATOR_ID':result.correlator_id>>>0});};},handleGetFeature:function(result){debug("B2D_DESCMO_GET_FEATURE");let id=result.vars.VAR_DESCMO_FEATURE_CORRELATOR_ID;let action=DescMoActionHandler._parseDescmoAction(result);let actionName=action.method;if(actionName&&actionName[0]=='g'){ actionName='s'+actionName.substring(1);}
let rb_value=true;let reboot=false;let item=DescMoActionHandler.mdmItems[actionName];if(item){rb_value=item.operates[0].val;reboot=item.reboot;}
let ret={name:result.name,value:0,props:'<customSetting><property rb_name="'+action.method
+'" rb_value="'+rb_value
+' rb_type="string"/><property rb_name="RebootRequired" rb_value=" '+reboot+'" rb_type="string"/></customSetting>',correlator_id:id};DescMoActionHandler._sendDescmoResult(ret);},handleSetFeature:function(result){debug("B2D_DESCMO_SET_FEATURE");let feature_props=result.vars.VAR_DESCMO_FEATURE_PROPS;let feature_methods=result.vars.VAR_DESCMO_FEATURE_METHOD;let id=result.vars.VAR_DESCMO_FEATURE_CORRELATOR_ID;let ret={name:result.name,value:0,props:feature_props,correlator_id:id>>>0};DescMoActionHandler._executeDescmoSetAction(result).then(([mdmItem,actionName])=>{if(mdmItem){debug("B2D_DESCMO_SET_FEATURE OK mdmItem = "+JSON.stringify(mdmItem));debug("B2D_DESCMO_SET_FEATURE OK actionName = "+actionName);let extItem=null;if(actionName=='setBluetoothRestriction'){let app={'app://bluetooth.gaiamobile.org/manifest.webapp':mdmItem.operates[0].val?'Enable':'Disable'};extItem={"persistence":mdmItem.persistence,"reboot":false,"operates":[{"type":'setting',"key":"dm.apps.restriction","val":JSON.stringify(app)}]};}
if(actionName=='setApplicationRestriction'){DescMoActionHandler._rstApps.push(mdmItem);}else{DescMoActionHandler.actionQueue.push(mdmItem);}
if(extItem){DescMoActionHandler._rstApps.push(extItem);}
if(mdmItem.persistence==true){DescMoActionHandler.mergeMdmItem(actionName,mdmItem);if(extItem){DescMoActionHandler.mergeMdmItem('setApplicationRestriction',extItem);}}}
DescMoActionHandler._sendDescmoResult(ret);}).catch((e)=>{ret.value=e;DescMoActionHandler._sendDescmoResult(ret);debug("_procEvent_B2D_DESCMO_SET_FEATURE failed");});},getSettings:function(name){let defer=Promise.defer();let settingHandler={handle:function(sname,aResult){if(sname==name){if(aResult){defer.resolve(aResult);}else{defer.resolve(null);}}}
};gSettingsService.createLock().get(name,settingHandler);return defer.promise;},setSettings:function(name,val){let defer=Promise.defer();let settingHandler={handle:function(sname,aResult){defer.resolve();}, handleError:function(name){defer.reject();}};gSettingsService.createLock().set(name,val,settingHandler);return defer.promise;},_execAction:function(){DescMoActionHandler.clearActionQueue((item)=>{DescMoActionHandler._runMdmItem(item);});if(DescMoActionHandler._isMdmUpdated&&DescMoActionHandler._mdmUtils){DescMoActionHandler._isMdmUpdated=false;DescMoActionHandler._mdmUtils.saveMdmBackupFile(DescMoActionHandler.mdmItems);}
DescMoActionHandler.OmaService.onDmSessionEnd();},onSessionEnd:function(){debug("onSessionEnd");if(DescMoActionHandler._rstApps.length>0){DescMoActionHandler.getSettings('dm.apps.restriction').then((value)=>{let appRstItem={"operates":[{"type":'setting',"key":"dm.apps.restriction","val":value}]};while(DescMoActionHandler._rstApps.length>0){let sItem=DescMoActionHandler._rstApps.pop();if(sItem.operates){DescMoActionHandler.mergeMdmItemOperate(appRstItem.operates[0],sItem.operates[0]);}}
DescMoActionHandler.actionQueue.push(appRstItem);DescMoActionHandler._execAction();});}else{DescMoActionHandler._execAction();}},changeWallpaper:function(action){debug("changeWallpaper");let val=DescMoActionHandler._getActionValue(action,'uri');DescMoActionHandler.wallPaperPromise=Promise.defer();DescMoActionHandler.wallPaperPersistence=DescMoActionHandler._getActionValue(action,'persistenceRequired');if('N/A'==val){let mdmItem={"persistence":DescMoActionHandler.wallPaperPersistence,"reboot":false,"operates":[{"type":'ByteArray',"key":"dm.wallpaper.image","val":'N/A'}]};DescMoActionHandler.wallPaperPromise.resolve([mdmItem,action.method]);}else{debug("changeWallpaper _sendEvent D2B_HTTP_COMMAND_REQ");DescMoActionHandler.OmaService._sendEvent("D2B_HTTP_COMMAND_REQ","URL",val);}
return DescMoActionHandler.wallPaperPromise.promise;}, onWallPaperDownloaded:function(result){let respData=[];if('200'==result.vars.RESULT_CODE){respData=result.vars.RESPONSE_DATA;let mdmItem={"persistence":DescMoActionHandler.wallPaperPersistence,"reboot":false,"operates":[{"type":'ByteArray',"key":"dm.wallpaper.image","val":respData}]};if(DescMoActionHandler.wallPaperPersistence&&DescMoActionHandler.mdmItems['setWallpaperRestriction']){DescMoActionHandler.mdmItems['setWallpaperRestriction']=null;}
DescMoActionHandler.wallPaperPromise.resolve([mdmItem,'changeWallpaper']);}else{debug("_procEvent_B2D_HTTP_COMMAND_RESPONSE Error "+result.vars.RESULT_CODE);DescMoActionHandler.wallPaperPromise.reject(DM_DESCMO_RESULT_FAILED);}},setProtocolSettings:function(action){debug("setProtocolSettings");let val=DescMoActionHandler._getActionValue(action,'ProtocolSettings');val=val.toUpperCase();if(val=='IPV4'){val='IP';}
let mdmItem={'persistence':DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"dm.apnSettings.protocol","val":val}]};return Promise.resolve([mdmItem,action.method]);},setAOVServiceConfig:function(action){debug("setAOVServiceConfig");let mdmItem={'persistence':DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":AOV_CONFIG_KEY,"val":JSON.stringify(action.props)}]};return Promise.resolve([mdmItem,action.method]);},setApplicationRestriction:function(action){debug("setApplicationRestriction");let id=DescMoActionHandler._getActionValue(action,'applicationId');let enabled=DescMoActionHandler._getActionValue(action,'restriction');let persistence=DescMoActionHandler._getActionValue(action,'persistenceRequired');let apps={};apps[id]=enabled;let mdmItem={"persistence":persistence,"reboot":false,"operates":[{"type":'setting',"key":"dm.apps.restriction","val":JSON.stringify(apps)}]};return Promise.resolve([mdmItem,action.method]);},setAutoKeypadLockRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"pocketmode.autolock.enabled","val":val},{"type":'setting',"key":"dm.pocketmode.autolock.settings.ui","val":val?'gray':'show'}]};return Promise.resolve([mdmItem,action.method]);},setBaseSoundModel:function(action){debug("setBaseSoundModel");let File_Name=DescMoActionHandler._getActionValue(action,'File_Name');let File_URL=DescMoActionHandler._getActionValue(action,'File_URL');let File_Path=DescMoActionHandler._getActionValue(action,'File_Path');let persistence=DescMoActionHandler._getActionValue(action,'persistenceRequired');let defer=Promise.defer(); let delimiter="";if(!File_Path.endsWith("/")){delimiter="/";}
DescMoActionHandler._mdmUtils.downloadFile(File_URL,File_Path+delimiter,File_Name,'.pending').then((file)=>{debug("setBaseSoundModel downloadFile ok");if(persistence==true){debug("setBaseSoundModel savefile"); DescMoActionHandler._mdmUtils.persistBackupFile(File_Path+delimiter+File_Name,'a');}else{ DescMoActionHandler._mdmUtils.persistBackupFile(File_Path+delimiter+File_Name,'d');}
defer.resolve([null,action.method]);DescMoActionHandler._smfInf={path:File_Path+delimiter,name:File_Name,url:File_URL,suffix:'.pending'};DescMoActionHandler.setSettings(AOV_SMF_INFO_KEY,JSON.stringify(DescMoActionHandler._smfInf));DescMoActionHandler.ppmm.broadcastAsyncMessage('MDM_EVENT',{type:'mdm-update-smf',smfInfo:DescMoActionHandler._smfInf});}).catch(()=>{DescMoActionHandler._smfInf=null;debug("setBaseSoundModel downloadFile failed");defer.reject(DM_DESCMO_RESULT_FAILED);});return defer.promise;},updateSmf:function(){debug("updateSmf");let dataObj=DescMoActionHandler.OmaService.getPersistData();DescMoActionHandler._mdmUtils._writeFile(JSON.stringify(dataObj),DMAcc_Config_Nodes,'f',(data)=>{debug("save DMAcc nodes File ======= done");if('OK'!=data.result){debug("save DMAcc nodes File ======= failed");}});if(DescMoActionHandler._smfInf){try{DescMoActionHandler._mdmUtils.renameFile(DescMoActionHandler._smfInf.path,DescMoActionHandler._smfInf.name+DescMoActionHandler._smfInf.suffix,DescMoActionHandler._smfInf.name);}catch(e){debug("update sound model file failed!");}
DescMoActionHandler._smfInf=null;DescMoActionHandler.setSettings(AOV_SMF_INFO_KEY,"");}},setBluetoothRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":true,"operates":[{"type":'setting',"key":"bluetooth.enabled","val":val},{"type":'setting',"key":"dm.bluetooth.settings.ui","val":val?'show':'gray'},{"type":'setting',"key":"dm.bluetooth.quicksettings.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},setCameraRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'preference',"key":"dm.camera.enabled","val":val},{"type":'setting',"key":"dm.camera.vt.enabled","val":val},{"type":'setting',"key":"dm.camera.ui","val":val?'show':'gray'},{"type":'setting',"key":"dm.camera.vt.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},setDataCollectorRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"jio.phone.monitor.enabled","val":val},{"type":'setting',"key":"dm.datacollector.settings.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},setDataCollectorConfiguration:function(action){let val=action.rawxml;let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"jio.phone.monitor.list","val":val}]};return Promise.resolve([mdmItem,action.method]);},setDataConnectionRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":true,"operates":[{"type":'setting',"key":"ril.data.enabled","val":val},{"type":'setting',"key":"dm.data.settings.ui","val":val?'show':'gray'},{"type":'setting',"key":"dm.data.quicksettings.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},setDebuggerRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"debugger.remote-mode","val":val?"adb-devtools":'disabled'},{"type":'property',"key":"sys.adb.campaign","val":val?"1":"0"}]};return Promise.resolve([mdmItem,action.method]);},setDisplayTimeoutRestriction:function(action){let enable=DescMoActionHandler._getActionValue(action,'restriction');let displayFlag='gray';if(enable==true){displayFlag='show';}
let val=DescMoActionHandler._getActionValue(action,'displayTimeout');if(val<0){val=0;}
let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"screen.timeout","val":val},{"type":'setting',"key":"dm.screen.timeout.settings.ui","val":displayFlag}]};return Promise.resolve([mdmItem,action.method]);},setGpsRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":false,"operates":[{"type":'setting',"key":"geolocation.enabled","val":val},{"type":'setting',"key":"dm.geolocation.settings.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},_setTetheringRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":true,"operates":[{"type":'setting',"key":"dongle.tethering.support","val":!val}]};let relateItem=null;if('setPortableHotspotRestriction'==action.method){relateItem=DescMoActionHandler.mdmItems['setUsbTetheringRestriction'];}
if('setUsbTetheringRestriction'==action.method){relateItem=DescMoActionHandler.mdmItems['setPortableHotspotRestriction'];}
if(val==true&&relateItem){if(relateItem.operates[0].key=='dongle.tethering.support'){relateItem.operates.shift();}}
if(val==false&&relateItem){if(relateItem.operates[0].key=='dongle.tethering.support'){mdmItem.operates.shift();}else{if(relateItem.operates[0].val=='show'){mdmItem.operates.shift();relateItem.operates.unshift({"type":'setting',"key":"dongle.tethering.support","val":false});}}}
if('setUsbTetheringRestriction'==action.method){mdmItem.operates.push({"type":'setting',"key":"dm.tethering.usb.settings.ui","val":val?'show':'hide'});}else if('setPortableHotspotRestriction'==action.method){mdmItem.operates.push({"type":'setting',"key":"dm.tethering.wifi.settings.ui","val":val?'show':'hide'});}
return Promise.resolve([mdmItem,action.method]);},setUsbTetheringRestriction:function(action){return DescMoActionHandler._setTetheringRestriction(action);},setPortableHotspotRestriction:function(action){return DescMoActionHandler._setTetheringRestriction(action);},setScreenLockRestriction:function(action){debug("setScreenLockRestriction");let persistence=DescMoActionHandler._getActionValue(action,'persistenceRequired');let lockStatus=DescMoActionHandler._getActionValue(action,'restriction');let pin=DescMoActionHandler._getActionValue(action,'PIN');let mdmItem={"persistence":persistence,"reboot":false,"operates":[{"type":'raw',"key":action.method,"val":lockStatus}]};if(lockStatus=='LockWithoutPIN'){pin='locked';}
let settingObs={observe:function(subject,topic,data){switch(topic){case'mozsettings-changed':if("wrappedJSObject"in subject){subject=subject.wrappedJSObject;}
if(subject.isInternalChange){return;}
if(subject.key=='dm.lockscreen.passcode-lock.code'){if(mdmItem.operates[1]){mdmItem.operates[1].val=subject.value;}
DescMoActionHandler.mdmItems[action.method]=mdmItem;DescMoActionHandler._mdmUtils.saveMdmBackupFile(DescMoActionHandler.mdmItems);DescMoActionHandler.Services.obs.removeObserver(settingObs,'mozsettings-changed');}
break;default:break;}}};if(lockStatus=='LockWithoutPIN'||lockStatus=='LockWithPIN'){mdmItem.operates.push({"type":'setting',"key":"dm.lockscreen.passcode-lock.code","val":pin});DescMoActionHandler.Services.obs.addObserver(settingObs,'mozsettings-changed',false);return Promise.resolve([mdmItem,action.method]);}
let defer=Promise.defer();let settingHandler={handle:function(name,aResult){if(name=='dm.lockscreen.passcode-lock.code'){if(aResult==pin||(aResult=='locked'&&lockStatus=='UnlockWithoutPIN')){mdmItem.operates.push({"type":'setting',"key":"dm.lockscreen.passcode-lock.code","val":''});defer.resolve([mdmItem,action.method]);DescMoActionHandler.Services.obs.removeObserver(settingObs,'mozsettings-changed');}else{defer.reject(DM_DESCMO_RESULT_FAILED);}}}
};gSettingsService.createLock().get('dm.lockscreen.passcode-lock.code',settingHandler);return defer.promise;},setWifiRestriction:function(action){let val=DescMoActionHandler._getActionValue(action,'restriction');let mdmItem={"persistence":DescMoActionHandler._getActionValue(action,'persistenceRequired'),"reboot":true,"operates":[{"type":'setting',"key":"wifi.enabled","val":val},{"type":'setting',"key":"dm.wifi.settings.ui","val":val?'show':'gray'},{"type":'setting',"key":"dm.wifi.quicksettings.ui","val":val?'show':'gray'}]};return Promise.resolve([mdmItem,action.method]);},setWallpaperRestriction:function(action){debug("_procDescmoAction_setWallpaperRestriction action");let enabled=DescMoActionHandler._getActionValue(action,'restriction');let persistence=DescMoActionHandler._getActionValue(action,'persistenceRequired');let mdmItem={};if(enabled){if(persistence){DescMoActionHandler.mdmItems['changeWallpaper']=null;}
mdmItem={"persistence":persistence,"reboot":false,"operates":[{"type":'ByteArray',"key":"dm.wallpaper.image","val":'N/A'}]};}
return Promise.resolve([mdmItem,action.method]);},};