"use strict";const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{ComponentUtils}=ChromeUtils.import("resource://gre/modules/ComponentUtils.jsm");const{TelURIParser}=ChromeUtils.import("resource:///modules/TelURIParser.jsm");const{ActivityChannel}=ChromeUtils.import("resource://gre/modules/ActivityChannel.jsm");function TelProtocolHandler(){}
TelProtocolHandler.prototype={scheme:"tel",defaultPort:-1,protocolFlags:Ci.nsIProtocolHandler.URI_NORELATIVE|Ci.nsIProtocolHandler.URI_NOAUTH|Ci.nsIProtocolHandler.URI_LOADABLE_BY_ANYONE|Ci.nsIProtocolHandler.URI_DOES_NOT_RETURN_DATA,allowPort:()=>false,newURI(aSpec,aOriginCharset){let uri=Cc["@mozilla.org/network/simple-uri;1"].createInstance(Ci.nsIURI);uri.spec=aSpec;return uri;},newChannel(aURI,aLoadInfo){let number=TelURIParser.parseURI("tel",aURI.spec);if(number){return new ActivityChannel(aURI,aLoadInfo,"dial-handler",{number,type:"webtelephony/number",});}
throw Components.Exception("",Cr.NS_ERROR_ILLEGAL_VALUE);},classID:Components.ID("{782775dd-7351-45ea-aff1-0ffa872cfdd2}"),QueryInterface:ChromeUtils.generateQI([Ci.nsIProtocolHandler]),};this.NSGetFactory=ComponentUtils.generateNSGetFactory([TelProtocolHandler]);