"use strict";const{XPCOMUtils}=ChromeUtils.import("resource://gre/modules/XPCOMUtils.jsm");const{ComponentUtils}=ChromeUtils.import("resource://gre/modules/ComponentUtils.jsm");const{Services}=ChromeUtils.import("resource://gre/modules/Services.jsm");XPCOMUtils.defineLazyServiceGetter(this,"settings","@mozilla.org/settingsService;1","nsISettingsService");function debug(msg){log(msg);}
function log(msg){}
function formatStackFrame(aFrame){let functionName=aFrame.functionName||"<anonymous>";return("    at "+
functionName+" ("+
aFrame.filename+":"+
aFrame.lineNumber+":"+
aFrame.columnNumber+")");}
function ConsoleMessage(aMsg,aLevel){this.timeStamp=Date.now();this.msg=aMsg;switch(aLevel){case"error":case"assert":this.logLevel=Ci.nsIConsoleMessage.error;break;case"warn":this.logLevel=Ci.nsIConsoleMessage.warn;break;case"log":case"info":this.logLevel=Ci.nsIConsoleMessage.info;break;default:this.logLevel=Ci.nsIConsoleMessage.debug;break;}}
function toggleUnrestrictedDevtools(unrestricted){Services.prefs.setBoolPref("devtools.debugger.forbid-certified-apps",!unrestricted);Services.prefs.setBoolPref("dom.apps.developer_mode",unrestricted);Services.prefs.setBoolPref("network.disable.ipc.security",unrestricted);Services.prefs.setBoolPref("dom.webcomponents.enabled",unrestricted);let lock=settings.createLock();lock.set("developer.menu.enabled",unrestricted,null);lock.set("devtools.unrestricted",unrestricted,null);}
ConsoleMessage.prototype={QueryInterface:ChromeUtils.generateQI([Ci.nsIConsoleMessage]),toString(){return this.msg;},};const gFactoryResetFile="__post_reset_cmd__";function ProcessGlobal(){}
ProcessGlobal.prototype={classID:Components.ID("{1a94c87a-5ece-4d11-91e1-d29c29f21b28}"),QueryInterface:ChromeUtils.generateQI([Ci.nsIObserver,Ci.nsISupportsWeakReference,]),wipeDir(path){log("wipeDir "+path);let dir=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);dir.initWithPath(path);if(!dir.exists()||!dir.isDirectory()){return;}
let entries=dir.directoryEntries;while(entries.hasMoreElements()){let file=entries.getNext().QueryInterface(Ci.nsIFile);log("Deleting "+file.path);try{file.remove(true);}catch(e){}}},processCommandsFile(text){log("processCommandsFile "+text);let lines=text.split("\n");lines.forEach(line=>{log(line);let params=line.split(" ");switch(params[0]){case"root":log("unrestrict devtools");toggleUnrestrictedDevtools(true);break;case"wipe":this.wipeDir(params[1]); case"normal":log("restrict devtools");toggleUnrestrictedDevtools(false);break;}});},cleanupAfterFactoryReset(){log("cleanupAfterWipe start");const{OS}=ChromeUtils.import("resource://gre/modules/osfile.jsm");let dir=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);dir.initWithPath("/persist");var postResetFile=dir.exists()?OS.Path.join("/persist",gFactoryResetFile):OS.Path.join("/cache",gFactoryResetFile);let file=Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsIFile);file.initWithPath(postResetFile);if(!file.exists()){debug("No additional command.");return;}
let promise=OS.File.read(postResetFile);promise.then(array=>{file.remove(false);let decoder=new TextDecoder();this.processCommandsFile(decoder.decode(array));},function onError(error){debug("Error: "+error);});log("cleanupAfterWipe end.");},observe:function pg_observe(subject,topic,data){switch(topic){case"app-startup":{Services.obs.addObserver(this,"console-api-log-event");let inParent=Services.appinfo.processType==Ci.nsIXULRuntime.PROCESS_TYPE_DEFAULT;if(inParent){this._initActor();Services.ppmm.addMessageListener("getProfD",()=>{return Services.dirsvc.get("ProfD",Ci.nsIFile).path;});this.cleanupAfterFactoryReset();}
break;}
case"console-api-log-event":{
let message=subject.wrappedJSObject;let args=message.arguments;let stackTrace="";if(message.stacktrace&&(message.level=="assert"||message.level=="error"||message.level=="trace")){stackTrace=Array.prototype.map.call(message.stacktrace,formatStackFrame).join("\n");}else{stackTrace=formatStackFrame(message);}
if(stackTrace){args.push("\n"+stackTrace);}
let msg="Content JS "+
message.level.toUpperCase()+": "+
Array.prototype.join(args," ");Services.console.logMessage(new ConsoleMessage(msg,message.level));break;}}},_initActor(){ const{ActorManagerParent}=ChromeUtils.import("resource://gre/modules/ActorManagerParent.jsm");let JSWINDOWACTORS={AudioVolumeControlOverride:{parent:{moduleURI:"resource://gre/actors/AudioVolumeControlOverrideParent.jsm",},child:{moduleURI:"resource://gre/actors/AudioVolumeControlOverrideChild.jsm",events:{fullscreenchange:{},},},allFrames:true,},SelectionAction:{parent:{moduleURI:"resource://gre/actors/SelectionActionParent.jsm",},child:{moduleURI:"resource://gre/actors/SelectionActionChild.jsm",events:{mozcaretstatechanged:{mozSystemGroup:true},},},allFrames:true,},VoiceInputStyle:{child:{moduleURI:"resource://gre/actors/VoiceInputStyleChild.jsm",events:{IMEFocus:{},IMEBlur:{},},},allFrames:true,includeChrome:true,},WebViewForContent:{child:{moduleURI:"resource://gre/actors/WebViewForContentChild.jsm",events:{DOMContentLoaded:{capture:true},},},allFrames:true,},Prompt:{parent:{moduleURI:"resource://gre/actors/PromptParent.jsm",},includeChrome:true,allFrames:true,},};ActorManagerParent.addJSWindowActors(JSWINDOWACTORS);},};this.NSGetFactory=ComponentUtils.generateNSGetFactory([ProcessGlobal]);